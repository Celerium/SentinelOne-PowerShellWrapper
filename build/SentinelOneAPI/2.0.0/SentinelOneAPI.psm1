#Region '.\Private\apiCalls\ConvertTo-SentinelOneQueryString.ps1' 0
function ConvertTo-SentinelOneQueryString {
<#
    .SYNOPSIS
        Converts uri filter parameters

    .DESCRIPTION
        The ConvertTo-SentinelOneQueryString cmdlet converts & formats uri filter parameters
        from a function which are later used to make the full resource uri for
        an API call

        This is an internal helper function the ties in directly with the
        Invoke-SentinelOneRequest & any public functions that define parameters

    .PARAMETER uri_Filter
        Hashtable of values to combine a functions parameters with
        the resource_Uri parameter.

        This allows for the full uri query to occur

    .PARAMETER resource_Uri
        Defines the short resource uri (url) to use when creating the API call

    .EXAMPLE
        ConvertTo-SentinelOneQueryString -uri_Filter $uri_Filter -resource_Uri '/account'

        Example: (From public function)
            $uri_Filter = @{}

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){
                if( $excludedParameters -contains $Key.Key ){$null}
                else{ $uri_Filter += @{ $Key.Key = $Key.Value } }
            }

            1x key = https://api-us.SentinelOne.com/v3/account?accountId=12345
            2x key = https://api-us.SentinelOne.com/v3/account?accountId=12345&details=True

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/internal/ConvertTo-SentinelOneQueryString.html

#>

    [CmdletBinding()]
    [Alias("ConvertTo-S1QueryString")]
    param(
        [Parameter(Mandatory = $true, ValueFromPipeline = $true)]
        [hashtable]$uri_Filter,

        [Parameter(Mandatory = $true)]
        [String]$resource_Uri
    )

    begin {}

    process {

        if (-not $uri_Filter) {
            return ""
        }

        $excludedParameters =   'Debug', 'ErrorAction', 'ErrorVariable', 'InformationAction', 'InformationVariable',
                                'OutBuffer', 'OutVariable', 'PipelineVariable', 'Verbose', 'WarningAction', 'WarningVariable',
                                'allPages'

        $query_Parameters = [System.Web.HttpUtility]::ParseQueryString([String]::Empty)

        ForEach ( $Key in $uri_Filter.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){

                Write-Verbose "[ $($MyInvocation.MyCommand.Name) ] - [ $($Key.Key) ] is an array parameter"

                foreach ($Value in $Key.Value) {
                    $query_Parameters.Add($Key.Key, $Value)
                }

            }
            elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){

                Write-Verbose "[ $($MyInvocation.MyCommand.Name) ] - [ $($Key.Key) ] is a dateTime parameter"

                if ($Key.Key -like "*fromDate*" -or $Key.Key -like "*thruDate*" ){
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-dd')
                }
                else{
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.fffZ')
                }

                Write-Verbose "[ $($MyInvocation.MyCommand.Name) ] - Converting [ $($Key.Value) ] to [ $universalTime ]"
                if ($new_KeyName){  $query_Parameters.Add($new_KeyName, $universalTime) }
                else{               $query_Parameters.Add($Key.Key, $universalTime) }

            }
            else{
                $query_Parameters.Add($Key.Key, $Key.Value)
            }

        }

        # Build the request and load it with the query string.
        $uri_Request        = [System.UriBuilder]($SentinelOne_Base_URI + $resource_Uri)
        $uri_Request.Query  = $query_Parameters.ToString()

        return $uri_Request

    }

    end {}

}
#EndRegion '.\Private\apiCalls\ConvertTo-SentinelOneQueryString.ps1' 114
#Region '.\Private\apiCalls\Invoke-SentinelOneRequest.ps1' 0
function Invoke-SentinelOneRequest {
<#
    .SYNOPSIS
        Makes an API request

    .DESCRIPTION
        The Invoke-SentinelOneRequest cmdlet invokes an API request to SentinelOne API.

        This is an internal function that is used by all public functions

        As of 2023-08 the SentinelOne v1 API only supports GET requests

    .PARAMETER method
        Defines the type of API method to use

        Allowed values:
        'GET'

    .PARAMETER resource_Uri
        Defines the resource uri (url) to use when creating the API call

    .PARAMETER uri_Filter
        Used with the internal function [ ConvertTo-SentinelOneQueryString ] to combine
        a functions parameters with the resource_Uri parameter.

        This allows for the full uri query to occur

        The full resource path is made with the following data
        $SentinelOne_Base_URI + $resource_Uri + ConvertTo-SentinelOneQueryString

    .PARAMETER data
        Place holder parameter to use when other methods are supported
        by the SentinelOne v1 API

    .PARAMETER allPages
        Returns all items from an endpoint

        When using this parameter there is no need to use either the page or perPage
        parameters

    .EXAMPLE
        Invoke-SentinelOneRequest -method GET -resource_Uri '/account' -uri_Filter $uri_Filter

        Invoke a rest method against the defined resource using any of the provided parameters

        Example:
            Name                           Value
            ----                           -----
            Method                         GET
            Uri                            https://api-us.SentinelOne.com/v3/account?accountId=12345&details=True
            Headers                        {Authorization = Bearer 123456789}
            Body


    .NOTES
        2023-11, need to reevaluated the allPages loop to see if it can be done better

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/internal/Invoke-SentinelOneRequest.html

#>

    [CmdletBinding()]
    [Alias("Invoke-S1Request")]
    param (
        [Parameter( Mandatory = $false) ]
        [ValidateSet( 'DELETE', 'GET', 'POST', 'PUT')]
        [String]$method = 'GET',

        [Parameter(Mandatory = $true)]
        [String]$resource_Uri,

        [Parameter( Mandatory = $false) ]
        [Hashtable]$uri_Filter = $null,

        [Parameter( Mandatory = $false) ]
        [Hashtable]$data = $null,

        [Parameter( Mandatory = $false) ]
        [Switch]$allPages

    )

    begin {}

    process {

        # Load Web assembly when needed as PowerShell Core has the assembly preloaded
        if ( !("System.Web.HttpUtility" -as [Type]) ) {
            Add-Type -Assembly System.Web
        }

        $query_string = ConvertTo-SentinelOneQueryString -uri_Filter $uri_Filter -resource_Uri $resource_Uri

        Set-Variable -Name 'S1_queryString' -Value $query_string -Scope Global -Force

        if ($null -eq $data) {
            $body = $null
        } else {
            $body = @{'data'= $data} | ConvertTo-Json -Depth $SentinelOne_JSON_Conversion_Depth
        }

        try {
            $Api_Token = Get-SentinelOneAPIKey -plainText

            $parameters = [ordered] @{
                "Method"    = $method
                "Uri"       = $query_string.Uri
                "Headers"   = @{ 'Authorization' = "ApiToken $Api_Token" }
                "Body"      = $body
            }

                if ( $method -ne 'GET' ) {
                    $parameters['ContentType'] = 'application/json; charset=utf-8'
                }

            Set-Variable -Name 'S1_invokeParameters' -Value $parameters -Scope Global -Force

            if ($allPages){

                Write-Verbose "[ $($MyInvocation.MyCommand.Name) ] - Gathering all items from [ $( $parameters.uri.LocalPath ) ] "

                $page_number        =  1
                $page_limit         = ($query_string.Uri.ToString() -split '\?' | Select-String limit) -replace "\D+",''
                $all_responseData   = [System.Collections.Generic.List[object]]::new()

                do {

                    $current_page = Invoke-RestMethod @parameters -ErrorAction Stop

                    #S1 returns 0 total items when using cursor (some requests return an extra page of empty objects)
                    if (!$total_Pages){
                        $total_Pages = $( [math]::ceiling( $($current_page.pagination.totalItems)/$page_limit ) )
                    }
                    Write-Verbose "[ $page_number ] of [ $total_Pages ] pages"

                        foreach ($item in $current_page.data){
                            $all_responseData.add($item)
                        }

                    $parameters.Remove('Uri') > $null
                    $parameters.Add('Uri', "$( $query_string.Uri.ToString() + "&cursor=$($current_page.pagination.nextCursor)" )" )

                    $page_number++

                } while ( $null -ne $current_page.pagination.nextCursor )

            }
            else{
                Write-Verbose "[ $($MyInvocation.MyCommand.Name) ] - Gathering items from [ $( $parameters.uri.LocalPath ) ] "

                $api_response = Invoke-RestMethod @parameters -ErrorAction Stop
            }

        }
        catch {

            $exceptionError = $_.Exception.Message
            Write-Warning 'The [ S1_invokeParameters, S1_queryString, & S1_CmdletNameParameters ] variables can provide extra details'

            switch -Wildcard ($exceptionError) {
                '*404*' { Write-Error "Invoke-SentinelOneRequest : Uri not found - [ $resource_Uri ]" }
                '*429*' { Write-Error 'Invoke-SentinelOneRequest : API rate limited' }
                '*504*' { Write-Error "Invoke-SentinelOneRequest : Gateway Timeout" }
                default { Write-Error $_ }
            }

        }
        finally {

            $Auth = $S1_invokeParameters['headers']['Authorization']
            $S1_invokeParameters['headers']['Authorization'] = $Auth.Substring( 0, [Math]::Min($Auth.Length, 15) ) + '*******'

        }


        if($allPages){

            Set-Variable -Name test_all_responseData -Value $all_responseData -Scope Global -Force

            #Making output consistent
            if( $null -eq $all_responseData ){
                $api_response = $null
            }
            else{
                $api_response = [PSCustomObject]@{
                    pagination  = $null
                    data        = $all_responseData
                }
            }

            return $api_response

        }
        else{ return $api_response }

    }

    end {}

}
#EndRegion '.\Private\apiCalls\Invoke-SentinelOneRequest.ps1' 202
#Region '.\Private\apiKeys\Add-SentinelOneAPIKey.ps1' 0
function Add-SentinelOneAPIKey {
<#
    .SYNOPSIS
        Sets your API key used to authenticate all API calls.

    .DESCRIPTION
        The Add-SentinelOneAPIKey cmdlet sets your API key which is used to authenticate all API calls made to SentinelOne.
        Once the API key is defined by Add-SentinelOneAPIKey, it is encrypted using SecureString.

        SentinelOne API keys can be generated via the SentinelOne web interface at User > My User > Options.

    .PARAMETER Api_Key
        Define your API key that was generated from SentinelOne.

    .EXAMPLE
        Add-SentinelOneAPIKey

        Prompts to enter in the API key

    .EXAMPLE
        Add-SentinelOneAPIKey -Api_key 'your_api_key'

        The SentinelOne API will use the string entered into the [ -Api_Key ] parameter.

    .EXAMPLE
        '12345' | Add-SentinelOneAPIKey

        The Add-SentinelOneAPIKey function will use the string passed into it as its API key.

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/internal/Add-SentinelOneAPIKey.html

#>

    [CmdletBinding()]
    [Alias( 'Add-S1APIKey' )]
    Param (
        [Parameter(Mandatory = $false, ValueFromPipeline = $true)]
        [AllowEmptyString()]
        [string]$Api_Key
    )

    begin {}

    process{

        if ($Api_Key) {
            $x_api_key = ConvertTo-SecureString $Api_Key -AsPlainText -Force

            Set-Variable -Name 'SentinelOne_API_Key' -Value $x_api_key -Option ReadOnly -Scope Global -Force
        }
        else {
            $x_api_key = Read-Host -Prompt 'Please enter your API key' -AsSecureString

            Set-Variable -Name 'SentinelOne_API_Key' -Value $x_api_key -Option ReadOnly -Scope Global -Force
        }

    }

    end {}

}
#EndRegion '.\Private\apiKeys\Add-SentinelOneAPIKey.ps1' 66
#Region '.\Private\apiKeys\Get-SentinelOneAPIKey.ps1' 0
function Get-SentinelOneAPIKey {
<#
    .SYNOPSIS
        Gets the SentinelOne API key global variable.

    .DESCRIPTION
        The Get-SentinelOneAPIKey cmdlet gets the SentinelOne API key global variable and returns it as a SecureString.

    .PARAMETER PlainText
        Decrypt and return the API key in plain text.

    .EXAMPLE
        Get-SentinelOneAPIKey

        Gets the SentinelOne API key global variable and returns it as a SecureString.

    .EXAMPLE
        Get-SentinelOneAPIKey -plainText

        Gets and decrypts the API key from the global variable and returns the API key in plain text

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/internal/Get-SentinelOneAPIKey.html

#>

    [CmdletBinding()]
    [Alias( 'Get-S1APIKey' )]
    Param (
        [Parameter(Mandatory = $false)]
        [Switch]$plainText
    )

    begin {}

    process {

        try {
            if ($SentinelOne_API_Key){

                if ($plainText){
                    $Api_Key = [System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($SentinelOne_API_Key)
                    ( [System.Runtime.InteropServices.Marshal]::PtrToStringAuto($Api_Key) ).ToString()
                }
                else{$SentinelOne_API_Key}

            }
            else{ Write-Warning 'The SentinelOne API key is not set. Run Add-SentinelOneAPIKey to set the API key.' }
        }
        catch {
            Write-Error $_
        }
        finally {
            if ($Api_Key) {
                [System.Runtime.InteropServices.Marshal]::ZeroFreeBSTR($Api_Key)
            }
        }

    }

    end {}

}
#EndRegion '.\Private\apiKeys\Get-SentinelOneAPIKey.ps1' 67
#Region '.\Private\apiKeys\Remove-SentinelOneAPIKey.ps1' 0
function Remove-SentinelOneAPIKey {
<#
    .SYNOPSIS
        Removes the SentinelOne API key global variable.

    .DESCRIPTION
        The Remove-SentinelOneAPIKey cmdlet removes the SentinelOne API key global variable.

    .EXAMPLE
        Remove-SentinelOneAPIKey

        Removes the SentinelOne API key global variable.

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/internal/Remove-SentinelOneAPIKey.html

#>

    [cmdletbinding(SupportsShouldProcess)]
    [Alias( 'Remove-S1APIKey' )]
    Param ()

    begin {}

    process {

        switch ([bool]$SentinelOne_API_Key) {
            $true   { Remove-Variable -Name 'SentinelOne_API_Key' -Scope Global -Force -WhatIf:$WhatIfPreference }
            $false  { Write-Warning 'The SentinelOne API key variable is not set. Nothing to remove' }
        }

    }

    end {}

}
#EndRegion '.\Private\apiKeys\Remove-SentinelOneAPIKey.ps1' 40
#Region '.\Private\apiKeys\Test-SentinelOneAPIKey.ps1' 0
function Test-SentinelOneAPIKey {
<#
    .SYNOPSIS
        Test the SentinelOne API key

    .DESCRIPTION
        The Test-SentinelOneAPIKey cmdlet tests the base URI & API key that
        was defined in the Add-SentinelOneBaseURI & Add-SentinelOneAPIKey cmdlets.

    .PARAMETER base_uri
        Define the base URI for the SentinelOne API connection
        using SentinelOne's URI or a custom URI

        This parameter by default uses the value defined
        in the Add-SentinelOneBaseURI function

    .EXAMPLE
        Test-SentinelOneApiKey

        Tests the base URI & API key that was defined in the
        Add-SentinelOneBaseURI & Add-SentinelOneAPIKey cmdlets.

    .EXAMPLE
        Test-SentinelOneApiKey -base_uri http://myapi.gateway.celerium.org

        Tests the base URI & API key that was defined in the
        Add-SentinelOneBaseURI & Add-SentinelOneAPIKey cmdlets.

        The full base uri test path in this example is:
            http://myapi.gateway.celerium.org/resource

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/internal/Test-SentinelOneApiKey.html

#>

    [CmdletBinding()]
    [Alias( 'Test-S1APIKey' )]
    Param (
        [parameter(Mandatory = $false)]
        [string]$base_uri = $SentinelOne_Base_URI
    )

    begin {  $resource_uri = "/accounts" }

    process {

        Write-Verbose "Testing API key against [ $($base_uri + $resource_uri) ]"

        try {

            if ($SentinelOne_API_Key) {

                $Api_Token = Get-SentinelOneAPIKey -plainText

                $S1_Headers = New-Object "System.Collections.Generic.Dictionary[[String],[String]]"
                $S1_Headers.Add("Content-Type", 'application/json')
                $S1_Headers.Add('Authorization', "ApiToken $Api_Token")

                $rest_output = Invoke-WebRequest -Method Get -Uri ($base_uri + $resource_uri) -Headers $S1_Headers -ErrorAction Stop

                Set-variable -Name test_restOutput -Value $rest_output -Scope Global -Force

            }
            else { Throw 'The SentinelOne API key is not set. Run Add-SentinelOneAPIKey to set the API key.'  }

        }
        catch {

            [PSCustomObject]@{
                Method              = $_.Exception.Response.Method
                StatusCode          = $_.Exception.Response.StatusCode.value__
                StatusDescription   = $_.Exception.Response.StatusDescription
                Message             = $_.Exception.Message
                URI                 = $($base_uri + $resource_uri)
            }

        } finally {
            if ($S1_Headers){
                Remove-Variable -Name S1_Headers -Force
            }
        }

        if ($rest_output){
            $data = @{}
            $data = $rest_output

            [PSCustomObject]@{
                originalUri             = $($base_uri + $resource_uri)
                responseUri             = $data.BaseResponse.ResponseUri.AbsoluteUri
                responsePort            = $data.BaseResponse.ResponseUri.Port
                statusCode              = $data.StatusCode
                statusDescription       = $data.StatusDescription
                'contentType'           = $data.headers.'Content-Type'
                'accessControlOrigin'   = $data.headers.'Access-Control-Allow-Origin'
                'xRQID'                 = $data.headers.'X-RQID'
                raw                     = $data
            }
        }

    }

    end {}

}
#EndRegion '.\Private\apiKeys\Test-SentinelOneAPIKey.ps1' 109
#Region '.\Private\baseUri\Add-SentinelOneBaseURI.ps1' 0
function Add-SentinelOneBaseURI {
<#
    .SYNOPSIS
        Sets the base URI for the SentinelOne API connection.

    .DESCRIPTION
        The Add-SentinelOneBaseURI cmdlet sets the base URI which is later used to construct the full URI for all API calls.

    .PARAMETER baseMgmt_uri
        Define the base mgmt URI for the SentinelOne API connection using SentinelOne's URI or a custom URI.

        This parameter is required

    .PARAMETER baseApi_uri
        Define the base api URI which is then append to the end of the baseMgmt_uri

        The default value is '/web/api/v2.1'

    .EXAMPLE
        Add-SentinelOneBaseURI -baseMgmt_uri 'https://MGMT-Console-URI.sentinelone.net'

        The base URI will use https://MGMT-Console-URI.sentinelone.net/web/api/v2.1

    .EXAMPLE
        Add-SentinelOneBaseURI -baseMgmt_uri 'https://MGMT-Console-URI.sentinelone.net' -baseApi_uri '/web/api/v1.0'

        The base URI will use https://MGMT-Console-URI.sentinelone.net/web/api/v1.0

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/internal/Add-SentinelOneBaseURI.html

#>

    [CmdletBinding()]
    [Alias( 'Add-S1BaseURI' )]
    Param (
        [parameter(Mandatory = $true, ValueFromPipeline = $true)]
        [string]$baseMgmt_uri,

        [parameter(Mandatory = $false)]
        [string]$baseApi_uri = '/web/api/v2.1'
    )

    begin {}

    process{

        # Trim superfluous forward slash from address (if applicable)
        if ($baseMgmt_uri[$baseMgmt_uri.Length-1] -eq "/") {
            $baseMgmt_uri = $baseMgmt_uri.Substring(0,$baseMgmt_uri.Length-1)
        }

        if ($baseApi_uri[$baseApi_uri.Length-1] -eq "/") {
            $baseApi_uri = $baseApi_uri.Substring(0,$baseApi_uri.Length-1)
        }

        Set-Variable -Name 'SentinelOne_Base_URI' -Value ( $baseMgmt_uri + $baseApi_uri ) -Option ReadOnly -Scope Global -Force

    }

    end {}

}
#EndRegion '.\Private\baseUri\Add-SentinelOneBaseURI.ps1' 67
#Region '.\Private\baseUri\Get-SentinelOneBaseURI.ps1' 0
function Get-SentinelOneBaseURI {
<#
    .SYNOPSIS
        Shows the SentinelOne base URI global variable.

    .DESCRIPTION
        The Get-SentinelOneBaseURI cmdlet shows the SentinelOne base URI global variable value.

    .EXAMPLE
        Get-SentinelOneBaseURI

        Shows the SentinelOne base URI global variable value.

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/internal/Get-SentinelOneBaseURI.html

#>

    [CmdletBinding()]
    [Alias( 'Get-S1BaseURI' )]
    Param ()

    begin {}

    process {

        switch ([bool]$SentinelOne_Base_URI) {
            $true   { $SentinelOne_Base_URI }
            $false  { Write-Warning "The SentinelOne base URI is not set. Run Add-SentinelOneBaseURI to set the base URI." }
        }

    }

    end {}

}
#EndRegion '.\Private\baseUri\Get-SentinelOneBaseURI.ps1' 40
#Region '.\Private\baseUri\Remove-SentinelOneBaseURI.ps1' 0
function Remove-SentinelOneBaseURI {
<#
    .SYNOPSIS
        Removes the SentinelOne base URI global variable.

    .DESCRIPTION
        The Remove-SentinelOneBaseURI cmdlet removes the SentinelOne base URI global variable.

    .EXAMPLE
        Remove-SentinelOneBaseURI

        Removes the SentinelOne base URI global variable.

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/internal/Remove-SentinelOneBaseURI.html

#>

    [cmdletbinding(SupportsShouldProcess)]
    [Alias( 'Remove-S1BaseURI' )]
    Param ()

    begin {}

    process {

        switch ([bool]$SentinelOne_Base_URI) {
            $true   { Remove-Variable -Name "SentinelOne_Base_URI" -Scope global -Force }
            $false  { Write-Warning "The SentinelOne base URI variable is not set. Nothing to remove" }
        }

    }

    end {}

}
#EndRegion '.\Private\baseUri\Remove-SentinelOneBaseURI.ps1' 40
#Region '.\Private\moduleSettings\Export-SentinelOneModuleSettings.ps1' 0
function Export-SentinelOneModuleSettings {
<#
    .SYNOPSIS
        Exports the SentinelOne BaseURI, API, & JSON configuration information to file.

    .DESCRIPTION
        The Export-SentinelOneModuleSettings cmdlet exports the SentinelOne BaseURI, API, & JSON configuration information to file.

        Making use of PowerShell's System.Security.SecureString type, exporting module settings encrypts your API key in a format
        that can only be unencrypted with the your Windows account as this encryption is tied to your user principal.
        This means that you cannot copy your configuration file to another computer or user account and expect it to work.

    .PARAMETER SentinelOneConfPath
        Define the location to store the SentinelOne configuration file.

        By default the configuration file is stored in the following location:
            $env:USERPROFILE\SentinelOneAPI

    .PARAMETER SentinelOneConfFile
        Define the name of the SentinelOne configuration file.

        By default the configuration file is named:
            config.psd1

    .EXAMPLE
        Export-SentinelOneModuleSettings

        Validates that the BaseURI, API, and JSON depth are set then exports their values
        to the current user's SentinelOne configuration file located at:
            $env:USERPROFILE\SentinelOneAPI\config.psd1

    .EXAMPLE
        Export-SentinelOneModuleSettings -SentinelOneConfPath C:\SentinelOneAPI -SentinelOneConfFile MyConfig.psd1

        Validates that the BaseURI, API, and JSON depth are set then exports their values
        to the current user's SentinelOne configuration file located at:
            C:\SentinelOneAPI\MyConfig.psd1

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/internal/Export-SentinelOneModuleSettings.html
#>

    [CmdletBinding()]
    [Alias( 'Export-S1ModuleSettings' )]
    Param (
        [Parameter(Mandatory = $false)]
        [string]$SentinelOneConfPath = $(Join-Path -Path $home -ChildPath $(if ($IsWindows -or $PSEdition -eq 'Desktop'){"SentinelOneAPI"}else{".SentinelOneAPI"}) ),

        [Parameter(Mandatory = $false)]
        [string]$SentinelOneConfFile = 'config.psd1'
    )

    begin {}

    process {

        Write-Warning "Secrets are stored using Windows Data Protection API (DPAPI)"
        Write-Warning "DPAPI provides user context encryption in Windows but NOT in other operating systems like Linux or UNIX. It is recommended to use a more secure & cross-platform storage method"

        $SentinelOneConfig = Join-Path -Path $SentinelOneConfPath -ChildPath $SentinelOneConfFile

        # Confirm variables exist and are not null before exporting
        if ($SentinelOne_Base_URI -and $SentinelOne_API_Key -and $SentinelOne_JSON_Conversion_Depth) {
            $secureString = $SentinelOne_API_KEY | ConvertFrom-SecureString

            if ($IsWindows -or $PSEdition -eq 'Desktop') {
                New-Item -Path $SentinelOneConfPath -ItemType Directory -Force | ForEach-Object { $_.Attributes = $_.Attributes -bor "Hidden" }
            }
            else{
                New-Item -Path $SentinelOneConfPath -ItemType Directory -Force
            }
@"
    @{
        SentinelOne_Base_URI = '$SentinelOne_Base_URI'
        SentinelOne_API_Key = '$secureString'
        SentinelOne_JSON_Conversion_Depth = '$SentinelOne_JSON_Conversion_Depth'
    }
"@ | Out-File -FilePath $SentinelOneConfig -Force
        }
        else {
            Write-Error "Failed to export SentinelOne module settings to [ $SentinelOneConfPath\$SentinelOneConfFile ]"
            Write-Error $_
            exit 1
        }

    }

    end {}

}
#EndRegion '.\Private\moduleSettings\Export-SentinelOneModuleSettings.ps1' 94
#Region '.\Private\moduleSettings\Get-SentinelOneModuleSettings.ps1' 0
function Get-SentinelOneModuleSettings {
<#
    .SYNOPSIS
        Gets the saved SentinelOne configuration settings

    .DESCRIPTION
        The Get-SentinelOneModuleSettings cmdlet gets the saved SentinelOne configuration settings

        By default the configuration file is stored in the following location:
            $env:USERPROFILE\SentinelOneAPI

    .PARAMETER SentinelOneConfPath
        Define the location to store the SentinelOne configuration file.

        By default the configuration file is stored in the following location:
            $env:USERPROFILE\SentinelOneAPI

    .PARAMETER SentinelOneConfFile
        Define the name of the SentinelOne configuration file.

        By default the configuration file is named:
            config.psd1

    .PARAMETER openConfFile
        Opens the SentinelOne configuration file

    .EXAMPLE
        Get-SentinelOneModuleSettings

        Gets the contents of the configuration file that was created with the
        Export-SentinelOneModuleSettings

        The default location of the SentinelOne configuration file is:
            $env:USERPROFILE\SentinelOneAPI\config.psd1

    .EXAMPLE
        Get-SentinelOneModuleSettings -SentinelOneConfPath C:\SentinelOneAPI -SentinelOneConfFile MyConfig.psd1 -openConfFile

        Opens the configuration file from the defined location in the default editor

        The location of the SentinelOne configuration file in this example is:
            C:\SentinelOneAPI\MyConfig.psd1

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/internal/Get-SentinelOneModuleSettings.html
#>

    [CmdletBinding()]
    [Alias( 'Get-S1ModuleSettings' )]
    Param (
        [Parameter(Mandatory = $false)]
        [String]$SentinelOneConfPath = $(Join-Path -Path $home -ChildPath $(if ($IsWindows -or $PSEdition -eq 'Desktop'){"SentinelOneAPI"}else{".SentinelOneAPI"}) ),

        [Parameter(Mandatory = $false)]
        [String]$SentinelOneConfFile = 'config.psd1',

        [Parameter(Mandatory = $false)]
        [Switch]$openConfFile
    )

    begin{
        $SentinelOneConfig = Join-Path -Path $SentinelOneConfPath -ChildPath $SentinelOneConfFile
    }

    process{

        if ( Test-Path -Path $SentinelOneConfig ) {

            if($openConfFile){
                Invoke-Item -Path $SentinelOneConfig
            }
            else{
                Import-LocalizedData -BaseDirectory $SentinelOneConfPath -FileName $SentinelOneConfFile
            }

        }
        else {
            Write-Verbose "No configuration file found at [ $SentinelOneConfig ]"
        }

    }

    end{}

}
#EndRegion '.\Private\moduleSettings\Get-SentinelOneModuleSettings.ps1' 89
#Region '.\Private\moduleSettings\Import-SentinelOneModuleSettings.ps1' 0
function Import-SentinelOneModuleSettings {
<#
    .SYNOPSIS
        Imports the SentinelOne BaseURI, API, & JSON configuration information to the current session.

    .DESCRIPTION
        The Import-SentinelOneModuleSettings cmdlet imports the SentinelOne BaseURI, API, & JSON configuration
        information stored in the SentinelOne configuration file to the users current session.

        By default the configuration file is stored in the following location:
            $env:USERPROFILE\SentinelOneAPI

    .PARAMETER SentinelOneConfPath
        Define the location to store the SentinelOne configuration file.

        By default the configuration file is stored in the following location:
            $env:USERPROFILE\SentinelOneAPI

    .PARAMETER SentinelOneConfFile
        Define the name of the SentinelOne configuration file.

        By default the configuration file is named:
            config.psd1

    .EXAMPLE
        Import-SentinelOneModuleSettings

        Validates that the configuration file created with the Export-SentinelOneModuleSettings cmdlet exists
        then imports the stored data into the current users session.

        The default location of the SentinelOne configuration file is:
            $env:USERPROFILE\SentinelOneAPI\config.psd1

    .EXAMPLE
        Import-SentinelOneModuleSettings -SentinelOneConfPath C:\SentinelOneAPI -SentinelOneConfFile MyConfig.psd1

        Validates that the configuration file created with the Export-SentinelOneModuleSettings cmdlet exists
        then imports the stored data into the current users session.

        The location of the SentinelOne configuration file in this example is:
            C:\SentinelOneAPI\MyConfig.psd1

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/internal/Import-SentinelOneModuleSettings.html
#>

    [CmdletBinding()]
    [Alias( 'Import-S1ModuleSettings' )]
    Param (
        [Parameter(Mandatory = $false)]
        [string]$SentinelOneConfPath = $(Join-Path -Path $home -ChildPath $(if ($IsWindows -or $PSEdition -eq 'Desktop'){"SentinelOneAPI"}else{".SentinelOneAPI"}) ),

        [Parameter(Mandatory = $false)]
        [string]$SentinelOneConfFile = 'config.psd1'
    )

    begin {
        $SentinelOneConfig = Join-Path -Path $SentinelOneConfPath -ChildPath $SentinelOneConfFile
    }

    process {

        if ( Test-Path $SentinelOneConfig ) {
            $tmp_config = Import-LocalizedData -BaseDirectory $SentinelOneConfPath -FileName $SentinelOneConfFile

                # Send to function to strip potentially superfluous slash (/)
                Add-SentinelOneBaseURI $tmp_config.SentinelOne_Base_URI

                $tmp_config.SentinelOne_API_key = ConvertTo-SecureString $tmp_config.SentinelOne_API_key

                Set-Variable -Name 'SentinelOne_Base_URI' -Value $tmp_config.SentinelOne_Base_URI -Option ReadOnly -Scope Global -Force

                Set-Variable -Name 'SentinelOne_API_Key' -Value $tmp_config.SentinelOne_API_key -Option ReadOnly -Scope Global -Force

                Set-Variable -Name 'SentinelOne_JSON_Conversion_Depth' -Value $tmp_config.SentinelOne_JSON_Conversion_Depth -Scope Global -Force

            Write-Verbose "The SentinelOneAPI Module configuration loaded successfully from [ $SentinelOneConfig ]"

            # Clean things up
            Remove-Variable "tmp_config"
        }
        else {
            Write-Verbose "No configuration file found at [ $SentinelOneConfig ] run Add-SentinelOneAPIKey & Add-SentinelOneBaseURI to get started."

            Set-Variable -Name "SentinelOne_JSON_Conversion_Depth" -Value 100 -Scope Global -Force
        }

    }

    end {}

}
#EndRegion '.\Private\moduleSettings\Import-SentinelOneModuleSettings.ps1' 96
#Region '.\Private\moduleSettings\Initialize-SentinelOneModuleSettings.ps1' 0
#Used to auto load either baseline settings or saved configurations when the module is imported
Import-SentinelOneModuleSettings -Verbose:$false
#EndRegion '.\Private\moduleSettings\Initialize-SentinelOneModuleSettings.ps1' 3
#Region '.\Private\moduleSettings\Remove-SentinelOneModuleSettings.ps1' 0
function Remove-SentinelOneModuleSettings {
<#
    .SYNOPSIS
        Removes the stored SentinelOne configuration folder.

    .DESCRIPTION
        The Remove-SentinelOneModuleSettings cmdlet removes the SentinelOne folder and its files.
        This cmdlet also has the option to remove sensitive SentinelOne variables as well.

        By default configuration files are stored in the following location and will be removed:
            $env:USERPROFILE\SentinelOneAPI

    .PARAMETER SentinelOneConfPath
        Define the location of the SentinelOne configuration folder.

        By default the configuration folder is located at:
            $env:USERPROFILE\SentinelOneAPI

    .PARAMETER AndVariables
        Define if sensitive SentinelOne variables should be removed as well.

        By default the variables are not removed.

    .EXAMPLE
        Remove-SentinelOneModuleSettings

        Checks to see if the default configuration folder exists and removes it if it does.

        The default location of the SentinelOne configuration folder is:
            $env:USERPROFILE\SentinelOneAPI

    .EXAMPLE
        Remove-SentinelOneModuleSettings -SentinelOneConfPath C:\SentinelOneAPI -AndVariables

        Checks to see if the defined configuration folder exists and removes it if it does.
        If sensitive SentinelOne variables exist then they are removed as well.

        The location of the SentinelOne configuration folder in this example is:
            C:\SentinelOneAPI

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/internal/Remove-SentinelOneModuleSettings.html
#>

    [CmdletBinding(SupportsShouldProcess)]
    [Alias( 'Remove-S1ModuleSettings' )]
    Param (
        [Parameter(Mandatory = $false)]
        [string]$SentinelOneConfPath = $(Join-Path -Path $home -ChildPath $(if ($IsWindows -or $PSEdition -eq 'Desktop'){"SentinelOneAPI"}else{".SentinelOneAPI"}) ),

        [Parameter(Mandatory = $false)]
        [switch]$andVariables
    )

    begin {}

    process {

        if(Test-Path $SentinelOneConfPath)  {

            Remove-Item -Path $SentinelOneConfPath -Recurse -Force -WhatIf:$WhatIfPreference

            If ($andVariables) {
                Remove-SentinelOneAPIKey
                Remove-SentinelOneBaseURI
            }

            if ($WhatIfPreference -eq $false){

                if (!(Test-Path $SentinelOneConfPath)) {
                    Write-Output "The SentinelOneAPI configuration folder has been removed successfully from [ $SentinelOneConfPath ]"
                }
                else {
                    Write-Error "The SentinelOneAPI configuration folder could not be removed from [ $SentinelOneConfPath ]"
                }

            }

        }
        else {
            Write-Warning "No configuration folder found at [ $SentinelOneConfPath ]"
        }

    }

    end {}

}
#EndRegion '.\Private\moduleSettings\Remove-SentinelOneModuleSettings.ps1' 92
#Region '.\Public\accounts\Accounts-GET.ps1' 0
function Export-SentinelOneAccounts {
<#
    .SYNOPSIS
        Exports account data from one more more accounts

    .DESCRIPTION
        The Export-SentinelOneAccounts cmdlet exports account data from one more more accounts

    .PARAMETER accountIds
        Return accounts under the defined ids

    .PARAMETER accountType
        Returns accounts of a certain type

        Allowed values:
        'Paid', 'Trial'

    .PARAMETER activeLicenses
        Returns accounts with the exact amount of active licenses defined

        Note: totalLicenses & activeLicenses do not work as of 2022-10

    .PARAMETER createdAt
        Returns accounts created at the exact UTC timestamp defined

        Example: "2018-02-27T04:49:26.257525Z"

    .PARAMETER expiration
        Returns accounts whose expiration time matches the exact UTC timestamp defined

        Example: "2018-02-27T04:49:26.257525Z".

    .PARAMETER features
        Return only accounts that support this\these features.

        Allowed Values:
        'device-control', 'firewall-control', 'ioc'

        Note: features does not work as of 2022-10

    .PARAMETER ids
        Return accounts under the defined ids

    .PARAMETER isDefault
        Returns only the default account

    .PARAMETER name
        Returns accounts matching the exact name defined.

        This is case-sensitive

    .PARAMETER query
        Full text search for fields: name

        Note: on single-account consoles account name will not be matched

    .PARAMETER states
        Returns accounts matching a certain states

        Allowed values:
        'active', 'deleted', 'expired'

    .PARAMETER totalLicenses
        Returns accounts matching the total amount of licenses defined

        Note: totalLicenses & activeLicenses do not work as of 2022-10

    .PARAMETER updatedAt
        Returns accounts updated at the exact UTC timestamp defined

        Example: "2018-02-27T04:49:26.257525Z"

    .PARAMETER fileName
        Name of the file

        Example: 'Myaccounts-2022'

        The default name format is 'accounts-yyyy-MM-dd_HHmmss'

    .PARAMETER filePath
        The location to save the file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Export-SentinelOneAccounts

        Returns all accounts and saves the results to a CSV in the current working directory

    .EXAMPLE
        1234567890 | Export-SentinelOneAccounts

        Returns the account with the matching id defined and saves the results to a CSV in the current working directory

    .EXAMPLE
        Export-SentinelOneAccounts -accountIds 1234567890,0987654321 -fileName Myaccounts -filePath C:\Logs -showReport

        Returns the account with the matching id defined, saves the CSV file in the current working directory with the named defined
        and opens the location to were the file is saved.

    .EXAMPLE
        Export-SentinelOneAccounts -createdAt '2018-02-27T04:49:26.257525Z'

        Returns accounts that were created at the exact UTC timestamp defined and saves the results to a CSV in the current working directory

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Accounts/Export-SentinelOneAccounts.html
#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Paid', 'Trial' )]
        [String]$accountType,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$activeLicenses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$createdAt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$expiration,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'device-control', 'firewall-control', 'ioc' )]
        [String[]]$features,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$isDefault,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$name,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'active', 'deleted', 'expired' )]
        [String[]]$states,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalLicenses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$updatedAt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fileName = "accounts-$( Get-date -Format 'yyyy-MM-dd_HHmmss' )",

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$showReport

    )

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = '/export/accounts'}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'fileName','filePath','showReport'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ($Key in $PSBoundParameters.GetEnumerator()){

                if($excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {

            $fileOutput = "$filePath\$filename.csv"

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -OutFile $fileOutput `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $fileOutput -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}



function Get-SentinelOneAccounts {
<#
    .SYNOPSIS
        Gets account data from one more more accounts under an account

    .DESCRIPTION
        The Get-SentinelOneAccounts cmdlet gets account data from one more more accounts under an account

        Unless defined all returned results use the '/accounts' endpoint to keep the returned data
        structure consistent.

    .PARAMETER accountId
        Return accounts under the defined AccountIds

    .PARAMETER accountIds
        Return accounts under the defined AccountIds

        This is not the account Id

    .PARAMETER accountType
        Returns accounts of a certain type

        Allowed values:
        'Paid', 'Trial'

    .PARAMETER activeLicenses
        Returns accounts with the exact amount of active licenses defined

        Note: totalLicenses & activeLicenses do not work as of 2022-10

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER createdAt
        Returns accounts created at the exact UTC timestamp defined

        Example: "2018-02-27T04:49:26.257525Z"

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER expiration
        Returns accounts whose expiration time matches the exact UTC timestamp defined

        Example: "2018-02-27T04:49:26.257525Z".

    .PARAMETER features
        Return only accounts that support this\these features.

        Allowed Values:
        'device-control', 'firewall-control', 'ioc'

        Note: features does not work as of 2022-10

    .PARAMETER ids
        Return accounts under the defined ids

    .PARAMETER isDefault
        Returns only the default account

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER name
        Returns accounts matching the exact name defined.

    .PARAMETER query
        Full text search for fields: name

        Note: on single-account consoles account name will not be matched

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'accountType', 'activeAgents', 'activeLicenses', 'createdAt', 'expiration', 'id', 'name', 'numberOfaccounts', 'state', 'totalLicenses', 'updatedAt'

        Note: totalLicenses & activeLicenses do not work as of 2022-10

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER states
        Returns accounts matching a certain states

        Allowed values:
        'active', 'deleted', 'expired'

    .PARAMETER totalLicenses
        Returns accounts matching the total amount of licenses defined

        Note: totalLicenses & activeLicenses do not work as of 2022-10

    .PARAMETER updatedAt
        Returns accounts updated at the exact UTC timestamp defined

        Example: "2018-02-27T04:49:26.257525Z"

    .EXAMPLE
        Get-SentinelOneAccounts

        Returns the first 10 and data is sorted by their created at date. (Oldest > Newest)

    .EXAMPLE
        Get-SentinelOneAccounts -accountId 1234567890
1234567890
        Returns the account matching the defined accountId value

        This uses the '/accounts/{account_id}' endpoint instead of the '/accounts' endpoint.

    .EXAMPLE
        1234567890 | Get-SentinelOneAccounts

        Returns the account matching the defined accountId value

        This uses the '/accounts' endpoint so that the returned data structure is consistent

    .EXAMPLE
        Get-SentinelOneAccounts -accountIds 1234567890,0987654321

        Returns the accounts matching the defined accountId value

    .EXAMPLE
        Get-SentinelOneAccounts -createdAt '2018-02-27T04:49:26.257525Z'

        Returns accounts that were created at the exact UTC timestamp defined

    .EXAMPLE
        Get-SentinelOneAccounts -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns accounts after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Accounts/Get-SentinelOneAccounts.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByAccount' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$accountId,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Paid', 'Trial' )]
        [String]$accountType,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$activeLicenses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$createdAt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$expiration,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'device-control', 'firewall-control', 'ioc' )]
        [String[]]$features,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$isDefault,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$name,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'accountType', 'activeAgents', 'activeLicenses', 'createdAt', 'expiration', 'id', 'name', 'numberOfAccounts', 'state', 'totalLicenses', 'updatedAt' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'active', 'deleted', 'expired' )]
        [String[]]$states,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalLicenses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$updatedAt

    )

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'             {$resource_uri = "/accounts"}
            'indexByAccount'    {$resource_uri = "/accounts/$accountId"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ( $PSCmdlet.ParameterSetName -eq 'index' ) {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneAccountsUninstallPassword {
<#
    .SYNOPSIS
        Get the uninstall password or metadata to uninstall several Agents of one Account with one command.

    .DESCRIPTION
        The Get-SentinelOneAccountsUninstallPassword cmdlet get the uninstall password or metadata to uninstall several Agents of one Account with one command.

    .PARAMETER accountId
        Returns the uninstall password to uninstall several Agents of the account that was defined.

    .PARAMETER metaData
        Returns the uninstall password metadata, such as which user created and revoked it and when.

    .EXAMPLE
        Get-SentinelOneAccountsUninstallPassword -accountId 1234567890

        Returns the uninstall password to uninstall several agents from the defined account
        with one command

    .EXAMPLE
        1234567890 | Get-SentinelOneAccountsUninstallPassword

        Returns the uninstall password to uninstall several agents from the defined account
        with one command

    .EXAMPLE
        Get-SentinelOneAccountsUninstallPassword -accountId 1234567890 -metaData

        Returns the uninstall password metadata, such as which user created and revoked it and when.

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Accounts/Get-SentinelOneAccountsUninstallPassword.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$accountId,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$metaData
    )

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($metaData){
            $false  {$resource_uri = "/accounts/$accountId/uninstall-password/view"}
            $true   {$resource_uri = "/accounts/$accountId/uninstall-password/metadata"}
        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\accounts\Accounts-GET.ps1' 620
#Region '.\Public\accounts\Get-SentinelOneAccounts.ps1' 0
function Get-SentinelOneAccounts {
<#
    .SYNOPSIS
        Gets account data from one more more accounts under an account

    .DESCRIPTION
        The Get-SentinelOneAccounts cmdlet gets account data from one more more accounts under an account

        Unless defined all returned results use the '/accounts' endpoint to keep the returned data
        structure consistent.

    .PARAMETER accountId
        Return accounts under the defined AccountIds

    .PARAMETER accountIds
        Return accounts under the defined AccountIds

        This is not the account Id

    .PARAMETER accountType
        Returns accounts of a certain type

        Allowed values:
        'Paid', 'Trial'

    .PARAMETER activeLicenses
        Returns accounts with the exact amount of active licenses defined

        Note: totalLicenses & activeLicenses do not work as of 2022-10

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER createdAt
        Returns accounts created at the exact UTC timestamp defined

        Example: "2018-02-27T04:49:26.257525Z"

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER expiration
        Returns accounts whose expiration time matches the exact UTC timestamp defined

        Example: "2018-02-27T04:49:26.257525Z".

    .PARAMETER features
        Return only accounts that support this\these features.

        Allowed Values:
        'device-control', 'firewall-control', 'ioc'

        Note: features does not work as of 2022-10

    .PARAMETER ids
        Return accounts under the defined ids

    .PARAMETER isDefault
        Returns only the default account

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER name
        Returns accounts matching the exact name defined.

    .PARAMETER query
        Full text search for fields: name

        Note: on single-account consoles account name will not be matched

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'accountType', 'activeAgents', 'activeLicenses', 'createdAt', 'expiration', 'id', 'name', 'numberOfaccounts', 'state', 'totalLicenses', 'updatedAt'

        Note: totalLicenses & activeLicenses do not work as of 2022-10

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER states
        Returns accounts matching a certain states

        Allowed values:
        'active', 'deleted', 'expired'

    .PARAMETER totalLicenses
        Returns accounts matching the total amount of licenses defined

        Note: totalLicenses & activeLicenses do not work as of 2022-10

    .PARAMETER updatedAt
        Returns accounts updated at the exact UTC timestamp defined

        Example: "2018-02-27T04:49:26.257525Z"

    .EXAMPLE
        Get-SentinelOneAccounts

        Returns the first 10 and data is sorted by their created at date. (Oldest > Newest)

    .EXAMPLE
        Get-SentinelOneAccounts -accountId 1234567890
1234567890
        Returns the account matching the defined accountId value

        This uses the '/accounts/{account_id}' endpoint instead of the '/accounts' endpoint.

    .EXAMPLE
        1234567890 | Get-SentinelOneAccounts

        Returns the account matching the defined accountId value

        This uses the '/accounts' endpoint so that the returned data structure is consistent

    .EXAMPLE
        Get-SentinelOneAccounts -accountIds 1234567890,0987654321

        Returns the accounts matching the defined accountId value

    .EXAMPLE
        Get-SentinelOneAccounts -createdAt '2018-02-27T04:49:26.257525Z'

        Returns accounts that were created at the exact UTC timestamp defined

    .EXAMPLE
        Get-SentinelOneAccounts -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns accounts after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Accounts/Get-SentinelOneAccounts.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByAccount' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$accountId,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Paid', 'Trial' )]
        [String]$accountType,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$activeLicenses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$createdAt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$expiration,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'device-control', 'firewall-control', 'ioc' )]
        [String[]]$features,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$isDefault,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$name,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'accountType', 'activeAgents', 'activeLicenses', 'createdAt', 'expiration', 'id', 'name', 'numberOfAccounts', 'state', 'totalLicenses', 'updatedAt' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'active', 'deleted', 'expired' )]
        [String[]]$states,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalLicenses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$updatedAt

    )

    begin {

        Switch ($PSCmdlet.ParameterSetName){
            'index'             {$resource_uri = "/accounts"}
            'indexByAccount'    {$resource_uri = "/accounts/$accountId"}
        }

    }

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        #Region     [ Adjust parameters ]

            if( $PSBoundParameters.ContainsKey('id') ) {
                $PSBoundParameters.Remove('id') > $null
            }

        #EndRegion  [ Adjust  parameters ]

        Set-Variable -Name 'S1_accountsParameters' -Value $PSBoundParameters -Scope Global -Force

        Invoke-SentinelOneRequest -Method GET -resource_Uri $resource_Uri -uri_Filter $PSBoundParameters -allPages:$allPages

    }

    end {}

}
#EndRegion '.\Public\accounts\Get-SentinelOneAccounts.ps1' 273
#Region '.\Public\activities\Activities-GET.ps1' 0
function Export-SentinelOneActivities {
<#
    .SYNOPSIS
        Exports the activities, and their data, that match the filters.

    .DESCRIPTION
        The Export-SentinelOneActivities cmdlet get the activities, and their data, that match the filters.

        Recommend that you set some values for the filters. The full list will be too large to be useful.

    .PARAMETER accountIds
        Returns accounts under the defined ids

    .PARAMETER activityTypes
        Returns only the defined activity codes (comma-separated list).

        Select a code from the drop-down, or see the id field from the Get activity types command.

        Example: "52,53,71,72".

    .PARAMETER activityUuids
        Returns activities by specific activity UUIDs.

        Example: "a2c8037c-e6df-436d-b92b-bc09a418717e,f15b308b-fab9-4c0b-b6f5-17d236a7bf55".

    .PARAMETER agentIds
        Returns activities related to specified agents.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER alertIds
        Returns activities related to specified alerts.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER createdAt__between
        Returns activities created in the range of a start timestamp and an end timestamp.

        Example: "1514978764288-1514978999999"

    .PARAMETER createdAt__gt
        Returns activities created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns activities created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns activities created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns activities created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER ids
        Filter activities by specific activity IDs.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER includeHidden
        Include internal activities hidden from display.

    .PARAMETER rowsLimit
        Limit number of returned items (1-10000).

    .PARAMETER ruleIds
        Returns activities related to specified rules

    .PARAMETER siteIds
        List of Site IDs to filter by

        Example: "225494730938493804,225494730938493915".

    .PARAMETER threatIds
        Returns activities related to specified threats

        Example: "225494730938493804,225494730938493915".

    .PARAMETER userEmails
        Using the defined email addresses this returns the user who invoked the activity (If applicable)

    .PARAMETER userIds
        Using the defined userIds this returns the user who invoked the activity (If applicable).

        Example: "225494730938493804,225494730938493915".

    .PARAMETER fileName
        Name of the file

        Example: 'MySites-2022'

        The default name format is 'sites-yyyy-MM-dd_HHmmss'

    .PARAMETER filePath
        The location to save the file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Export-SentinelOneActivities

        Returns the last 100 activities and saves the results to a CSV in the current working directory

    .EXAMPLE
        Export-SentinelOneActivities -accountIds 1234567890

        Returns the account matching the defined accountId value and saves the results to a CSV in the current working directory

    .EXAMPLE
        Export-SentinelOneActivities -activityTypes 133 -sortBy createdAt -sortOrder dec

        Returns failed login attempts and saves the results to a CSV in the current working directory

        Data is sorted by createdAt (Newest to Oldest)

    .EXAMPLE
        Export-SentinelOneActivities -userEmails someuser@somesite.xyz

        Returns activities for the accounts matching the entered address and saves the results to a CSV in the current working directory

        Data is sorted by createdAt (Oldest to Newest)

    .EXAMPLE
        Export-SentinelOneActivities -createdAt__gte '2022-02-27T04:49:26.257525Z'

        Returns activities created after or at this timestamp.

    .EXAMPLE
        Export-SentinelOneActivities -siteId 1234567890,0987654321 -fileName MySites -filePath C:\Logs -showReport

        Returns the site with the matching id defined, saves the CSV file in the defined directory with the defined named
        and opens the location to were the file is saved.

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Activities/Export-SentinelOneActivities.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$activityTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$activityUuids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$agentIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$alertIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$createdAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [DateTime]$createdAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [DateTime]$createdAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [DateTime]$createdAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [DateTime]$createdAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$includeHidden,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$rowsLimit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ruleIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$threatIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$userEmails,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$userIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fileName = "activities-$( Get-date -Format 'yyyy-MM-dd_HHmmss' )",

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$showReport
    )

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/export/activities"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'fileName','filePath','showReport'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                    Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                    Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                    $body += @{ $Key.Key = $universalTime }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {

            $fileOutput = "$filePath\$filename.csv"

            if ( (Test-Path -Path $filePath -PathType Container) -eq $false ){
                New-Item -Path $filePath -ItemType Directory > $null
            }

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -OutFile $fileOutput `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $fileOutput -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}



function Get-SentinelOneActivities {
<#
    .SYNOPSIS
        Get the activities, and their data, that match the filters.

    .DESCRIPTION
        The Get-SentinelOneActivities cmdlet get the activities, and their data, that match the filters.

        Recommend that you set some values for the filters. The full list will be too large to be useful.

    .PARAMETER accountIds
        Returns accounts under the defined ids

    .PARAMETER activityTypes
        Returns only the defined activity codes (comma-separated list).

        Select a code from the drop-down, or see the id field from the Get activity types command.

        Example: "52,53,71,72".

    .PARAMETER activityUuids
        Returns activities by specific activity UUIDs.

        Example: "a2c8037c-e6df-436d-b92b-bc09a418717e,f15b308b-fab9-4c0b-b6f5-17d236a7bf55".

    .PARAMETER agentIds
        Returns activities related to specified agents.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER alertIds
        Returns activities related to specified alerts.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER createdAt__between
        Returns activities created in the range of a start timestamp and an end timestamp.

        Example: "1514978764288-1514978999999"

    .PARAMETER createdAt__gt
        Returns activities created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns activities created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns activities created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns activities created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER ids
        Filter activities by specific activity IDs.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER includeHidden
        Include internal activities hidden from display.

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER ruleIds
        Returns activities related to specified rules

    .PARAMETER siteIds
        List of Site IDs to filter by

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'activityType', 'createdAt', 'id'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER threatIds
        Returns activities related to specified threats

        Example: "225494730938493804,225494730938493915".

    .PARAMETER typesOnly
        Returns a list of activity types

        This is useful to see valid values to filter activities in other commands.

    .PARAMETER userEmails
        Using the defined email addresses this returns the user who invoked the activity (If applicable)

    .PARAMETER userIds
        Using the defined userIds this returns the user who invoked the activity (If applicable).

        Example: "225494730938493804,225494730938493915".

    .EXAMPLE
        Get-SentinelOneActivities

        Returns the first 10 and data is sorted by their created at date. (Oldest > Newest)

    .EXAMPLE
        Get-SentinelOneActivities -accountIds 1234567890

        Returns the account matching the defined accountId value

    .EXAMPLE
        1234567890 | Get-SentinelOneActivities

        Returns the account matching the defined accountId value

    .EXAMPLE
        Get-SentinelOneActivities -activityTypes 133 -sortBy createdAt -sortOrder dec

        Returns failed login attempts

        Data is sorted by createdAt (Newest to Oldest)

    .EXAMPLE
        Get-SentinelOneActivities -userEmails someuser@somesite.xyz

        Returns activities for the accounts matching the entered address

        Data is sorted by createdAt (Oldest to Newest)

    .EXAMPLE
        Get-SentinelOneActivities -createdAt__gte '2022-02-27T04:49:26.257525Z'

        Returns activities created after or at this timestamp.

    .EXAMPLE
        Get-SentinelOneActivities -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Activities/Get-SentinelOneActivities.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$activityTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$activityUuids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$agentIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$alertIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$createdAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [DateTime]$createdAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [DateTime]$createdAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [DateTime]$createdAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [DateTime]$createdAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$includeHidden,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ruleIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'activityType', 'createdAt', 'id' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$threatIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByType' )]
        [Switch]$typesOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$userEmails,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$userIds
    )

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/activities"}
            'indexByType'   {$resource_uri = "/activities/types"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                    Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                    Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                    $body += @{ $Key.Key = $universalTime }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneActivitiesAsSyslog {
<#
    .SYNOPSIS
        Get the activities, and their data as Syslog, that match the filters.

    .DESCRIPTION
        The Get-SentinelOneActivitiesAsSyslog cmdlet get the activities, and their data, that match the filters.

        Recommend that you set some values for the filters. The full list will be too large to be useful.

        Per SentinelOne - This is not intended for production purposes.

    .PARAMETER accountIds
        Returns accounts under the defined ids

    .PARAMETER activityTypes
        Returns only the defined activity codes (comma-separated list).

        Select a code from the drop-down, or see the id field from the Get activity types command.

        Example: "52,53,71,72".

    .PARAMETER activityUuids
        Returns activities by specific activity UUIDs.

        Example: "a2c8037c-e6df-436d-b92b-bc09a418717e,f15b308b-fab9-4c0b-b6f5-17d236a7bf55".

    .PARAMETER agentIds
        Returns activities related to specified agents.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER alertIds
        Returns activities related to specified alerts.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER createdAt__between
        Returns activities created in the range of a start timestamp and an end timestamp.

        Example: "1514978764288-1514978999999"

    .PARAMETER createdAt__gt
        Returns activities created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns activities created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns activities created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns activities created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER ids
        Filter activities by specific activity IDs.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER includeHidden
        Include internal activities hidden from display.

    .PARAMETER limit
        Limit number of returned items (1-10000).

    .PARAMETER ruleIds
        Returns activities related to specified rules

    .PARAMETER siteIds
        List of Site IDs to filter by

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'activityType', 'createdAt', 'id'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER threatIds
        Returns activities related to specified threats

        Example: "225494730938493804,225494730938493915".

    .PARAMETER typesOnly
        Returns a list of activity types

        This is useful to see valid values to filter activities in other commands.

    .PARAMETER userEmails
        Using the defined email addresses this returns the user who invoked the activity (If applicable)

    .PARAMETER userIds
        Using the defined userIds this returns the user who invoked the activity (If applicable).

        Example: "225494730938493804,225494730938493915".

    .EXAMPLE
        Get-SentinelOneActivitiesAsSyslog

        Returns the first 10 and data is sorted by their created at date. (Oldest > Newest)

    .EXAMPLE
        Get-SentinelOneActivitiesAsSyslog -accountIds 1234567890

        Returns the account matching the defined accountId value

    .EXAMPLE
        1234567890 | Get-SentinelOneActivitiesAsSyslog

        Returns the account matching the defined accountId value

    .EXAMPLE
        Get-SentinelOneActivitiesAsSyslog -activityTypes 133 -sortBy createdAt -sortOrder dec

        Returns failed login attempts

        Data is sorted by createdAt (Newest to Oldest)

    .EXAMPLE
        Get-SentinelOneActivitiesAsSyslog -userEmails someuser@somesite.xyz

        Returns activities for the accounts matching the entered address

        Data is sorted by createdAt (Oldest to Newest)

    .EXAMPLE
        Get-SentinelOneActivitiesAsSyslog -createdAt__gte '2022-02-27T04:49:26.257525Z'

        Returns activities created after or at this timestamp.

    .EXAMPLE
        Get-SentinelOneActivitiesAsSyslog -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        2022-10: Cannot validate as no scope has syslog enabled at the present time

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Activities/Get-SentinelOneActivitiesAsSyslog.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$activityTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$activityUuids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$agentIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$alertIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$createdAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [DateTime]$createdAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [DateTime]$createdAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [DateTime]$createdAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [DateTime]$createdAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$includeHidden,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ruleIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'activityType', 'createdAt', 'id' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$threatIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByType' )]
        [Switch]$typesOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$userEmails,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$userIds
    )

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/last-activity-as-syslog"}
            'indexByType'   {$resource_uri = "/activities/types"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                    Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                    Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                    $body += @{ $Key.Key = $universalTime }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\activities\Activities-GET.ps1' 1046
#Region '.\Public\AgentContentUpdates-GET.ps1' 0
function Get-SentinelOneAgentContentUpdates {
<#
    .SYNOPSIS
        Gets various agent content updates.

    .DESCRIPTION
        The Get-SentinelOneAgentContentUpdates cmdlet gets various agent content updates that match the filters.

        Calls the following endpoints:
            Get Agent Merged Updates
            /web/api/v2.1/content-updates-inventory

            Get Content Updates Types (default return)
            /web/api/v2.1/atlas-agents-control/hotfix-policy/asset-family-types

            Get Existing Content Updates Policy
            /web/api/v2.1/atlas-agents-control/hotfix-policy/policy

    .PARAMETER agentId
        Returns agent content updates related to specified agentId

        Example: "225494730938493804,225494730938493915"

    .PARAMETER accountIds
        Returns accounts under the defined ids

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER limit
        Limit number of returned items (1-10000).

    .PARAMETER siteIds
        List of Site IDs to filter by

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'agentId', 'appliedAt', 'assetFamilyType', 'displayName', 'version'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER typesOnly
        Get a list of agent components which can receive content updates

    .EXAMPLE
        Get-SentinelOneAgentContentUpdates

        Returns a list of agent components which can receive content updates

        Calls the "/atlas-agents-control/hotfix-policy/asset-family-types" uri

    .EXAMPLE
        Get-SentinelOneAgentContentUpdates -agentId 1234567890

        Returns the defined agents merged updates.

        Calls the "/content-updates-inventory" uri

    .EXAMPLE
        Get-SentinelOneAgentContentUpdates -accountIds 1234567890

        Returns the existing content updates policy

        Calls the "/atlas-agents-control/hotfix-policy/policy" uri

    .NOTES
        As of 2022-10:
            Cannot pull data from "/content-updates-inventory" uri with any known id
            Cannot pull data from the following uris due to insufficient permissions
                /web/api/v2.1/atlas-agents-control/hotfix-policy/asset-family-types
                /web/api/v2.1/atlas-agents-control/hotfix-policy/policy

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/AgentContentUpdates/Get-SentinelOneAgentContentUpdates.html

#>

    [CmdletBinding( DefaultParameterSetName = 'indexByType' )]
    Param (
        [Parameter( Mandatory = $true, ParameterSetName = 'indexByMerged' )]
        [ValidateNotNullOrEmpty()]
        [String]$agentId,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByExisting' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByMerged' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByMerged' )]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByMerged' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByExisting' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByMerged' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByMerged' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByMerged' )]
        [ValidateSet( 'agentId', 'appliedAt', 'assetFamilyType', 'displayName', 'version' )]
        [String]$sortBy,

        [Parameter(ParameterSetName = 'indexByMerged' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter(ParameterSetName = 'indexByType' )]
        [Switch]$typesOnly

    )

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'indexByMerged'     {$resource_uri = "/content-updates-inventory"}
            'indexByType'       {$resource_uri = "/atlas-agents-control/hotfix-policy/asset-family-types"}
            'indexByExisting'   {$resource_uri = "/atlas-agents-control/hotfix-policy/policy"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -ne 'indexByType') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                    Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                    Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                    $body += @{ $Key.Key = $universalTime }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\AgentContentUpdates-GET.ps1' 203
#Region '.\Public\agents\Agents-GET.ps1' 0
function Export-SentinelOneAgentLogs {
<#
    .SYNOPSIS
        Exports an agents fetched logs to a 7zip file.

    .DESCRIPTION
        The Export-SentinelOneAgentLogs cmdlet exports exports an agents fetched logs to a 7zip file.

        Use the Get-SentinelOneAgents cmdlet to get the agent Id
        or
        Use the Get-SentinelOneActivities cmdlet to get the agentId and the activity_id
            Get-SentinelOneActivities -agentIds 225494730938493804 -activityTypes 66,65 -sortBy createdAt -sortOrder desc

        activityTypes:
            66: Is the 7zip file uploaded by the agent and the id value returned by Get-SentinelOneActivities is used to populate the activity_id of this cmdlet

            65: Shows when the agent was told to upload its files to the console. This is helpful as sometimes logs take a bit to upload

    .PARAMETER activity_id
        ID of activity that logs files uploaded by agent.

        Example: "225494730938493804".

    .PARAMETER agent_id
        Filter results to the defined agent Id.

        Example: "225494730938493804".

    .PARAMETER fileName
        Name of the file

        Example: 'MyAgents-2022'

        The default name format is 'agentLogs-$agent_id-yyyy-MM-dd_HHmmss'

    .PARAMETER filePath
        The location to save the file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Export-SentinelOneAgentLogs -activity_id 123456789012345678 -agent_id 876543210987654321

        Returns the agents fetched logs using the defined Ids and saves the results to a 7zip in the current working directory

        fileName:
            agentLogs-876543210987654321-2022-10-29_105845.7z

    .EXAMPLE
        Export-SentinelOneAgentLogs -activity_id 123456789012345678 -agent_id 876543210987654321 -fileName MyCustomFile -filePath C:\Logs -showReport

        Returns the agents fetched logs using the defined Ids and saves the results to a 7zip in the defined directory with the defined name
        and opens the location to were the file is saved.

        fileName:
            MyCustomFile.7z

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Agents/Export-SentinelOneAgentLogs.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ParameterSetName = 'index' )]
        [String]$activity_id,

        [Parameter( Mandatory = $true, ParameterSetName = 'index' )]
        [String]$agent_id,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fileName = "agentLogs-$agent_id-$( Get-date -Format 'yyyy-MM-dd_HHmmss' )",

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$showReport

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/agents/$agent_id/uploads/$activity_id"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'fileName','filePath','showReport'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ($Key in $PSBoundParameters.GetEnumerator()){

                if($excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {

            $fileOutput = "$filePath\$filename.7z"

            if ( (Test-Path -Path $filePath -PathType Container) -eq $false ){
                New-Item -Path $filePath -ItemType Directory > $null
            }

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -OutFile $fileOutput `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $fileOutput -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}



function Export-SentinelOneAgents {
<#
    .SYNOPSIS
        Export Agent data to a CSV, for Agents that match the filter.

    .DESCRIPTION
        The Export-SentinelOneAgents cmdlet exports Agent data to a CSV, for Agents that match the filter.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER activeThreats
        Include Agents with this amount of active threats.

        Example: "3"

    .PARAMETER activeThreats__gt
        Include Agents with at least this amount of active threats.

        Example: "5".

    .PARAMETER adComputerMember__contains
        Free-text filter by Active Directory computer groups String.

        Example: "DC=sentinelone".

    .PARAMETER adComputerName__contains
        Free-text filter by Active Directory computer name String

        Example: "DC=sentinelone".

    .PARAMETER adComputerQuery__contains
        Free-text filter by Active Directory computer name or its groups.

        Example: "DC=sentinelone,Windows".

    .PARAMETER adQuery
        An Active Directory query String.

        Example: "CN=Managers,DC=sentinelone,DC=com".

    .PARAMETER adQuery__contains
        Free-text filter by Active Directory String.

        Example: "DC=sentinelone".

    .PARAMETER adUserMember__contains
        Free-text filter by Active Directory user groups String.

        Example: "DC=sentinelone".

    .PARAMETER adUserName__contains
        Free-text filter by Active Directory username String.

        Example: "DC=sentinelone".

    .PARAMETER adUserQuery__contains
        Free-text filter by Active Directory computer name or its groups.

        Example: "DC=sentinelone,John".

    .PARAMETER agentContentUpdateId__contains
        Free-text filter by content update ID

    .PARAMETER agentLight
        Returns only 30k items instead of 50k

        Calls the "/export/agents-light" uri instead of the "/export/agents" uri

    .PARAMETER agentNamespace__contains
        Free-text filter by agent namespace

    .PARAMETER agentPodName__contains
        Free-text filter by agent pod name

    .PARAMETER agentVersions
        Agent versions to include.

        Example: "2.0.0.0,2.1.5.144".

    .PARAMETER agentVersionsNin
        Agent versions not to include.

        Example: "2.0.0.0,2.1.5.144".

    .PARAMETER appsVulnerabilityStatuses
        Apps vulnerability status in.

        Allowed values:
        'not_applicable', 'patch_required', 'up_to_date'

    .PARAMETER appsVulnerabilityStatusesNin
        Apps vulnerability status nin.

        Allowed values:
        'not_applicable', 'patch_required', 'up_to_date'

    .PARAMETER awsRole__contains
        Free-text filter by aws role

    .PARAMETER awsSecurityGroups__contains
        Free-text filter by aws securityGroups

    .PARAMETER awsSubnetIds__contains
        Free-text filter by aws subnet ids

    .PARAMETER azureResourceGroup__contains
        Free-text filter by azure resource group

    .PARAMETER cloudAccount__contains
        Free-text filter by cloud account

    .PARAMETER cloudImage__contains
        Free-text filter by cloud image

    .PARAMETER cloudInstanceId__contains
        Free-text filter by cloud instance id

    .PARAMETER cloudInstanceSize__contains
        Free-text filter by cloud instance size

    .PARAMETER cloudLocation__contains
        Free-text filter by cloud location

    .PARAMETER cloudNetwork__contains
        Free-text filter by cloud network

    .PARAMETER cloudProvider
        Agents from which cloud provider

    .PARAMETER cloudProviderNin
        Exclude Agents from these cloud provider

    .PARAMETER cloudTags__contains
        Free-text filter by cloud tags

    .PARAMETER clusterName__contains
        Free-text filter by cluster name

    .PARAMETER computerName
        Computer name.

        Example: "My Office Desktop".

    .PARAMETER computerName__contains
        Free-text filter by computer name.

        Example: "john-office,WIN".

    .PARAMETER computerName__like
        Match computer name partially (subString).

        Example: "Lab1".

    .PARAMETER consoleMigrationStatuses
        Migration status in.

        Allowed values:
        'Failed', 'Migrated', 'N/A', 'Pending'

    .PARAMETER consoleMigrationStatusesNin
        Migration status nin.

        Allowed values:
        'Failed', 'Migrated', 'N/A', 'Pending'

    .PARAMETER coreCount__between
        Possible number of CPU cores (inclusive).

        Example: "2-8".

    .PARAMETER coreCount__gt
        CPU cores (more than)

    .PARAMETER coreCount__gte
        CPU cores (more than or equal)

    .PARAMETER coreCount__lt
        CPU cores (less than)

    .PARAMETER coreCount__lte
        CPU cores (less than or equal)

    .PARAMETER cpuCount__between
        Possible number of CPU cores (inclusive).

        Example: "2-8".

    .PARAMETER cpuCount__gt
        Number of CPUs (more than)

    .PARAMETER cpuCount__gte
        Number of CPUs (more than or equal)

    .PARAMETER cpuCount__lt
        Number of CPUs (less than)

    .PARAMETER cpuCount__lte
        Number of CPUs (less than or equal)

    .PARAMETER cpuId__contains
        Free-text filter by CPU name.

        Example: "Intel,AMD".

    .PARAMETER createdAt__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER createdAt__gt
        Returns activities created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns activities created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns activities created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns activities created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER csvFilterId
        The ID of the CSV file to filter by.

        Example: "225494730938493804".

    .PARAMETER decommissionedAt__between
        Date range for decommission time (format: <from_timestamp>-<to_timestamp>, inclusive)

        Example: "1514978890136-1514978650130".

    .PARAMETER decommissionedAt__gt
        Returns activities decommissionedAt after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER decommissionedAt__gte
        Returns activities decommissionedAt after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER decommissionedAt__lt
        Returns activities decommissionedAt before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER decommissionedAt__lte
        Returns activities decommissionedAt before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER domains
        Included network domains.

        Example: "mybusiness.net,workgroup".

    .PARAMETER domainsNin
        Not included network domains.

        Example: "mybusiness.net,workgroup".

    .PARAMETER encryptedApplications
        Disk encryption status

    .PARAMETER externalId__contains
        Free-text filter by external ID (Customer ID).

        Example: "Tag#1 - monitoring,Performance machine".

    .PARAMETER externalIp__contains
        Free-text filter by visible IP (supports multiple values).

        Example: "205,127.0".

    .PARAMETER filteredGroupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER filteredSiteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER filterId
        Include all Agents matching this saved filter.

        Example: "225494730938493804".

    .PARAMETER firewallEnabled
        The agents supports Firewall Control and it is enabled for the agent's group

    .PARAMETER gatewayIp
        Gateway ip.

        Example: "192.168.0.1".

    .PARAMETER gcpServiceAccount__contains
        Free-text filter by gcp service account

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER hasLocalConfiguration
        Agent has a local configuration set

    .PARAMETER hasTags
        Include only Agents that have tags

    .PARAMETER ids
        A list of Agent IDs.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER infected
        Include only Agents with at least one active threat

    .PARAMETER installerTypes
        Include only Agents installed with these package types.

        Allowed values:
        '.bsx', '.deb', '.exe', '.gz', '.img', '.msi', '.pkg', '.rpm', '.tar', '.zip', 'unknown'

    .PARAMETER installerTypesNin
        Exclude Agents installed with these package types. Example: ".msi".

        Allowed values:
        '.bsx', '.deb', '.exe', '.gz', '.img', '.msi', '.pkg', '.rpm', '.tar', '.zip', 'unknown'

    .PARAMETER isActive
        Include only active Agents

    .PARAMETER isDecommissioned
        Include active, decommissioned or both.

        Example: "True,False".

    .PARAMETER isPendingUninstall
        Include only Agents with pending uninstall requests

    .PARAMETER isUninstalled
        Include installed, uninstalled or both.

        Example: "True,False".

    .PARAMETER isUpToDate
        Include only Agents with updated software

    .PARAMETER k8sNodeLabels__contains
        Free-text filter by K8s node labels

    .PARAMETER k8sNodeName__contains
        Free-text filter by K8s node name

    .PARAMETER k8sType__contains
        Free-text filter by K8s type

    .PARAMETER k8sVersion__contains
        Free-text filter by K8s version

    .PARAMETER lastActiveDate__between
        Date range for last active date(format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978764288-1514978999999".

    .PARAMETER lastActiveDate__gt
        Returns agents lastActiveDate after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastActiveDate__gte
        Returns agents lastActiveDate after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastActiveDate__lt
        Returns agents lastActiveDate before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastActiveDate__lte
        Returns agents lastActiveDate before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastLoggedInUserName__contains
        Free-text filter by username.

        Example: "admin,johnd1".

    .PARAMETER locationEnabled
        The agents supports Location Awareness and it is enabled for the agent's group

    .PARAMETER locationIds
        Include only Agents reporting these locations.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER locationIdsNin
        Do not include only Agents reporting these locations.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER machineTypes
        Included machine types.

        Allowed values:
        'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown'

    .PARAMETER machineTypesNin
        Included machine types.

        Allowed values:
        'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown'

    .PARAMETER migrationStatus
        Migration status.

        Allowed values:
        'failed', 'migrated', 'n/a', 'pending'

    .PARAMETER mitigationMode
        Agent mitigation mode policy.

        Allowed values:
        'detect', 'protect'

    .PARAMETER mitigationModeSuspicious
        Mitigation mode policy for suspicious activity.

        Allowed values:
        'detect', 'protect'

    .PARAMETER networkInterfaceGatewayMacAddress__contains
        Free-text filter by Gateway MAC address

        Example: "aa:0f,:41:".

    .PARAMETER networkInterfaceInet__contains
        Free-text filter by local IP.

        Example: "192,10.0.0".

    .PARAMETER networkInterfacePhysical__contains
        Free-text filter by MAC address.

        Example: "aa:0f,:41:".

    .PARAMETER networkQuarantineEnabled
        The agents supports Network Quarantine Control and its enabled for the agent's group

    .PARAMETER networkStatuses
        Included network statuses.

        Allowed values:
        'connected', 'connecting', 'disconnected', 'disconnecting'

    .PARAMETER networkStatusesNin
        Included network statuses.

        Allowed values:
        'connected', 'connecting', 'disconnected', 'disconnecting'

    .PARAMETER operationalStates
        Agent operational state

    .PARAMETER operationalStatesNin
        Do not include these Agent operational states

    .PARAMETER osArch
        OS architecture.

        Allowed values:
        '32 bit', '64 bit'

    .PARAMETER osTypes
        Included OS types.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER osTypesNin
        Not included OS types.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER osVersion__contains
        Free-text filter by OS full name and version.

        Example: "Service Pack 1".

    .PARAMETER query
        A free-text search term, will match applicable attributes (sub-String match).

        Note: Device's physical addresses will be matched if they start with the search term only (no match if they contain the term).

        Example: "Linux".

    .PARAMETER rangerStatuses
        Status of Ranger.

        Allowed values:
        'Disabled', 'Enabled', 'NotApplicable'

    .PARAMETER rangerStatusesNin
        Do not include these Ranger Statuses.

        Allowed values:
        'Disabled', 'Enabled', 'NotApplicable'

    .PARAMETER rangerVersions
        Ranger versions to include.

        Example: "2.0.0.0,2.1.5.144".

    .PARAMETER rangerVersionsNin
        Ranger versions not to include.

        Example: "2.0.0.0,2.1.5.144".

    .PARAMETER registeredAt__between
        Date range for first registration time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978764288-1514978999999".

    .PARAMETER registeredAt__gt
        Returns agents registeredAt after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER registeredAt__gte
        Returns agents registeredAt after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER registeredAt__lt
        Returns agents registeredAt before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER registeredAt__lte
        Returns agents registeredAt before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER remoteProfilingStates
        Agent remote profiling state

    .PARAMETER remoteProfilingStatesNin
        Do not include these Agent remote profiling states

    .PARAMETER scanStatus
        Scan status.

        Allowed values:
        'aborted', 'finished', 'none', 'started'

    .PARAMETER scanStatuses
        Included scan statuses.

        Allowed values:
        'aborted', 'finished', 'none', 'started'

    .PARAMETER scanStatusesNin
        Not included scan statuses.

        Allowed values:
        'aborted', 'finished', 'none', 'started'

    .PARAMETER serialNumber__contains
        Free-text filter by Serial Number

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER tagsData
        A JSON formatted String, where each key represents a tag key,
        and each value represents a list of String values.

        Example: "{"key1": ["value1_1", "value1_2"], "key2": ["value2"]}".

    .PARAMETER threatContentHash
        Include only Agents that have at least one threat with this content hash.

        Example: "cf23df2207d99a74fbe169e3eba035e633b65d94".

    .PARAMETER threatCreatedAt__between
        Agents with threats reported in a date range (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978764288-1514978999999".

    .PARAMETER threatCreatedAt__gt
        Returns agents with threatCreatedAt after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER threatCreatedAt__gte
        Returns agents with threatCreatedAt after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER threatCreatedAt__lt
        Returns agents with threatCreatedAt before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER threatCreatedAt__lte
        Returns agents with threatCreatedAt before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER threatHidden
        Include only Agents with at least one hidden threat

    .PARAMETER threatMitigationStatus
        Include only Agents that have threats with this mitigation status.

        Allowed values:
        'active', 'blocked', 'mitigated', 'pending', 'suspicious', 'suspicious_resolved'

    .PARAMETER threatRebootRequired
        Has at least one threat with at least one mitigation action pending reboot to succeed

    .PARAMETER threatResolved
        Include only Agents with at least one resolved threat

    .PARAMETER totalMemory__between
        Total memory range (GB, inclusive).

        Example: "4-8".

    .PARAMETER totalMemory__gt
        Memory size (MB, more than)

    .PARAMETER totalMemory__gte
        Memory size (MB, more than or equal)

    .PARAMETER totalMemory__lt
        Memory size (MB, less than)

    .PARAMETER totalMemory__lte
        Memory size (MB, less than or equal)

    .PARAMETER updatedAt__between
        Date range for update time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER updatedAt__gt
        Returns agents updatedAt after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__gte
        Returns agents updatedAt after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lt
        Returns agents updatedAt before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lte
        Returns agents updatedAt before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER userActionsNeeded
        Included pending user actions.

        Allowed values:
        'agent_suppressed_category', 'extended_exclusions_partially_accepted',
        'incompatible_os', 'incompatible_os_category', 'missing_permissions_category',
        'none', 'reboot_category', 'reboot_needed', 'rebootless_without_dynamic_detection',
        'unprotected', 'unprotected_category', 'upgrade_needed', 'user_action_needed',
        'user_action_needed_bluetooth_per', 'user_action_needed_fda',
        'user_action_needed_network', 'user_action_needed_rs_fda'

    .PARAMETER userActionsNeededNin
        Excluded pending user actions.

        Allowed values:
        'agent_suppressed_category', 'extended_exclusions_partially_accepted',
        'incompatible_os', 'incompatible_os_category', 'missing_permissions_category',
        'none', 'reboot_category', 'reboot_needed', 'rebootless_without_dynamic_detection',
        'unprotected', 'unprotected_category', 'upgrade_needed', 'user_action_needed',
        'user_action_needed_bluetooth_per', 'user_action_needed_fda',
        'user_action_needed_network', 'user_action_needed_rs_fda'

    .PARAMETER uuid
        Agent's universally unique identifier.

        Example: "ff819e70af13be381993075eb0ce5f2f6de05be2".

    .PARAMETER uuid__contains
        Free-text filter by Agent UUID (supports multiple values).

        Example: "e92-01928,b055".

    .PARAMETER uuids
        A list of included UUIDs.

        Example: "ff819e70af13be381993075eb0ce5f2f6de05b11,ff819e70af13be381993075eb0ce5f2f6de05c22".

    .PARAMETER fileName
        Name of the file

        Example: 'MyAgents-2022'

        The default name format is 'agents-yyyy-MM-dd_HHmmss'

    .PARAMETER filePath
        The location to save the csv file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Export-SentinelOneAgents

        Returns up to 50k items and saves the results to a csv in the current working directory

        fileName:
            agents-2022-10-29_105845.csv

    .EXAMPLE
        Export-SentinelOneAgents -agentLight

        Returns up to 30k items and saves the results to a csv in the current working directory

        fileName:
            agents-2022-10-29_105845.csv

    .EXAMPLE
        Export-SentinelOneAgents -fileName MyCustomFile -filePath C:\Logs -showReport

        Returns up to 50k items and saves the results to a csv in the defined directory with the defined name
        and opens the location to were the file is saved.

        fileName:
            MyCustomFile.csv

    .NOTES
        Review\validate every parameter & parameter help

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Agents/Export-SentinelOneAgents.html
#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$activeThreats,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$activeThreats__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$adComputerMember__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$adComputerName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$adComputerQuery__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$adQuery,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$adQuery__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$adUserMember__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$adUserName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$adUserQuery__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentContentUpdateId__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$agentLight,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentNamespace__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentPodName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentVersions,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentVersionsNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'not_applicable', 'patch_required', 'up_to_date' )]
        [String[]]$appsVulnerabilityStatuses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'not_applicable', 'patch_required', 'up_to_date' )]
        [String[]]$appsVulnerabilityStatusesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$awsRole__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$awsSecurityGroups__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$awsSubnetIds__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$azureResourceGroup__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudAccount__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudImage__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudInstanceId__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudInstanceSize__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudLocation__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudNetwork__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudProvider,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudProviderNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudTags__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$clusterName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$computerName,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$computerName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$computerName__like,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Failed', 'Migrated', 'N/A', 'Pending' )]
        [String[]]$consoleMigrationStatuses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Failed', 'Migrated', 'N/A', 'Pending' )]
        [String[]]$consoleMigrationStatusesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$coreCount__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$coreCount__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$coreCount__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$coreCount__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$coreCount__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cpuCount__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$cpuCount__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$cpuCount__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$cpuCount__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$cpuCount__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cpuId__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$createdAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$csvFilterId,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$decommissionedAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$decommissionedAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$decommissionedAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$decommissionedAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$decommissionedAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$domains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$domainsNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$encryptedApplications,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$externalId__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$externalIp__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$filteredGroupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$filteredSiteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filterId,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$firewallEnabled,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$gatewayIp,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$gcpServiceAccount__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$hasLocalConfiguration,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$hasTags,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$infected,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( '.bsx', '.deb', '.exe', '.gz', '.img', '.msi', '.pkg', '.rpm', '.tar', '.zip', 'unknown' )]
        [String[]]$installerTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( '.bsx', '.deb', '.exe', '.gz', '.img', '.msi', '.pkg', '.rpm', '.tar', '.zip', 'unknown' )]
        [String[]]$installerTypesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$isActive,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$isDecommissioned,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$isPendingUninstall,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$isUninstalled,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$isUpToDate,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sNodeLabels__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sNodeName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sType__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sVersion__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$lastActiveDate__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$lastActiveDate__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$lastActiveDate__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$lastActiveDate__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$lastActiveDate__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$lastLoggedInUserName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$locationEnabled,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$locationIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$locationIdsNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown' )]
        [String[]]$machineTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown' )]
        [String[]]$machineTypesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Failed', 'Migrated', 'N/A', 'Pending' )]
        [String[]]$migrationStatus,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'detect', 'protect' )]
        [String[]]$mitigationMode,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'detect', 'protect' )]
        [String[]]$mitigationModeSuspicious,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$networkInterfaceGatewayMacAddress__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$networkInterfaceInet__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$networkInterfacePhysical__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$networkQuarantineEnabled,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'connected', 'connecting', 'disconnected', 'disconnecting' )]
        [String[]]$networkStatuses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'connected', 'connecting', 'disconnected', 'disconnecting' )]
        [String[]]$networkStatusesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$operationalStates,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$operationalStatesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( '32 bit', '64 bit' )]
        [String[]]$osArch,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'linux', 'macos', 'windows', 'windows_legacy' )]
        [String[]]$osTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'linux', 'macos', 'windows', 'windows_legacy' )]
        [String[]]$osTypesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$osVersion__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Disabled', 'Enabled', 'NotApplicable' )]
        [String[]]$rangerStatuses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Disabled', 'Enabled', 'NotApplicable' )]
        [String[]]$rangerStatusesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$rangerVersions,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$rangerVersionsNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$registeredAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$registeredAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$registeredAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$registeredAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$registeredAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$remoteProfilingStates,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$remoteProfilingStatesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'aborted', 'finished', 'none', 'started' )]
        [String]$scanStatus,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'aborted', 'finished', 'none', 'started' )]
        [String[]]$scanStatuses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'aborted', 'finished', 'none', 'started' )]
        [String[]]$scanStatusesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$serialNumber__contains,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$tagsData,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$threatContentHash,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$threatCreatedAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$threatCreatedAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$threatCreatedAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$threatCreatedAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$threatCreatedAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$threatHidden,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'active', 'blocked', 'mitigated', 'pending', 'suspicious', 'suspicious_resolved' )]
        [String]$threatMitigationStatus,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$threatRebootRequired,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$threatResolved,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$totalMemory__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalMemory__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalMemory__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalMemory__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalMemory__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$updatedAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'agent_suppressed_category', 'extended_exclusions_partially_accepted',
                        'incompatible_os', 'incompatible_os_category', 'missing_permissions_category',
                        'none', 'reboot_category', 'reboot_needed', 'rebootless_without_dynamic_detection',
                        'unprotected', 'unprotected_category', 'upgrade_needed', 'user_action_needed',
                        'user_action_needed_bluetooth_per', 'user_action_needed_fda',
                        'user_action_needed_network', 'user_action_needed_rs_fda'
                    )]
        [String[]]$userActionsNeeded,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'agent_suppressed_category', 'extended_exclusions_partially_accepted',
                        'incompatible_os', 'incompatible_os_category', 'missing_permissions_category',
                        'none', 'reboot_category', 'reboot_needed', 'rebootless_without_dynamic_detection',
                        'unprotected', 'unprotected_category', 'upgrade_needed', 'user_action_needed',
                        'user_action_needed_bluetooth_per', 'user_action_needed_fda',
                        'user_action_needed_network', 'user_action_needed_rs_fda'
                    )]
        [String[]]$userActionsNeededNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$uuid,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$uuid__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$uuids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fileName = "agents-$( Get-date -Format 'yyyy-MM-dd_HHmmss' )",

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$showReport

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($agentLight){
            $false  {$resource_uri = "/export/agents"}
            $true   {$resource_uri = "/export/agents-light"}
        }

        if ($agentLight){
            Write-Verbose "Using [ /export/agents-light ] instead of [ /export/agents ] uri, results will be limited to 30k"
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'agentLight','fileName','filePath','showReport'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                    Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.fffZ')

                    Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                    $body += @{ $Key.Key = $universalTime }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {

            $fileOutput = "$filePath\$filename.csv"

            if ( (Test-Path -Path $filePath -PathType Container) -eq $false ){
                New-Item -Path $filePath -ItemType Directory > $null
            }

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -OutFile $fileOutput `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $fileOutput -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}



function Get-SentinelOneAgents {
<#
    .SYNOPSIS
        Get the Agents, and their data, that match the filter.

    .DESCRIPTION
        The Get-SentinelOneAgents cmdlet get the Agents, and their data, that match the filter.

        This command gives the Agent ID, which you can use in other commands.

        Using the [ -countAgents ] parameter will only return the number of
        agents that match a filter without their data. This parameter set calls the
        "/agents/count" instead of the "/agents" uri.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER activeThreats
        Include Agents with this amount of active threats.

        Example: "3"

    .PARAMETER activeThreats__gt
        Include Agents with at least this amount of active threats.

        Example: "5".

    .PARAMETER adComputerMember__contains
        Free-text filter by Active Directory computer groups String.

        Example: "DC=sentinelone".

    .PARAMETER adComputerName__contains
        Free-text filter by Active Directory computer name String

        Example: "DC=sentinelone".

    .PARAMETER adComputerQuery__contains
        Free-text filter by Active Directory computer name or its groups.

        Example: "DC=sentinelone,Windows".

    .PARAMETER adQuery
        An Active Directory query String.

        Example: "CN=Managers,DC=sentinelone,DC=com".

    .PARAMETER adQuery__contains
        Free-text filter by Active Directory String.

        Example: "DC=sentinelone".

    .PARAMETER adUserMember__contains
        Free-text filter by Active Directory user groups String.

        Example: "DC=sentinelone".

    .PARAMETER adUserName__contains
        Free-text filter by Active Directory username String.

        Example: "DC=sentinelone".

    .PARAMETER adUserQuery__contains
        Free-text filter by Active Directory computer name or its groups.

        Example: "DC=sentinelone,John".

    .PARAMETER agentContentUpdateId__contains
        Free-text filter by content update ID

    .PARAMETER agentNamespace__contains
        Free-text filter by agent namespace

    .PARAMETER agentPodName__contains
        Free-text filter by agent pod name

    .PARAMETER agentVersions
        Agent versions to include.

        Example: "2.0.0.0,2.1.5.144".

    .PARAMETER agentVersionsNin
        Agent versions not to include.

        Example: "2.0.0.0,2.1.5.144".

    .PARAMETER appsVulnerabilityStatuses
        Apps vulnerability status in.

        Allowed values:
        'not_applicable', 'patch_required', 'up_to_date'

    .PARAMETER appsVulnerabilityStatusesNin
        Apps vulnerability status nin.

        Allowed values:
        'not_applicable', 'patch_required', 'up_to_date'

    .PARAMETER awsRole__contains
        Free-text filter by aws role

    .PARAMETER awsSecurityGroups__contains
        Free-text filter by aws securityGroups

    .PARAMETER awsSubnetIds__contains
        Free-text filter by aws subnet ids

    .PARAMETER azureResourceGroup__contains
        Free-text filter by azure resource group

    .PARAMETER cloudAccount__contains
        Free-text filter by cloud account

    .PARAMETER cloudImage__contains
        Free-text filter by cloud image

    .PARAMETER cloudInstanceId__contains
        Free-text filter by cloud instance id

    .PARAMETER cloudInstanceSize__contains
        Free-text filter by cloud instance size

    .PARAMETER cloudLocation__contains
        Free-text filter by cloud location

    .PARAMETER cloudNetwork__contains
        Free-text filter by cloud network

    .PARAMETER cloudProvider
        Agents from which cloud provider

    .PARAMETER cloudProviderNin
        Exclude Agents from these cloud provider

    .PARAMETER cloudTags__contains
        Free-text filter by cloud tags

    .PARAMETER clusterName__contains
        Free-text filter by cluster name

    .PARAMETER computerName
        Computer name.

        Example: "My Office Desktop".

    .PARAMETER computerName__contains
        Free-text filter by computer name.

        Example: "john-office,WIN".

    .PARAMETER computerName__like
        Match computer name partially (subString).

        Example: "Lab1".

    .PARAMETER consoleMigrationStatuses
        Migration status in.

        Allowed values:
        'Failed', 'Migrated', 'N/A', 'Pending'

    .PARAMETER consoleMigrationStatusesNin
        Migration status nin.

        Allowed values:
        'Failed', 'Migrated', 'N/A', 'Pending'

    .PARAMETER coreCount__between
        Possible number of CPU cores (inclusive).

        Example: "2-8".

    .PARAMETER coreCount__gt
        CPU cores (more than)

    .PARAMETER coreCount__gte
        CPU cores (more than or equal)

    .PARAMETER coreCount__lt
        CPU cores (less than)

    .PARAMETER coreCount__lte
        CPU cores (less than or equal)

    .PARAMETER countAgents
        Get the count of Agents that match a filter. This command is useful to run before you run other commands.

        You will be able to manage Agent maintenance better if you know how many Agents will get a command that takes time

    .PARAMETER cpuCount__between
        Possible number of CPU cores (inclusive).

        Example: "2-8".

    .PARAMETER cpuCount__gt
        Number of CPUs (more than)

    .PARAMETER cpuCount__gte
        Number of CPUs (more than or equal)

    .PARAMETER cpuCount__lt
        Number of CPUs (less than)

    .PARAMETER cpuCount__lte
        Number of CPUs (less than or equal)

    .PARAMETER cpuId__contains
        Free-text filter by CPU name.

        Example: "Intel,AMD".

    .PARAMETER createdAt__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER createdAt__gt
        Returns activities created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns activities created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns activities created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns activities created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER csvFilterId
        The ID of the CSV file to filter by.

        Example: "225494730938493804".

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER decommissionedAt__between
        Date range for decommission time (format: <from_timestamp>-<to_timestamp>, inclusive)

        Example: "1514978890136-1514978650130".

    .PARAMETER decommissionedAt__gt
        Returns activities decommissionedAt after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER decommissionedAt__gte
        Returns activities decommissionedAt after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER decommissionedAt__lt
        Returns activities decommissionedAt before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER decommissionedAt__lte
        Returns activities decommissionedAt before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER domains
        Included network domains.

        Example: "mybusiness.net,workgroup".

    .PARAMETER domainsNin
        Not included network domains.

        Example: "mybusiness.net,workgroup".

    .PARAMETER encryptedApplications
        Disk encryption status

    .PARAMETER externalId__contains
        Free-text filter by external ID (Customer ID).

        Example: "Tag#1 - monitoring,Performance machine".

    .PARAMETER externalIp__contains
        Free-text filter by visible IP (supports multiple values).

        Example: "205,127.0".

    .PARAMETER filteredGroupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER filteredSiteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER filterId
        Include all Agents matching this saved filter.

        Example: "225494730938493804".

    .PARAMETER firewallEnabled
        The agents supports Firewall Control and it is enabled for the agent's group

    .PARAMETER gatewayIp
        Gateway ip.

        Example: "192.168.0.1".

    .PARAMETER gcpServiceAccount__contains
        Free-text filter by gcp service account

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER hasLocalConfiguration
        Agent has a local configuration set

    .PARAMETER hasTags
        Include only Agents that have tags

    .PARAMETER ids
        A list of Agent IDs.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER infected
        Include only Agents with at least one active threat

    .PARAMETER installerTypes
        Include only Agents installed with these package types.

        Allowed values:
        '.bsx', '.deb', '.exe', '.gz', '.img', '.msi', '.pkg', '.rpm', '.tar', '.zip', 'unknown'

    .PARAMETER installerTypesNin
        Exclude Agents installed with these package types. Example: ".msi".

        Allowed values:
        '.bsx', '.deb', '.exe', '.gz', '.img', '.msi', '.pkg', '.rpm', '.tar', '.zip', 'unknown'

    .PARAMETER isActive
        Include only active Agents

    .PARAMETER isDecommissioned
        Include active, decommissioned or both.

        Example: "True,False".

    .PARAMETER isPendingUninstall
        Include only Agents with pending uninstall requests

    .PARAMETER isUninstalled
        Include installed, uninstalled or both.

        Example: "True,False".

    .PARAMETER isUpToDate
        Include only Agents with updated software

    .PARAMETER k8sNodeLabels__contains
        Free-text filter by K8s node labels

    .PARAMETER k8sNodeName__contains
        Free-text filter by K8s node name

    .PARAMETER k8sType__contains
        Free-text filter by K8s type

    .PARAMETER k8sVersion__contains
        Free-text filter by K8s version

    .PARAMETER lastActiveDate__between
        Date range for last active date(format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978764288-1514978999999".

    .PARAMETER lastActiveDate__gt
        Returns agents lastActiveDate after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastActiveDate__gte
        Returns agents lastActiveDate after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastActiveDate__lt
        Returns agents lastActiveDate before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastActiveDate__lte
        Returns agents lastActiveDate before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastLoggedInUserName__contains
        Free-text filter by username.

        Example: "admin,johnd1".

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER locationEnabled
        The agents supports Location Awareness and it is enabled for the agent's group

    .PARAMETER locationIds
        Include only Agents reporting these locations.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER locationIdsNin
        Do not include only Agents reporting these locations.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER machineTypes
        Included machine types.

        Allowed values:
        'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown'

    .PARAMETER machineTypesNin
        Included machine types.

        Allowed values:
        'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown'

    .PARAMETER migrationStatus
        Migration status.

        Allowed values:
        'failed', 'migrated', 'n/a', 'pending'

    .PARAMETER mitigationMode
        Agent mitigation mode policy.

        Allowed values:
        'detect', 'protect'

    .PARAMETER mitigationModeSuspicious
        Mitigation mode policy for suspicious activity.

        Allowed values:
        'detect', 'protect'

    .PARAMETER networkInterfaceGatewayMacAddress__contains
        Free-text filter by Gateway MAC address

        Example: "aa:0f,:41:".

    .PARAMETER networkInterfaceInet__contains
        Free-text filter by local IP.

        Example: "192,10.0.0".

    .PARAMETER networkInterfacePhysical__contains
        Free-text filter by MAC address.

        Example: "aa:0f,:41:".

    .PARAMETER networkQuarantineEnabled
        The agents supports Network Quarantine Control and its enabled for the agent's group

    .PARAMETER networkStatuses
        Included network statuses.

        Allowed values:
        'connected', 'connecting', 'disconnected', 'disconnecting'

    .PARAMETER networkStatusesNin
        Included network statuses.

        Allowed values:
        'connected', 'connecting', 'disconnected', 'disconnecting'

    .PARAMETER operationalStates
        Agent operational state

    .PARAMETER operationalStatesNin
        Do not include these Agent operational states

    .PARAMETER osArch
        OS architecture.

        Allowed values:
        '32 bit', '64 bit'

    .PARAMETER osTypes
        Included OS types.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER osTypesNin
        Not included OS types.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER osVersion__contains
        Free-text filter by OS full name and version.

        Example: "Service Pack 1".

    .PARAMETER query
        A free-text search term, will match applicable attributes (sub-String match).

        Note: Device's physical addresses will be matched if they start with the search term only (no match if they contain the term).

        Example: "Linux".

    .PARAMETER rangerStatuses
        Status of Ranger.

        Allowed values:
        'Disabled', 'Enabled', 'NotApplicable'

    .PARAMETER rangerStatusesNin
        Do not include these Ranger Statuses.

        Allowed values:
        'Disabled', 'Enabled', 'NotApplicable'

    .PARAMETER rangerVersions
        Ranger versions to include.

        Example: "2.0.0.0,2.1.5.144".

    .PARAMETER rangerVersionsNin
        Ranger versions not to include.

        Example: "2.0.0.0,2.1.5.144".

    .PARAMETER registeredAt__between
        Date range for first registration time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978764288-1514978999999".

    .PARAMETER registeredAt__gt
        Returns agents registeredAt after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER registeredAt__gte
        Returns agents registeredAt after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER registeredAt__lt
        Returns agents registeredAt before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER registeredAt__lte
        Returns agents registeredAt before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER remoteProfilingStates
        Agent remote profiling state

    .PARAMETER remoteProfilingStatesNin
        Do not include these Agent remote profiling states

    .PARAMETER scanStatus
        Scan status.

        Allowed values:
        'aborted', 'finished', 'none', 'started'

    .PARAMETER scanStatuses
        Included scan statuses.

        Allowed values:
        'aborted', 'finished', 'none', 'started'

    .PARAMETER scanStatusesNin
        Not included scan statuses.

        Allowed values:
        'aborted', 'finished', 'none', 'started'

    .PARAMETER serialNumber__contains
        Free-text filter by Serial Number

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'accountName', 'activeThreats', 'agentNamespace', 'agentPodName', 'agentVersion', 'appsVulnerabilityStatus', 'cloudAccount', 'cloudImage', 'cloudInstanceId', 'cloudInstanceSize', 'cloudLocation',
        'cloudNetwork', 'cloudProvider', 'clusterName', 'computerName', 'consoleMigrationStatus', 'coreCount', 'cpuId', 'createdAt', 'decommissionedAt', 'domain', 'encryptedApplications', 'externalId',
        'externalIp', 'firewallEnabled', 'groupId', 'id', 'infected', 'installerType', 'isActive', 'isDecommissioned', 'isPendingUninstall', 'isUninstalled', 'isUpToDate', 'kubernetesType',
        'kubernetesVersion', 'lastActiveDate', 'lastLoggedInUserName', 'locationEnabled', 'machineType', 'mitigationMode', 'mitigationModeSuspicious', 'networkInterfaceInet', 'networkInterfacePhysical',
        'networkQuarantineEnabled', 'networkStatus', 'operationState', 'osArch', 'osName', 'osType', 'rangerVersion', 'registeredAt', 'remoteProfilingState', 'scanStatus', 'serialNumber', 'siteId',
        'siteName', 'threatContentHash', 'threatCreatedAt', 'threatMitigationStatus', 'threatRebootRequired', 'threatResolved', 'totalMemory', 'updatedAt', 'uuid'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER tagsData
        A JSON formatted String, where each key represents a tag key,
        and each value represents a list of String values.

        Example: "{"key1": ["value1_1", "value1_2"], "key2": ["value2"]}".

    .PARAMETER threatContentHash
        Include only Agents that have at least one threat with this content hash.

        Example: "cf23df2207d99a74fbe169e3eba035e633b65d94".

    .PARAMETER threatCreatedAt__between
        Agents with threats reported in a date range (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978764288-1514978999999".

    .PARAMETER threatCreatedAt__gt
        Returns agents with threatCreatedAt after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER threatCreatedAt__gte
        Returns agents with threatCreatedAt after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER threatCreatedAt__lt
        Returns agents with threatCreatedAt before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER threatCreatedAt__lte
        Returns agents with threatCreatedAt before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER threatHidden
        Include only Agents with at least one hidden threat

    .PARAMETER threatMitigationStatus
        Include only Agents that have threats with this mitigation status.

        Allowed values:
        'active', 'blocked', 'mitigated', 'pending', 'suspicious', 'suspicious_resolved'

    .PARAMETER threatRebootRequired
        Has at least one threat with at least one mitigation action pending reboot to succeed

    .PARAMETER threatResolved
        Include only Agents with at least one resolved threat

    .PARAMETER totalMemory__between
        Total memory range (GB, inclusive).

        Example: "4-8".

    .PARAMETER totalMemory__gt
        Memory size (MB, more than)

    .PARAMETER totalMemory__gte
        Memory size (MB, more than or equal)

    .PARAMETER totalMemory__lt
        Memory size (MB, less than)

    .PARAMETER totalMemory__lte
        Memory size (MB, less than or equal)

    .PARAMETER updatedAt__between
        Date range for update time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER updatedAt__gt
        Returns agents updatedAt after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__gte
        Returns agents updatedAt after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lt
        Returns agents updatedAt before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lte
        Returns agents updatedAt before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER userActionsNeeded
        Included pending user actions.

        Allowed values:
        'agent_suppressed_category', 'extended_exclusions_partially_accepted',
        'incompatible_os', 'incompatible_os_category', 'missing_permissions_category',
        'none', 'reboot_category', 'reboot_needed', 'rebootless_without_dynamic_detection',
        'unprotected', 'unprotected_category', 'upgrade_needed', 'user_action_needed',
        'user_action_needed_bluetooth_per', 'user_action_needed_fda',
        'user_action_needed_network', 'user_action_needed_rs_fda'

    .PARAMETER userActionsNeededNin
        Excluded pending user actions.

        Allowed values:
        'agent_suppressed_category', 'extended_exclusions_partially_accepted',
        'incompatible_os', 'incompatible_os_category', 'missing_permissions_category',
        'none', 'reboot_category', 'reboot_needed', 'rebootless_without_dynamic_detection',
        'unprotected', 'unprotected_category', 'upgrade_needed', 'user_action_needed',
        'user_action_needed_bluetooth_per', 'user_action_needed_fda',
        'user_action_needed_network', 'user_action_needed_rs_fda'

    .PARAMETER uuid
        Agent's universally unique identifier.

        Example: "ff819e70af13be381993075eb0ce5f2f6de05be2".

    .PARAMETER uuid__contains
        Free-text filter by Agent UUID (supports multiple values).

        Example: "e92-01928,b055".

    .PARAMETER uuids
        A list of included UUIDs.

        Example: "ff819e70af13be381993075eb0ce5f2f6de05b11,ff819e70af13be381993075eb0ce5f2f6de05c22".

    .EXAMPLE
        Get-SentinelOneAgents

        Returns the first 10 agents

    .EXAMPLE
        Get-SentinelOneAgents -countAgents

        Returns the number of agents without any data that match a filter.

    .EXAMPLE
        Get-SentinelOneAgents -createdAt__gt '2018-02-27 14:32'

        Returns agents that were created after the defined dateTime

        dateTime values are converted to UTC, use -verbose to see the value it is converted to.

    .EXAMPLE
        Get-SentinelOneAgents -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        Review\validate every parameter & parameter help

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Agents/Get-SentinelOneAgents.html

#>

    [CmdletBinding( DefaultParameterSetName = 'indexByAgent' )]
    Param (
        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [Int64]$activeThreats,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [Int64]$activeThreats__gt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$adComputerMember__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$adComputerName__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$adComputerQuery__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$adQuery,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$adQuery__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$adUserMember__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$adUserName__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$adUserQuery__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentContentUpdateId__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentNamespace__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentPodName__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentVersions,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentVersionsNin,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'not_applicable', 'patch_required', 'up_to_date' )]
        [String[]]$appsVulnerabilityStatuses,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'not_applicable', 'patch_required', 'up_to_date' )]
        [String[]]$appsVulnerabilityStatusesNin,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$awsRole__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$awsSecurityGroups__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$awsSubnetIds__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$azureResourceGroup__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudAccount__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudImage__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudInstanceId__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudInstanceSize__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudLocation__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudNetwork__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudProvider,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudProviderNin,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudTags__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$clusterName__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$computerName,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$computerName__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$computerName__like,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'Failed', 'Migrated', 'N/A', 'Pending' )]
        [String[]]$consoleMigrationStatuses,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'Failed', 'Migrated', 'N/A', 'Pending' )]
        [String[]]$consoleMigrationStatusesNin,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$coreCount__between,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [Int64]$coreCount__gt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [Int64]$coreCount__gte,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [Int64]$coreCount__lt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [Int64]$coreCount__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByCount' )]
        [Switch]$countAgents,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$cpuCount__between,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [Int64]$cpuCount__gt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [Int64]$cpuCount__gte,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [Int64]$cpuCount__lt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [Int64]$cpuCount__lte,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$cpuId__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$createdAt__between,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gte,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lte,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$csvFilterId,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByAgent' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$decommissionedAt__between,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$decommissionedAt__gt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$decommissionedAt__gte,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$decommissionedAt__lt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$decommissionedAt__lte,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$domains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$domainsNin,

        [Parameter( Mandatory = $false)]
        [Switch]$encryptedApplications,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$externalId__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$externalIp__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$filteredGroupIds,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$filteredSiteIds,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$filterId,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$firewallEnabled,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$gatewayIp,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$gcpServiceAccount__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false)]
        [Switch]$hasLocalConfiguration,

        [Parameter( Mandatory = $false)]
        [Switch]$hasTags,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false)]
        [Switch]$infected,

        [Parameter( Mandatory = $false)]
        [ValidateSet( '.bsx', '.deb', '.exe', '.gz', '.img', '.msi', '.pkg', '.rpm', '.tar', '.zip', 'unknown' )]
        [String[]]$installerTypes,

        [Parameter( Mandatory = $false)]
        [ValidateSet( '.bsx', '.deb', '.exe', '.gz', '.img', '.msi', '.pkg', '.rpm', '.tar', '.zip', 'unknown' )]
        [String[]]$installerTypesNin,

        [Parameter( Mandatory = $false)]
        [Switch]$isActive,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$isDecommissioned,

        [Parameter( Mandatory = $false)]
        [Switch]$isPendingUninstall,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$isUninstalled,

        [Parameter( Mandatory = $false)]
        [Switch]$isUpToDate,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sNodeLabels__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sNodeName__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sType__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sVersion__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$lastActiveDate__between,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$lastActiveDate__gt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$lastActiveDate__gte,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$lastActiveDate__lt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$lastActiveDate__lte,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$lastLoggedInUserName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByAgent' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$locationEnabled,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$locationIds,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$locationIdsNin,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown' )]
        [String[]]$machineTypes,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown' )]
        [String[]]$machineTypesNin,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'Failed', 'Migrated', 'N/A', 'Pending' )]
        [String[]]$migrationStatus,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'detect', 'protect' )]
        [String[]]$mitigationMode,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'detect', 'protect' )]
        [String[]]$mitigationModeSuspicious,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$networkInterfaceGatewayMacAddress__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$networkInterfaceInet__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$networkInterfacePhysical__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$networkQuarantineEnabled,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'connected', 'connecting', 'disconnected', 'disconnecting' )]
        [String[]]$networkStatuses,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'connected', 'connecting', 'disconnected', 'disconnecting' )]
        [String[]]$networkStatusesNin,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$operationalStates,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$operationalStatesNin,

        [Parameter( Mandatory = $false)]
        [ValidateSet( '32 bit', '64 bit' )]
        [String[]]$osArch,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'linux', 'macos', 'windows', 'windows_legacy' )]
        [String[]]$osTypes,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'linux', 'macos', 'windows', 'windows_legacy' )]
        [String[]]$osTypesNin,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$osVersion__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'Disabled', 'Enabled', 'NotApplicable' )]
        [String[]]$rangerStatuses,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'Disabled', 'Enabled', 'NotApplicable' )]
        [String[]]$rangerStatusesNin,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$rangerVersions,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$rangerVersionsNin,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$registeredAt__between,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$registeredAt__gt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$registeredAt__gte,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$registeredAt__lt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$registeredAt__lte,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$remoteProfilingStates,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$remoteProfilingStatesNin,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'aborted', 'finished', 'none', 'started' )]
        [String]$scanStatus,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'aborted', 'finished', 'none', 'started' )]
        [String[]]$scanStatuses,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'aborted', 'finished', 'none', 'started' )]
        [String[]]$scanStatusesNin,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$serialNumber__contains,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true)]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByAgent' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByAgent' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByAgent' )]
        [ValidateSet(   'accountName', 'activeThreats', 'agentNamespace', 'agentPodName', 'agentVersion', 'appsVulnerabilityStatus',
                        'cloudAccount', 'cloudImage', 'cloudInstanceId', 'cloudInstanceSize', 'cloudLocation','cloudNetwork', 'cloudProvider',
                        'clusterName', 'computerName', 'consoleMigrationStatus', 'coreCount', 'cpuId', 'createdAt', 'decommissionedAt', 'domain',
                        'encryptedApplications', 'externalId', 'externalIp', 'firewallEnabled', 'groupId', 'id', 'infected', 'installerType',
                        'isActive', 'isDecommissioned', 'isPendingUninstall', 'isUninstalled', 'isUpToDate', 'kubernetesType','kubernetesVersion',
                        'lastActiveDate', 'lastLoggedInUserName', 'locationEnabled', 'machineType', 'mitigationMode', 'mitigationModeSuspicious',
                        'networkInterfaceInet', 'networkInterfacePhysical', 'networkQuarantineEnabled', 'networkStatus', 'operationState',
                        'osArch', 'osName', 'osType', 'rangerVersion', 'registeredAt', 'remoteProfilingState', 'scanStatus', 'serialNumber', 'siteId',
                        'siteName', 'threatContentHash', 'threatCreatedAt', 'threatMitigationStatus', 'threatRebootRequired', 'threatResolved', 'totalMemory', 'updatedAt', 'uuid'
                    )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByAgent' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$tagsData,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$threatContentHash,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$threatCreatedAt__between,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$threatCreatedAt__gt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$threatCreatedAt__gte,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$threatCreatedAt__lt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$threatCreatedAt__lte,

        [Parameter( Mandatory = $false)]
        [Switch]$threatHidden,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'active', 'blocked', 'mitigated', 'pending', 'suspicious', 'suspicious_resolved' )]
        [String]$threatMitigationStatus,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$threatRebootRequired,

        [Parameter( Mandatory = $false)]
        [Switch]$threatResolved,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$totalMemory__between,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalMemory__gt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalMemory__gte,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalMemory__lt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalMemory__lte,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$updatedAt__between,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gte,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lte,

        [Parameter( Mandatory = $false)]
        [ValidateSet(   'agent_suppressed_category', 'extended_exclusions_partially_accepted',
                        'incompatible_os', 'incompatible_os_category', 'missing_permissions_category',
                        'none', 'reboot_category', 'reboot_needed', 'rebootless_without_dynamic_detection',
                        'unprotected', 'unprotected_category', 'upgrade_needed', 'user_action_needed',
                        'user_action_needed_bluetooth_per', 'user_action_needed_fda',
                        'user_action_needed_network', 'user_action_needed_rs_fda'
                    )]
        [String[]]$userActionsNeeded,

        [Parameter( Mandatory = $false)]
        [ValidateSet(   'agent_suppressed_category', 'extended_exclusions_partially_accepted',
                        'incompatible_os', 'incompatible_os_category', 'missing_permissions_category',
                        'none', 'reboot_category', 'reboot_needed', 'rebootless_without_dynamic_detection',
                        'unprotected', 'unprotected_category', 'upgrade_needed', 'user_action_needed',
                        'user_action_needed_bluetooth_per', 'user_action_needed_fda',
                        'user_action_needed_network', 'user_action_needed_rs_fda'
                    )]
        [String[]]$userActionsNeededNin,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$uuid,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$uuid__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$uuids

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'indexByAgent'  {$resource_uri = "/agents"}
            'indexByCount'  {$resource_uri = "/agents/count"}
        }

        if ($countAgents){
            Write-Verbose "Using [ /agents/count ] instead of [ /agents ] uri."
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable','countAgents'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                $body += @{ $Key.Key = $universalTime }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneAgentApplications {
<#
    .SYNOPSIS
        Get the installed applications for a specific Agent.

    .DESCRIPTION
        The Get-SentinelOneAgentApplications cmdlet gets the installed applications for a specific Agent.

    .PARAMETER ids
        Agent ID list.

        Example: "225494730938493804,225494730938493915".

    .EXAMPLE
        Get-SentinelOneAgentApplications -ids 225494730938493804

        Returns the applications installed on the defined agentId

    .EXAMPLE
        225494730938493804 | Get-SentinelOneAgentApplications

        Returns the applications installed on the defined agentId

    .EXAMPLE
        Get-SentinelOneAgentApplications -ids 225494730938493804,225494730938493915

        Returns the applications installed on the defined agentIds

    .NOTES
        Maybe add an agentId column to the output to help differentiate where applications are installed

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Agents/Get-SentinelOneAgentApplications.html
#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ValueFromPipeline = $true , ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids
    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/agents/applications"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ( $PSCmdlet.ParameterSetName -eq 'index' ) {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }
        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneAgentPassphrases {
<#
    .SYNOPSIS
        Show the passphrase for the Agents that match the filter.

    .DESCRIPTION
        The Get-SentinelOneAgentPassphrases cmdlet shows the passphrase for the Agents that match the filter.

        This is an important command. You need the passphrase for most
        SentinelCtl commands and for different API commands.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER activeThreats
        Include Agents with this amount of active threats.

        Example: "3"

    .PARAMETER activeThreats__gt
        Include Agents with at least this amount of active threats.

        Example: "5".

    .PARAMETER adComputerMember__contains
        Free-text filter by Active Directory computer groups String.

        Example: "DC=sentinelone".

    .PARAMETER adComputerName__contains
        Free-text filter by Active Directory computer name String

        Example: "DC=sentinelone".

    .PARAMETER adComputerQuery__contains
        Free-text filter by Active Directory computer name or its groups.

        Example: "DC=sentinelone,Windows".

    .PARAMETER adQuery
        An Active Directory query String.

        Example: "CN=Managers,DC=sentinelone,DC=com".

    .PARAMETER adQuery__contains
        Free-text filter by Active Directory String.

        Example: "DC=sentinelone".

    .PARAMETER adUserMember__contains
        Free-text filter by Active Directory user groups String.

        Example: "DC=sentinelone".

    .PARAMETER adUserName__contains
        Free-text filter by Active Directory username String.

        Example: "DC=sentinelone".

    .PARAMETER adUserQuery__contains
        Free-text filter by Active Directory computer name or its groups.

        Example: "DC=sentinelone,John".

    .PARAMETER agentContentUpdateId__contains
        Free-text filter by content update ID

    .PARAMETER agentNamespace__contains
        Free-text filter by agent namespace

    .PARAMETER agentPodName__contains
        Free-text filter by agent pod name

    .PARAMETER agentVersions
        Agent versions to include.

        Example: "2.0.0.0,2.1.5.144".

    .PARAMETER agentVersionsNin
        Agent versions not to include.

        Example: "2.0.0.0,2.1.5.144".

    .PARAMETER appsVulnerabilityStatuses
        Apps vulnerability status in.

        Allowed values:
        'not_applicable', 'patch_required', 'up_to_date'

    .PARAMETER appsVulnerabilityStatusesNin
        Apps vulnerability status nin.

        Allowed values:
        'not_applicable', 'patch_required', 'up_to_date'

    .PARAMETER awsRole__contains
        Free-text filter by aws role

    .PARAMETER awsSecurityGroups__contains
        Free-text filter by aws securityGroups

    .PARAMETER awsSubnetIds__contains
        Free-text filter by aws subnet ids

    .PARAMETER azureResourceGroup__contains
        Free-text filter by azure resource group

    .PARAMETER cloudAccount__contains
        Free-text filter by cloud account

    .PARAMETER cloudImage__contains
        Free-text filter by cloud image

    .PARAMETER cloudInstanceId__contains
        Free-text filter by cloud instance id

    .PARAMETER cloudInstanceSize__contains
        Free-text filter by cloud instance size

    .PARAMETER cloudLocation__contains
        Free-text filter by cloud location

    .PARAMETER cloudNetwork__contains
        Free-text filter by cloud network

    .PARAMETER cloudProvider
        Agents from which cloud provider

    .PARAMETER cloudProviderNin
        Exclude Agents from these cloud provider

    .PARAMETER cloudTags__contains
        Free-text filter by cloud tags

    .PARAMETER clusterName__contains
        Free-text filter by cluster name

    .PARAMETER computerName
        Computer name.

        Example: "My Office Desktop".

    .PARAMETER computerName__contains
        Free-text filter by computer name.

        Example: "john-office,WIN".

    .PARAMETER computerName__like
        Match computer name partially (subString).

        Example: "Lab1".

    .PARAMETER consoleMigrationStatuses
        Migration status in.

        Allowed values:
        'Failed', 'Migrated', 'N/A', 'Pending'

    .PARAMETER consoleMigrationStatusesNin
        Migration status nin.

        Allowed values:
        'Failed', 'Migrated', 'N/A', 'Pending'

    .PARAMETER coreCount__between
        Possible number of CPU cores (inclusive).

        Example: "2-8".

    .PARAMETER coreCount__gt
        CPU cores (more than)

    .PARAMETER coreCount__gte
        CPU cores (more than or equal)

    .PARAMETER coreCount__lt
        CPU cores (less than)

    .PARAMETER coreCount__lte
        CPU cores (less than or equal)

    .PARAMETER cpuCount__between
        Possible number of CPU cores (inclusive).

        Example: "2-8".

    .PARAMETER cpuCount__gt
        Number of CPUs (more than)

    .PARAMETER cpuCount__gte
        Number of CPUs (more than or equal)

    .PARAMETER cpuCount__lt
        Number of CPUs (less than)

    .PARAMETER cpuCount__lte
        Number of CPUs (less than or equal)

    .PARAMETER cpuId__contains
        Free-text filter by CPU name.

        Example: "Intel,AMD".

    .PARAMETER createdAt__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER createdAt__gt
        Returns activities created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns activities created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns activities created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns activities created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER csvFilterId
        The ID of the CSV file to filter by.

        Example: "225494730938493804".

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER decommissionedAt__between
        Date range for decommission time (format: <from_timestamp>-<to_timestamp>, inclusive)

        Example: "1514978890136-1514978650130".

    .PARAMETER decommissionedAt__gt
        Returns activities decommissionedAt after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER decommissionedAt__gte
        Returns activities decommissionedAt after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER decommissionedAt__lt
        Returns activities decommissionedAt before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER decommissionedAt__lte
        Returns activities decommissionedAt before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER domains
        Included network domains.

        Example: "mybusiness.net,workgroup".

    .PARAMETER domainsNin
        Not included network domains.

        Example: "mybusiness.net,workgroup".

    .PARAMETER encryptedApplications
        Disk encryption status

    .PARAMETER externalId__contains
        Free-text filter by external ID (Customer ID).

        Example: "Tag#1 - monitoring,Performance machine".

    .PARAMETER externalIp__contains
        Free-text filter by visible IP (supports multiple values).

        Example: "205,127.0".

    .PARAMETER filteredGroupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER filteredSiteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER filterId
        Include all Agents matching this saved filter.

        Example: "225494730938493804".

    .PARAMETER firewallEnabled
        The agents supports Firewall Control and it is enabled for the agent's group

    .PARAMETER gatewayIp
        Gateway ip.

        Example: "192.168.0.1".

    .PARAMETER gcpServiceAccount__contains
        Free-text filter by gcp service account

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER hasLocalConfiguration
        Agent has a local configuration set

    .PARAMETER hasTags
        Include only Agents that have tags

    .PARAMETER ids
        A list of Agent IDs.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER infected
        Include only Agents with at least one active threat

    .PARAMETER installerTypes
        Include only Agents installed with these package types.

        Allowed values:
        '.bsx', '.deb', '.exe', '.gz', '.img', '.msi', '.pkg', '.rpm', '.tar', '.zip', 'unknown'

    .PARAMETER installerTypesNin
        Exclude Agents installed with these package types. Example: ".msi".

        Allowed values:
        '.bsx', '.deb', '.exe', '.gz', '.img', '.msi', '.pkg', '.rpm', '.tar', '.zip', 'unknown'

    .PARAMETER isActive
        Include only active Agents

    .PARAMETER isDecommissioned
        Include active, decommissioned or both.

        Example: "True,False".

    .PARAMETER isPendingUninstall
        Include only Agents with pending uninstall requests

    .PARAMETER isUninstalled
        Include installed, uninstalled or both.

        Example: "True,False".

    .PARAMETER isUpToDate
        Include only Agents with updated software

    .PARAMETER k8sNodeLabels__contains
        Free-text filter by K8s node labels

    .PARAMETER k8sNodeName__contains
        Free-text filter by K8s node name

    .PARAMETER k8sType__contains
        Free-text filter by K8s type

    .PARAMETER k8sVersion__contains
        Free-text filter by K8s version

    .PARAMETER lastActiveDate__between
        Date range for last active date(format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978764288-1514978999999".

    .PARAMETER lastActiveDate__gt
        Returns agents lastActiveDate after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastActiveDate__gte
        Returns agents lastActiveDate after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastActiveDate__lt
        Returns agents lastActiveDate before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastActiveDate__lte
        Returns agents lastActiveDate before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastLoggedInUserName__contains
        Free-text filter by username.

        Example: "admin,johnd1".

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER locationEnabled
        The agents supports Location Awareness and it is enabled for the agent's group

    .PARAMETER locationIds
        Include only Agents reporting these locations.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER locationIdsNin
        Do not include only Agents reporting these locations.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER machineTypes
        Included machine types.

        Allowed values:
        'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown'

    .PARAMETER machineTypesNin
        Included machine types.

        Allowed values:
        'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown'

    .PARAMETER migrationStatus
        Migration status.

        Allowed values:
        'failed', 'migrated', 'n/a', 'pending'

    .PARAMETER mitigationMode
        Agent mitigation mode policy.

        Allowed values:
        'detect', 'protect'

    .PARAMETER mitigationModeSuspicious
        Mitigation mode policy for suspicious activity.

        Allowed values:
        'detect', 'protect'

    .PARAMETER networkInterfaceGatewayMacAddress__contains
        Free-text filter by Gateway MAC address

        Example: "aa:0f,:41:".

    .PARAMETER networkInterfaceInet__contains
        Free-text filter by local IP.

        Example: "192,10.0.0".

    .PARAMETER networkInterfacePhysical__contains
        Free-text filter by MAC address.

        Example: "aa:0f,:41:".

    .PARAMETER networkQuarantineEnabled
        The agents supports Network Quarantine Control and its enabled for the agent's group

    .PARAMETER networkStatuses
        Included network statuses.

        Allowed values:
        'connected', 'connecting', 'disconnected', 'disconnecting'

    .PARAMETER networkStatusesNin
        Included network statuses.

        Allowed values:
        'connected', 'connecting', 'disconnected', 'disconnecting'

    .PARAMETER operationalStates
        Agent operational state

    .PARAMETER operationalStatesNin
        Do not include these Agent operational states

    .PARAMETER osArch
        OS architecture.

        Allowed values:
        '32 bit', '64 bit'

    .PARAMETER osTypes
        Included OS types.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER osTypesNin
        Not included OS types.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER osVersion__contains
        Free-text filter by OS full name and version.

        Example: "Service Pack 1".

    .PARAMETER query
        A free-text search term, will match applicable attributes (sub-String match).

        Note: Device's physical addresses will be matched if they start with the search term only (no match if they contain the term).

        Example: "Linux".

    .PARAMETER rangerStatuses
        Status of Ranger.

        Allowed values:
        'Disabled', 'Enabled', 'NotApplicable'

    .PARAMETER rangerStatusesNin
        Do not include these Ranger Statuses.

        Allowed values:
        'Disabled', 'Enabled', 'NotApplicable'

    .PARAMETER rangerVersions
        Ranger versions to include.

        Example: "2.0.0.0,2.1.5.144".

    .PARAMETER rangerVersionsNin
        Ranger versions not to include.

        Example: "2.0.0.0,2.1.5.144".

    .PARAMETER registeredAt__between
        Date range for first registration time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978764288-1514978999999".

    .PARAMETER registeredAt__gt
        Returns agents registeredAt after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER registeredAt__gte
        Returns agents registeredAt after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER registeredAt__lt
        Returns agents registeredAt before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER registeredAt__lte
        Returns agents registeredAt before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER remoteProfilingStates
        Agent remote profiling state

    .PARAMETER remoteProfilingStatesNin
        Do not include these Agent remote profiling states

    .PARAMETER scanStatus
        Scan status.

        Allowed values:
        'aborted', 'finished', 'none', 'started'

    .PARAMETER scanStatuses
        Included scan statuses.

        Allowed values:
        'aborted', 'finished', 'none', 'started'

    .PARAMETER scanStatusesNin
        Not included scan statuses.

        Allowed values:
        'aborted', 'finished', 'none', 'started'

    .PARAMETER serialNumber__contains
        Free-text filter by Serial Number

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER tagsData
        A JSON formatted String, where each key represents a tag key,
        and each value represents a list of String values.

        Example: "{"key1": ["value1_1", "value1_2"], "key2": ["value2"]}".

    .PARAMETER threatContentHash
        Include only Agents that have at least one threat with this content hash.

        Example: "cf23df2207d99a74fbe169e3eba035e633b65d94".

    .PARAMETER threatCreatedAt__between
        Agents with threats reported in a date range (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978764288-1514978999999".

    .PARAMETER threatCreatedAt__gt
        Returns agents with threatCreatedAt after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER threatCreatedAt__gte
        Returns agents with threatCreatedAt after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER threatCreatedAt__lt
        Returns agents with threatCreatedAt before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER threatCreatedAt__lte
        Returns agents with threatCreatedAt before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER threatHidden
        Include only Agents with at least one hidden threat

    .PARAMETER threatMitigationStatus
        Include only Agents that have threats with this mitigation status.

        Allowed values:
        'active', 'blocked', 'mitigated', 'pending', 'suspicious', 'suspicious_resolved'

    .PARAMETER threatRebootRequired
        Has at least one threat with at least one mitigation action pending reboot to succeed

    .PARAMETER threatResolved
        Include only Agents with at least one resolved threat

    .PARAMETER totalMemory__between
        Total memory range (GB, inclusive).

        Example: "4-8".

    .PARAMETER totalMemory__gt
        Memory size (MB, more than)

    .PARAMETER totalMemory__gte
        Memory size (MB, more than or equal)

    .PARAMETER totalMemory__lt
        Memory size (MB, less than)

    .PARAMETER totalMemory__lte
        Memory size (MB, less than or equal)

    .PARAMETER updatedAt__between
        Date range for update time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER updatedAt__gt
        Returns agents updatedAt after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__gte
        Returns agents updatedAt after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lt
        Returns agents updatedAt before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lte
        Returns agents updatedAt before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER userActionsNeeded
        Included pending user actions.

        Allowed values:
        'agent_suppressed_category', 'extended_exclusions_partially_accepted',
        'incompatible_os', 'incompatible_os_category', 'missing_permissions_category',
        'none', 'reboot_category', 'reboot_needed', 'rebootless_without_dynamic_detection',
        'unprotected', 'unprotected_category', 'upgrade_needed', 'user_action_needed',
        'user_action_needed_bluetooth_per', 'user_action_needed_fda',
        'user_action_needed_network', 'user_action_needed_rs_fda'

    .PARAMETER userActionsNeededNin
        Excluded pending user actions.

        Allowed values:
        'agent_suppressed_category', 'extended_exclusions_partially_accepted',
        'incompatible_os', 'incompatible_os_category', 'missing_permissions_category',
        'none', 'reboot_category', 'reboot_needed', 'rebootless_without_dynamic_detection',
        'unprotected', 'unprotected_category', 'upgrade_needed', 'user_action_needed',
        'user_action_needed_bluetooth_per', 'user_action_needed_fda',
        'user_action_needed_network', 'user_action_needed_rs_fda'

    .PARAMETER uuid
        Agent's universally unique identifier.

        Example: "ff819e70af13be381993075eb0ce5f2f6de05be2".

    .PARAMETER uuid__contains
        Free-text filter by Agent UUID (supports multiple values).

        Example: "e92-01928,b055".

    .PARAMETER uuids
        A list of included UUIDs.

        Example: "ff819e70af13be381993075eb0ce5f2f6de05b11,ff819e70af13be381993075eb0ce5f2f6de05c22".

    .EXAMPLE
        Get-SentinelOneAgentPassphrases

        Returns the first 10 agents and their passphrases

    .EXAMPLE
        Get-SentinelOneAgentPassphrases -createdAt__gt '2018-02-27 14:32'

        Returns agents that were created after the defined dateTime and their passphrases

        dateTime values are converted to UTC, use -verbose to see the value it is converted to.

    .EXAMPLE
        Get-SentinelOneAgentPassphrases -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns the first 10 agents and their passphrases

        The cursor value can be found under pagination

    .NOTES
        Review\validate every parameter & parameter help

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Agents/Get-SentinelOneAgentPassphrases.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$activeThreats,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$activeThreats__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$adComputerMember__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$adComputerName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$adComputerQuery__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$adQuery,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$adQuery__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$adUserMember__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$adUserName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$adUserQuery__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentContentUpdateId__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentNamespace__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentPodName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentVersions,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentVersionsNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'not_applicable', 'patch_required', 'up_to_date' )]
        [String[]]$appsVulnerabilityStatuses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'not_applicable', 'patch_required', 'up_to_date' )]
        [String[]]$appsVulnerabilityStatusesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$awsRole__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$awsSecurityGroups__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$awsSubnetIds__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$azureResourceGroup__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudAccount__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudImage__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudInstanceId__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudInstanceSize__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudLocation__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudNetwork__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudProvider,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudProviderNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudTags__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$clusterName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$computerName,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$computerName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$computerName__like,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Failed', 'Migrated', 'N/A', 'Pending' )]
        [String[]]$consoleMigrationStatuses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Failed', 'Migrated', 'N/A', 'Pending' )]
        [String[]]$consoleMigrationStatusesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$coreCount__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$coreCount__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$coreCount__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$coreCount__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$coreCount__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cpuCount__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$cpuCount__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$cpuCount__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$cpuCount__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$cpuCount__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cpuId__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$createdAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$csvFilterId,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$decommissionedAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$decommissionedAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$decommissionedAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$decommissionedAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$decommissionedAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$domains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$domainsNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$encryptedApplications,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$externalId__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$externalIp__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$filteredGroupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$filteredSiteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filterId,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$firewallEnabled,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$gatewayIp,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$gcpServiceAccount__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$hasLocalConfiguration,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$hasTags,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$infected,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( '.bsx', '.deb', '.exe', '.gz', '.img', '.msi', '.pkg', '.rpm', '.tar', '.zip', 'unknown' )]
        [String[]]$installerTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( '.bsx', '.deb', '.exe', '.gz', '.img', '.msi', '.pkg', '.rpm', '.tar', '.zip', 'unknown' )]
        [String[]]$installerTypesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$isActive,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$isDecommissioned,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$isPendingUninstall,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$isUninstalled,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$isUpToDate,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sNodeLabels__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sNodeName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sType__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sVersion__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$lastActiveDate__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$lastActiveDate__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$lastActiveDate__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$lastActiveDate__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$lastActiveDate__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$lastLoggedInUserName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$locationEnabled,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$locationIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$locationIdsNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown' )]
        [String[]]$machineTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown' )]
        [String[]]$machineTypesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Failed', 'Migrated', 'N/A', 'Pending' )]
        [String[]]$migrationStatus,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'detect', 'protect' )]
        [String[]]$mitigationMode,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'detect', 'protect' )]
        [String[]]$mitigationModeSuspicious,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$networkInterfaceGatewayMacAddress__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$networkInterfaceInet__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$networkInterfacePhysical__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$networkQuarantineEnabled,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'connected', 'connecting', 'disconnected', 'disconnecting' )]
        [String[]]$networkStatuses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'connected', 'connecting', 'disconnected', 'disconnecting' )]
        [String[]]$networkStatusesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$operationalStates,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$operationalStatesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( '32 bit', '64 bit' )]
        [String[]]$osArch,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'linux', 'macos', 'windows', 'windows_legacy' )]
        [String[]]$osTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'linux', 'macos', 'windows', 'windows_legacy' )]
        [String[]]$osTypesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$osVersion__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Disabled', 'Enabled', 'NotApplicable' )]
        [String[]]$rangerStatuses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Disabled', 'Enabled', 'NotApplicable' )]
        [String[]]$rangerStatusesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$rangerVersions,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$rangerVersionsNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$registeredAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$registeredAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$registeredAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$registeredAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$registeredAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$remoteProfilingStates,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$remoteProfilingStatesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'aborted', 'finished', 'none', 'started' )]
        [String]$scanStatus,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'aborted', 'finished', 'none', 'started' )]
        [String[]]$scanStatuses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'aborted', 'finished', 'none', 'started' )]
        [String[]]$scanStatusesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$serialNumber__contains,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$tagsData,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$threatContentHash,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$threatCreatedAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$threatCreatedAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$threatCreatedAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$threatCreatedAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$threatCreatedAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$threatHidden,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'active', 'blocked', 'mitigated', 'pending', 'suspicious', 'suspicious_resolved' )]
        [String]$threatMitigationStatus,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$threatRebootRequired,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$threatResolved,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$totalMemory__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalMemory__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalMemory__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalMemory__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalMemory__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$updatedAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'agent_suppressed_category', 'extended_exclusions_partially_accepted',
                        'incompatible_os', 'incompatible_os_category', 'missing_permissions_category',
                        'none', 'reboot_category', 'reboot_needed', 'rebootless_without_dynamic_detection',
                        'unprotected', 'unprotected_category', 'upgrade_needed', 'user_action_needed',
                        'user_action_needed_bluetooth_per', 'user_action_needed_fda',
                        'user_action_needed_network', 'user_action_needed_rs_fda'
                    )]
        [String[]]$userActionsNeeded,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'agent_suppressed_category', 'extended_exclusions_partially_accepted',
                        'incompatible_os', 'incompatible_os_category', 'missing_permissions_category',
                        'none', 'reboot_category', 'reboot_needed', 'rebootless_without_dynamic_detection',
                        'unprotected', 'unprotected_category', 'upgrade_needed', 'user_action_needed',
                        'user_action_needed_bluetooth_per', 'user_action_needed_fda',
                        'user_action_needed_network', 'user_action_needed_rs_fda'
                    )]
        [String[]]$userActionsNeededNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$uuid,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$uuid__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$uuids

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/agents/passphrases"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ( $PSCmdlet.ParameterSetName -eq 'index' ) {

            ForEach ($Key in $PSBoundParameters.GetEnumerator()){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                    Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                    Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                    $body += @{ $Key.Key = $universalTime }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }
        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneAgentTags {
<#
    .SYNOPSIS
        Get endpoint Tags.

    .DESCRIPTION
        The Get-SentinelOneAgentTags cmdlet gets endpoint Tags.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER description
        Tag description

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ids
        List of tag IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER includeChildren
        Return tags from children scope levels

    .PARAMETER includeParents
        Return tags from parent scope levels

    .PARAMETER key
        Tag key

    .PARAMETER key__contains
        Free-text filter by tag key. Example: "server".

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER query
        Free text search on fields key, value, description

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'createdBy', 'description', 'key', 'scopePath', 'updatedAt', 'updatedBy', 'value'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER value
        Tag value

    .PARAMETER value__contains
        Free-text filter by tag value. Example: "server".

    .PARAMETER uuids
        A list of included UUIDs.

        Example: "ff819e70af13be381993075eb0ce5f2f6de05b11,ff819e70af13be381993075eb0ce5f2f6de05c22".

    .EXAMPLE
        Get-SentinelOneAgentTags

        Returns endpoint Tags without their parents

    .EXAMPLE
        Get-SentinelOneAgentTags -includeParents

        Returns endpoint Tags with their parents

    .EXAMPLE
        Get-SentinelOneAgentTags -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns endpoint Tags after the define cursor without their parents

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Agents/Get-SentinelOneAgentTags.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$description,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$includeChildren,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$includeParents,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$key,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$key__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'createdBy', 'description', 'key', 'scopePath', 'updatedAt', 'updatedBy', 'value' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$value,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$value__contains

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/agents/tags"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ( $PSCmdlet.ParameterSetName -eq 'index' ) {

            #Switching to $psKey as $Key overlaps causing issues
            ForEach ( $psKey in $PSBoundParameters.GetEnumerator() ){

                if($excludedParameters -contains $psKey.Key ){$null}
                elseif ( $psKey.Value.GetType().IsArray ){
                    Write-Verbose "The value for parameter [ $($psKey.Key) ] is an array"
                    $body += @{ $psKey.Key = $psKey.Value -join (',') }
                }
                else{
                    $body += @{ $psKey.Key = $psKey.Value }
                }

            }
        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\agents\Agents-GET.ps1' 5254
#Region '.\Public\alerts\Alerts-GET.ps1' 0
function Get-SentinelOneAlerts {
<#
    .SYNOPSIS
        Get a list of alerts for a given scope

    .DESCRIPTION
        The Get-SentinelOneAlerts cmdlet gets a list of alerts for a given scope

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER analystVerdict__in
        Filter threats by a analyst verdict.

        Allowed values:
        'FALSE_POSITIVE', 'SUSPICIOUS', 'TRUE_POSITIVE', 'UNDEFINED'

    .PARAMETER containerImageName__contains
        Free-text filter by the endpoint container image name.

    .PARAMETER containerLabels__contains
        Free-text filter by the endpoint container labels.

    .PARAMETER containerName__contains
        Free-text filter by the endpoint container name.

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER createdAt__gt
        Returns alerts created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns alerts created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns alerts created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns alerts created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER disablePagination
        If true, all rules for requested scope will be returned

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ids
        A list of Alert IDs.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER incidentStatus__in
        Filter threats by a incident status.

        Allowed values:
        'IN_PROGRESS', 'RESOLVED', 'UNRESOLVED'

    .PARAMETER k8sCluster__contains
        Free-text filter by the endpoint Kubernetes cluster name.

    .PARAMETER k8sControllerLabels__contains
        Free-text filter by the endpoint Kubernetes controller labels

    .PARAMETER k8sControllerName__contains
        Free-text filter by the endpoint Kubernetes controller name

    .PARAMETER k8sNamespaceLabels__contains
        Free-text filter by the endpoint Kubernetes namespace labels

    .PARAMETER k8sNamespaceName__contains
        Free-text filter by the endpoint Kubernetes namespace name

    .PARAMETER k8sNode__contains
        Free-text filter by the endpoint Kubernetes node name

    .PARAMETER k8sPod__contains
        Free-text filter by the endpoint Kubernetes pod name

    .PARAMETER k8sPodLabels__contains
        Free-text filter by the endpoint Kubernetes pod labels

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER machineType__in
        Agent machine type

    .PARAMETER origAgentName__contains
        Free-text filter by agent name.

        Example: "ilia".

    .PARAMETER origAgentOsRevision__contains
        Free-text filter by agent OS revision.

        Example: "win7".

    .PARAMETER origAgentUuid__contains
        Free-text filter by agent UUID.

        Example: "win7".

    .PARAMETER origAgentVersion__contains
        Free-text filter by agent OS version.

        Example: "7.11".

    .PARAMETER osType__in
        Included OS types

    .PARAMETER query
        A free-text search term, will match applicable attributes (sub-String match).

        Note: Device's physical addresses will be matched if they start with the search term only (no match if they contain the term).

        Example: "Linux".

    .PARAMETER reportedAt__gt
        Returns agents reportedAt after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER reportedAt__gte
        Returns agents reportedAt after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER reportedAt__lt
        Returns agents reportedAt before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER reportedAt__lte
        Returns agents reportedAt before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER ruleName__contains
        Free-text filter by rule name.

        Example: "rule1".

    .PARAMETER scopes
        Filter results by scope.

        Allowed values:
        'account', 'global', 'group', 'site'

    .PARAMETER severity__in
        Severity level

        Allowed values:
        'Critical', 'High', 'Low', 'Medium'

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'agentDetectionInfoMachineType', 'agentDetectionInfoName', 'agentDetectionInfoOsFamily', 'agentDetectionInfoOsName', 'agentDetectionInfoOsRevision',
        'agentDetectionInfoSiteId', 'agentDetectionInfoUuid', 'agentDetectionInfoVersion', 'alertInfoAlertId', 'alertInfoAnalystVerdict', 'alertInfoCreatedAt',
        'alertInfoDvEventId', 'alertInfoEventType', 'alertInfoHitType', 'alertInfoIncidentStatus', 'alertInfoReportedAt', 'alertInfoSource', 'analystVerdict',
        'containerInfoId', 'containerInfoImage', 'containerInfoLabels', 'containerInfoName', 'id', 'incidentStatus', 'kubernetesInfoCluster', 'kubernetesInfoControllerKind',
        'kubernetesInfoControllerLabels', 'kubernetesInfoControllerName', 'kubernetesInfoNamespace', 'kubernetesInfoNamespaceLabels', 'kubernetesInfoNode', 'kubernetesInfoPod',
        'kubernetesInfoPodLabels', 'osName', 'ruleInfoDescription', 'ruleInfoId', 'ruleInfoName', 'ruleInfoScopeLevel', 'ruleInfoSeverity', 'ruleInfoTreatAsThreat',
        'severity', 'sourceParentProcessInfoCommandline', 'sourceParentProcessInfoFileHashMd5', 'sourceParentProcessInfoFileHashSha1', 'sourceParentProcessInfoFileHashSha256',
        'sourceParentProcessInfoFilePath', 'sourceParentProcessInfoFileSignerIdentity', 'sourceParentProcessInfoIntegrityLevel', 'sourceParentProcessInfoName',
        'sourceParentProcessInfoPid', 'sourceParentProcessInfoPidStarttime', 'sourceParentProcessInfoStoryline', 'sourceParentProcessInfoSubsystem', 'sourceParentProcessInfoUser',
        'sourceProcessInfoCommandline', 'sourceProcessInfoFileHashMd5', 'sourceProcessInfoFileHashSha1', 'sourceProcessInfoFileHashSha256', 'sourceProcessInfoFilePath',
        'sourceProcessInfoFileSignerIdentity', 'sourceProcessInfoIntegrityLevel', 'sourceProcessInfoName', 'sourceProcessInfoPid', 'sourceProcessInfoPidStarttime',
        'sourceProcessInfoStoryline', 'sourceProcessInfoSubsystem', 'sourceProcessInfoUser'


    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER sourceProcessCommandline__contains
        Free-text filter by source commandline.

        Example: "rule1".

    .PARAMETER sourceProcessFileHashMd5__contains
        Free-text filter by source md5.

        Example: "rule1".

    .PARAMETER sourceProcessFileHashSha1__contains
        Free-text filter by source sha1.

        Example: "rule1".

    .PARAMETER sourceProcessFileHashSha256__contains
        Free-text filter by source sha255.

        Example: "rule1".

    .PARAMETER sourceProcessFilePath__contains
        Free-text filter by source file path.

        Example: "rule1".

    .PARAMETER sourceProcessName__contains
        Free-text filter by source process name.

        Example: "proc1.exe".

    .PARAMETER sourceProcessStoryline__contains
        Free-text filter by source storyline.

        Example: "rule1".

    .PARAMETER tenant
        Indicates a tenant scope request

    .EXAMPLE
        Get-SentinelOneAlerts

        Returns the first 10 alerts

    .EXAMPLE
        Get-SentinelOneAlerts -createdAt__gt '2018-02-27 14:32'

        Returns alerts that were created after the defined dataTime

        DataTime values are converted to UTC, use -verbose to see the value it is converted to.

    .EXAMPLE
        Get-SentinelOneAlerts -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns alerts after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        Review\validate every parameters & parameter help
        As of 2022-10
            Cannot pull data from /cloud-detection/alerts due to insufficient permissions

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Alerts/Get-SentinelOneAlerts.html
#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'FALSE_POSITIVE', 'SUSPICIOUS', 'TRUE_POSITIVE', 'UNDEFINED' )]
        [String[]]$analystVerdict__in,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$containerImageName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$containerLabels__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$containerName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$disablePagination,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'IN_PROGRESS', 'RESOLVED', 'UNRESOLVED' )]
        [String[]]$incidentStatus__in,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sCluster__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sControllerLabels__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sControllerName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sNamespaceLabels__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sNamespaceName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sNode__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sPod__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sPodLabels__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$machineType__in,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$origAgentName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$origAgentOsRevision__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$origAgentUuid__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$origAgentVersion__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$osType__in,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$reportedAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$reportedAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$reportedAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$reportedAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$ruleName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'account', 'global', 'group', 'site' )]
        [String[]]$scopes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Critical', 'High', 'Low', 'Medium' )]
        [String[]]$severity__in,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(    'agentDetectionInfoMachineType', 'agentDetectionInfoName', 'agentDetectionInfoOsFamily', 'agentDetectionInfoOsName', 'agentDetectionInfoOsRevision',
                        'agentDetectionInfoSiteId', 'agentDetectionInfoUuid', 'agentDetectionInfoVersion', 'alertInfoAlertId', 'alertInfoAnalystVerdict', 'alertInfoCreatedAt',
                        'alertInfoDvEventId', 'alertInfoEventType', 'alertInfoHitType', 'alertInfoIncidentStatus', 'alertInfoReportedAt', 'alertInfoSource', 'analystVerdict',
                        'containerInfoId', 'containerInfoImage', 'containerInfoLabels', 'containerInfoName', 'id', 'incidentStatus', 'kubernetesInfoCluster', 'kubernetesInfoControllerKind',
                        'kubernetesInfoControllerLabels', 'kubernetesInfoControllerName', 'kubernetesInfoNamespace', 'kubernetesInfoNamespaceLabels', 'kubernetesInfoNode', 'kubernetesInfoPod',
                        'kubernetesInfoPodLabels', 'osName', 'ruleInfoDescription', 'ruleInfoId', 'ruleInfoName', 'ruleInfoScopeLevel', 'ruleInfoSeverity', 'ruleInfoTreatAsThreat',
                        'severity', 'sourceParentProcessInfoCommandline', 'sourceParentProcessInfoFileHashMd5', 'sourceParentProcessInfoFileHashSha1', 'sourceParentProcessInfoFileHashSha256',
                        'sourceParentProcessInfoFilePath', 'sourceParentProcessInfoFileSignerIdentity', 'sourceParentProcessInfoIntegrityLevel', 'sourceParentProcessInfoName',
                        'sourceParentProcessInfoPid', 'sourceParentProcessInfoPidStarttime', 'sourceParentProcessInfoStoryline', 'sourceParentProcessInfoSubsystem', 'sourceParentProcessInfoUser',
                        'sourceProcessInfoCommandline', 'sourceProcessInfoFileHashMd5', 'sourceProcessInfoFileHashSha1', 'sourceProcessInfoFileHashSha256', 'sourceProcessInfoFilePath',
                        'sourceProcessInfoFileSignerIdentity', 'sourceProcessInfoIntegrityLevel', 'sourceProcessInfoName', 'sourceProcessInfoPid', 'sourceProcessInfoPidStarttime',
                        'sourceProcessInfoStoryline', 'sourceProcessInfoSubsystem', 'sourceProcessInfoUser'
                    )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$sourceProcessCommandline__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$sourceProcessFileHashMd5__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$sourceProcessFileHashSha1__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$sourceProcessFileHashSha256__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$sourceProcessFilePath__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$sourceProcessName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$sourceProcessStoryline__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$tenant

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/cloud-detection/alerts"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ( $PSCmdlet.ParameterSetName -eq 'index' ) {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                    Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                    Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                    $body += @{ $Key.Key = $universalTime }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }
        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\alerts\Alerts-GET.ps1' 581
#Region '.\Public\applicationRisk\ApplicationRisk-GET.ps1' 0
function Export-SentinelOneApplications {
<#
    .SYNOPSIS
        Export the list of applications installed on endpoints

    .DESCRIPTION
        The Export-SentinelOneApplications cmdlet exports the list of applications installed on endpoints
        with Application Risk-enabled Agents and their properties, including the the CVEs for
        each application that requires a patch.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER agentComputerName__contains
        Free-text filter by computer name (supports multiple values).

        Example: "john-office,WIN".

    .PARAMETER agentIsDecommissioned
        Include active agents, decommissioned or both.

        Example: "True,False".

    .PARAMETER agentMachineTypes
        Filter by endpoint machine types.

        Allowed values:
        'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown'

    .PARAMETER agentMachineTypesNin
        Filter by endpoint machine types.

        Allowed values:
        'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown'

    .PARAMETER agentOsVersion__contains
        Free-text filter by OS full name and version.

        Example: "Service Pack 1".

    .PARAMETER agentUuid__contains
        Free-text filter by agent UUID.

        Example: "e92-01928,b055".

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER ids
        Filter activities by specific activity IDs.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER installedAt__between
        Filter by installation date range

    .PARAMETER name__contains
        Free-text filter by application name.

        Example: "calc".

    .PARAMETER osTypes
        Filter by OS types.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER osTypesNin
        Filter not by OS types.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER publisher__contains
        Free-text filter by application publisher.

        Example: "Sentinel".

    .PARAMETER riskLevels
        Free-text filter by application publisher.

        Allowed values:
        'critical', 'high', 'low', 'medium', 'none'

    .PARAMETER riskLevelsNin
        Free-text filter by application publisher.

        Allowed values:
        'critical', 'high', 'low', 'medium', 'none'

    .PARAMETER siteIds
        List of Site IDs to filter by

        Example: "225494730938493804,225494730938493915".

    .PARAMETER size__between
        Filter by application size range (bytes).

        Example: "1024-104856".

    .PARAMETER types
        Filter by application types.

        Allowed values:
        'app', 'chromeExtension', 'edgeExtension', 'firefoxExtension', 'kb', 'patch', 'safariExtension'

    .PARAMETER typesNin
        Filter not by application types.

        Allowed values:
        'app', 'chromeExtension', 'edgeExtension', 'firefoxExtension', 'kb', 'patch', 'safariExtension'

    .PARAMETER version__contains
        Free-text filter by application version.

        Example: "1.22.333,build".

    .PARAMETER fileName
        Name of the file

        Example: 'MySites-2022'

        The default name format is 'sites-yyyy-MM-dd_HHmmss'

    .PARAMETER filePath
        The location to save the file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Export-SentinelOneApplications

        If less the 100k items then it returns applications and their risks and saves the results to a CSV in the current working directory

    .EXAMPLE
        1234567890,0987654321 | Export-SentinelOneApplications

        If less the 100k items then it returns applications from the defined sites and saves the results to a CSV in the current working directory

    .EXAMPLE
        Export-SentinelOneApplications -agentMachineType server -riskLevels high

        If less the 100k items then it returns applications from servers that are high risk and saves the results to a CSV in the current working directory

    .EXAMPLE
        Export-SentinelOneApplications -siteId 1234567890,0987654321 -fileName MySites -filePath C:\Logs -showReport

        If less the 100k items then it returns applications from the defined sites, saves the CSV file in the defined directory with the defined named
        and opens the location to were the file is saved.

    .NOTES
        Figure out the "installedAt__between" parameter

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/ApplicationRisk/Export-SentinelOneApplications.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentComputerName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentIsDecommissioned,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown' )]
        [String[]]$agentMachineTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown' )]
        [String[]]$agentMachineTypesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentOsVersion__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentUuid__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$installedAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$name__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'linux', 'macos', 'windows', 'windows_legacy' )]
        [String[]]$osTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'linux', 'macos', 'windows', 'windows_legacy' )]
        [String[]]$osTypesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$publisher__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'critical', 'high', 'low', 'medium', 'none' )]
        [String[]]$riskLevels,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'critical', 'high', 'low', 'medium', 'none' )]
        [String[]]$riskLevelsNin,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$size__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'app', 'chromeExtension', 'edgeExtension', 'firefoxExtension', 'kb', 'patch', 'safariExtension' )]
        [String[]]$types,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'app', 'chromeExtension', 'edgeExtension', 'firefoxExtension', 'kb', 'patch', 'safariExtension' )]
        [String[]]$typesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$version__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fileName = "applications-$( Get-date -Format 'yyyy-MM-dd_HHmmss' )",

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$showReport
    )

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/export/installed-applications"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'fileName','filePath','showReport'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                    Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                    Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                    $body += @{ $Key.Key = $universalTime }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {

            $csvPath = "$filePath\$filename.csv"

            if ( (Test-Path -Path $filePath -PathType Container) -eq $false ){
                New-Item -Path $filePath -ItemType Directory > $null
            }

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -OutFile $csvPath `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $csvPath -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}



function Get-SentinelOneApplications {
<#
    .SYNOPSIS
        Get the applications, and their data (such as risk level), installed on endpoints
        with Application Risk-enabled Agents that match the filter.

    .DESCRIPTION
        The Get-SentinelOneApplications cmdlet gets the applications, and their data (such as risk level),
        installed on endpoints with Application Risk-enabled Agents that match the filter.
        SentinelOne Application Risk lets you monitor applications installed on endpoints.
        Applications not updated with the latest patches are vulnerable to exploits.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER agentComputerName__contains
        Free-text filter by computer name (supports multiple values).

        Example: "john-office,WIN".

    .PARAMETER agentIsDecommissioned
        Include active agents, decommissioned or both.

        Example: "True,False".

    .PARAMETER agentMachineTypes
        Filter by endpoint machine types.

        Allowed values:
        'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown'

    .PARAMETER agentMachineTypesNin
        Filter by endpoint machine types.

        Allowed values:
        'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown'

    .PARAMETER agentOsVersion__contains
        Free-text filter by OS full name and version.

        Example: "Service Pack 1".

    .PARAMETER agentUuid__contains
        Free-text filter by agent UUID.

        Example: "e92-01928,b055".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER ids
        Filter activities by specific activity IDs.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER installedAt__between
        Filter by installation date range

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER name__contains
        Free-text filter by application name.

        Example: "calc".

    .PARAMETER osTypes
        Filter by OS types.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER osTypesNin
        Filter not by OS types.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER publisher__contains
        Free-text filter by application publisher.

        Example: "Sentinel".

    .PARAMETER riskLevels
        Free-text filter by application publisher.

        Allowed values:
        'critical', 'high', 'low', 'medium', 'none'

    .PARAMETER riskLevelsNin
        Free-text filter by application publisher.

        Allowed values:
        'critical', 'high', 'low', 'medium', 'none'

    .PARAMETER siteIds
        List of Site IDs to filter by

        Example: "225494730938493804,225494730938493915".

    .PARAMETER size__between
        Filter by application size range (bytes).

        Example: "1024-104856".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'agentComputerName', 'createdAt', 'id', 'installedAt', 'name', 'publisher', 'riskLevel', 'size', 'type', 'updatedAt', 'version'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER types
        Filter by application types.

        Allowed values:
        'app', 'chromeExtension', 'edgeExtension', 'firefoxExtension', 'kb', 'patch', 'safariExtension'

    .PARAMETER typesNin
        Filter not by application types.

        Allowed values:
        'app', 'chromeExtension', 'edgeExtension', 'firefoxExtension', 'kb', 'patch', 'safariExtension'

    .PARAMETER version__contains
        Free-text filter by application version.

        Example: "1.22.333,build".


    .EXAMPLE
        Get-SentinelOneApplications

        Returns the first 10 applications and their risks

    .EXAMPLE
        1234567890,0987654321 | Get-SentinelOneApplications

        Returns the first 10 applications from the defined sites

    .EXAMPLE
        Get-SentinelOneApplications -agentMachineType server -riskLevels high

        Returns the first 10 applications from servers that are high risk

    .EXAMPLE
        Get-SentinelOneApplications -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns results after the defined cursor

        The cursor value can be found under pagination

    .NOTES
        Figure out the "installedAt__between" parameter

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/ApplicationRisk/Get-SentinelOneApplications.html

#>

[CmdletBinding( DefaultParameterSetName = 'index' )]
Param (
    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64[]]$accountIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$agentComputerName__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$agentIsDecommissioned,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown' )]
    [String[]]$agentMachineTypes,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown' )]
    [String[]]$agentMachineTypesNin,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$agentOsVersion__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$agentUuid__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$countOnly,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$cursor,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64[]]$groupIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64[]]$ids,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$installedAt__between,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, 1000)]
    [Int64]$limit,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$name__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'linux', 'macos', 'windows', 'windows_legacy' )]
    [String[]]$osTypes,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'linux', 'macos', 'windows', 'windows_legacy' )]
    [String[]]$osTypesNin,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$publisher__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'critical', 'high', 'low', 'medium', 'none' )]
    [String[]]$riskLevels,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'critical', 'high', 'low', 'medium', 'none' )]
    [String[]]$riskLevelsNin,

    [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64[]]$siteIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$size__between,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64]$skip,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$skipCount,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'agentComputerName', 'createdAt', 'id', 'installedAt', 'name', 'publisher', 'riskLevel', 'size', 'type', 'updatedAt', 'version' )]
    [String]$sortBy,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'asc', 'desc' )]
    [String]$sortOrder,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'app', 'chromeExtension', 'edgeExtension', 'firefoxExtension', 'kb', 'patch', 'safariExtension' )]
    [String[]]$types,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'app', 'chromeExtension', 'edgeExtension', 'firefoxExtension', 'kb', 'patch', 'safariExtension' )]
    [String[]]$typesNin,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$version__contains

)

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/installed-applications"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                    Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                    Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                    $body += @{ $Key.Key = $universalTime }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneApplicationCVEs {
<#
    .SYNOPSIS
        Get known CVEs for applications that are installed on endpoints
        with Application Risk-enabled Agents.

    .DESCRIPTION
        The Get-SentinelOneApplicationCVEs cmdlet gets known CVEs for applications that are installed
        on endpoints with Application Risk-enabled Agents.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER applicationIds
        Filter by application IDs.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER createdAt__gt
        Returns CVEs created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns CVEs created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns CVEs created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns CVEs created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER cveIds
        Filter by global CVE ids.

        Example: "CVE-2018-3182,CVE-2018-1087".

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER ids
        Filter by internal CVE IDs.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER siteIds
        List of Site IDs to filter by

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'agentId', 'applicationId', 'id', 'publishedAt'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER updatedAt__gt
        Returns CVEs updated after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__gte
        Returns CVEs updated after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lt
        Returns CVEs updated before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lte
        Returns CVEs updated before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .EXAMPLE
        Get-SentinelOneApplicationCVEs

        Returns the first 10 known CVEs for applications that are
        installed on endpoints

    .EXAMPLE
        1234567890,0987654321 | Get-SentinelOneApplicationCVEs

        Returns the first 10 known CVEs for applications
        that are installed on endpoints from the defined sites

    .EXAMPLE
        Get-SentinelOneApplicationCVEs -applicationIds 558368549003295534

        Returns the first 10 results for the application matching the defined id

    .EXAMPLE
        Get-SentinelOneApplicationCVEs -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns results after the defined cursor

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/ApplicationRisk/Get-SentinelOneApplicationCVEs.html

#>

[CmdletBinding( DefaultParameterSetName = 'index' )]
Param (
    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64[]]$accountIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64[]]$applicationIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$countOnly,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$createdAt__gt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$createdAt__gte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$createdAt__lt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$createdAt__lte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$cursor,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$cveIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64[]]$groupIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64[]]$ids,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, 1000)]
    [Int64]$limit,

    [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64[]]$siteIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64]$skip,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$skipCount,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'agentId', 'applicationId', 'id', 'publishedAt' )]
    [String]$sortBy,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'asc', 'desc' )]
    [String]$sortOrder,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$updatedAt__gt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$updatedAt__gte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$updatedAt__lt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$updatedAt__lte

)

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/installed-applications/cves"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                    Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                    Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                    $body += @{ $Key.Key = $universalTime }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\applicationRisk\ApplicationRisk-GET.ps1' 1021
#Region '.\Public\autoUpgradePolicy\AutoUpgradePolicy-GET.ps1' 0
function Get-SentinelOneAutoUpgradePolicy {
<#
    .SYNOPSIS
        Get paginated and ordered policies or parent policies by a given scope

    .DESCRIPTION
        The Get-SentinelOneAutoUpgradePolicy cmdlet gets paginated and ordered policies or parent policies by a given scope

    .PARAMETER limit
        limit number of returned items (1-1000).

    .PARAMETER osType
        N\A

    .PARAMETER scopeLevel
        N\A

    .PARAMETER skip
        offset

    .PARAMETER sortBy
        sort key

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER scopeId
        N\A

    .PARAMETER parentPolicy
        Get paginated and ordered parent policies by a given scope

    .EXAMPLE
        Get-SentinelOneAutoUpgradePolicy

        Returns data from"/upgrade-policy/policies""

    .EXAMPLE
        Get-SentinelOneAutoUpgradePolicy -parentPolicy

        Returns data from "upgrade-policy/policies-count"

    .NOTES
        As of 2022-11:
            The documentation around these endpoints is practically nonexistent
            Cannot validate this function


    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/AutoUpgradePolicy/Get-SentinelOneAutoUpgradePolicy.html

#>

    [CmdletBinding()]
    Param (
        [Parameter( Mandatory = $false)]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$osType,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$scopeLevel,

        [Parameter( Mandatory = $false)]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$sortBy,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$scopeId,

        [Parameter( Mandatory = $false)]
        [Switch]$parentPolicy

    )

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($parentPolicy){
            $false  {$resource_uri = "/upgrade-policy/policies"}
            $true   {$resource_uri = "/upgrade-policy/policies-count"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable', 'parentPolicy'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\autoUpgradePolicy\AutoUpgradePolicy-GET.ps1' 138
#Region '.\Public\configOverrides\ConfigOverrides-GET.ps1' 0
function Get-SentinelOneConfigOverrides {
<#
    .SYNOPSIS
        Get the configuration values that are changed for each Agent
        that matches the filter.

    .DESCRIPTION
        The Get-SentinelOneConfigOverrides cmdlet gets the configuration values that are
        changed for each Agent that matches the filter.

        There are different ways to override the configuration of an Agent,
        and the priority of changes depends on the endpoint OS and
        the version of the installed Agent.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER agentIds
        List of Agent IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER agentVersions
        Included agent versions.

        Example: "2.5.1.1320".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER createdAt__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER createdAt__gt
        Returns Config Overrides created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns Config Overrides created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns Config Overrides created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns Config Overrides created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER description__like
        Match description partially (substring)

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER ids
        List of ids to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER name__like
        Match name partially (substring)

    .PARAMETER osTypes
        Filter by OS types.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER query
        Free text search on fields name, description, agent_version, os_type, config

    .PARAMETER siteIds
        List of Site IDs to filter by

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'agentId', 'agentVersion', 'config', 'createdAt', 'description', 'id', 'name', 'osType', 'scope', 'updatedAt', 'versionOption'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER tenant
        Indicates a tenant scope request

    .PARAMETER versionOption
        Version option.

        Example: "ALL".

    .EXAMPLE
        Get-SentinelOneConfigOverrides

        Returns the first 10 agents with config overrides

    .EXAMPLE
        1234567890,0987654321 | Get-SentinelOneConfigOverrides

        Returns the first 10 agents with config overrides from the defined sites

    .EXAMPLE
        Get-SentinelOneConfigOverrides -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns results after the defined cursor

        The cursor value can be found under pagination

    .NOTES
        Figure out the "createdAt__between" parameter

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/ConfigOverrides/Get-SentinelOneConfigOverrides.html

#>

[CmdletBinding( DefaultParameterSetName = 'index' )]
Param (
    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64[]]$accountIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$agentIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$agentVersions,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$countOnly,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$createdAt__between,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$createdAt__gt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$createdAt__gte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$createdAt__lt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$createdAt__lte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$cursor,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$description__like,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64[]]$groupIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64[]]$ids,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, 1000)]
    [Int64]$limit,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$name__like,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'linux', 'macos', 'windows', 'windows_legacy' )]
    [String[]]$osTypes,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$query,

    [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64[]]$siteIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64]$skip,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$skipCount,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'agentId', 'agentVersion', 'config', 'createdAt', 'description', 'id', 'name', 'osType', 'scope', 'updatedAt', 'versionOption' )]
    [String]$sortBy,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'asc', 'desc' )]
    [String]$sortOrder,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$tenant,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'ALL', 'SPECIFIC' )]
    [String]$versionOption

)

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/config-override"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                    Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                    Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                    $body += @{ $Key.Key = $universalTime }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\configOverrides\ConfigOverrides-GET.ps1' 320
#Region '.\Public\customDetectionRule\CustomDetectionRules-GET.ps1' 0
function Get-SentinelOneCustomDetectionRules {
<#
    .SYNOPSIS
        Get a list of Custom Detection Rules for a given scope.

    .DESCRIPTION
        The Get-SentinelOneCustomDetectionRules cmdlet gets a list of Custom Detection Rules for a given scope.

        Note: You can create and see rules only for your highest available scope.
        For example, if your username has an access level of scope Account,
        you cannot see rules created for the Global scope or rules created for a specific Site.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER activeResponse
        Rule active response status

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER creator__contains
        Free-text filter by rule creator

        Example: "Service Pack 1".

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER description__contains
        Free-text filter by rule description

        Example: "Service Pack 1".

    .PARAMETER disablePagination
        If true, all rules for requested scope will be returned

    .PARAMETER expirationMode
        Return rules with the filtered expiration mode.

        Allowed values:
        'Permanent', 'Temporary'

    .PARAMETER expired
        Rule expired or not

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER ids
        A list of Rules IDs.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER name__contains
        Free-text filter by rule name

        Example: "Service Pack 1".

    .PARAMETER query
        Free text search on fields name, description, agent_version, os_type, config

    .PARAMETER queryType
        Return rules with the filtered type.

        Allowed values:
        'events', 'processes'

    .PARAMETER reachedLimit
        Rule reached limit or not

    .PARAMETER s1ql__contains
        Free-text filter by SentinelOne query

        Example: "Service Pack 1".

    .PARAMETER scopes
        Return rules with the filtered expiration mode.

        Allowed values:
        'account', 'global', 'group', 'site'

    .PARAMETER siteIds
        List of Site IDs to filter by

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'activeResponse', 'createdAt', 'description', 'expiration', 'expirationMode', 'expired', 'generatedAlerts', 'id', 'lastAlertTime',
        'name', 'queryType', 'reachedLimit', 'scope', 'scopeHierarchy', 'severity', 'status', 'statusReason', 'updatedAt'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER status
        Included engines.

        Allowed values:
        'Activating', 'Active', 'Deleted', 'Deleting', 'Disabled', 'Disabling', 'Draft'

    .EXAMPLE
        Get-SentinelOneCustomDetectionRules

        Returns the first 10 Custom Detection Rules for a given scope

    .EXAMPLE
        1234567890,0987654321 | Get-SentinelOneCustomDetectionRules

        Returns the first 10 Custom Detection Rules for a given scope from the defined sites

    .EXAMPLE
        Get-SentinelOneCustomDetectionRules -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns results after the defined cursor

        The cursor value can be found under pagination

    .NOTES
        As of 2022-11:
            Cannot fully validate due to permissions

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/CustomDetectionRule/Get-SentinelOneCustomDetectionRules.html

#>

[CmdletBinding( DefaultParameterSetName = 'index' )]
Param (
    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64[]]$accountIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$activeResponse,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$countOnly,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$creator__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$cursor,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$description__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$disablePagination,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'Permanent', 'Temporary' )]
    [String]$expirationMode,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$expired,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64[]]$groupIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64[]]$ids,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, 1000)]
    [Int64]$limit,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$name__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$query,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'events', 'processes' )]
    [String]$queryType,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$reachedLimit,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$s1ql__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'account', 'global', 'group', 'site' )]
    [String[]]$scopes,

    [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64[]]$siteIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64]$skip,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$skipCount,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet(   'activeResponse', 'createdAt', 'description', 'expiration', 'expirationMode', 'expired',
                    'generatedAlerts', 'id', 'lastAlertTime', 'name', 'queryType', 'reachedLimit', 'scope',
                    'scopeHierarchy', 'severity', 'status', 'statusReason', 'updatedAt'
                )]
    [String]$sortBy,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'asc', 'desc' )]
    [String]$sortOrder,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'Activating', 'Active', 'Deleted', 'Deleting', 'Disabled', 'Disabling', 'Draft' )]
    [String[]]$status

)

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/cloud-detection/rules"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\customDetectionRule\CustomDetectionRules-GET.ps1' 298
#Region '.\Public\deepVisibility\DeepVisibility-GET.ps1' 0
function Export-SentinelOneDeepVisibilityProcessFile {
<#
    .SYNOPSIS
        Download the source process file associated with a Deep Visibility event.

    .DESCRIPTION
        The Export-SentinelOneDeepVisibilityProcessFile cmdlet downloads the source process file associated with a Deep Visibility event.

    .PARAMETER downloadToken
        downloadToken

    .PARAMETER fileName
        Name of the file

        The default name format is 'dvProcessFile-$downloadToken-yyyy-MM-dd_HHmmss'

    .PARAMETER filePath
        The location to save the file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Export-SentinelOneDeepVisibilityProcessFile -downloadToken 876543210987654321

        Returns the process file associated with a Deep Visibility event and saves the results in the current working directory

        fileName:
            dvProcessFile-876543210987654321-2022-10-29_105845.7z

    .EXAMPLE
        Export-SentinelOneDeepVisibilityProcessFile -downloadToken 876543210987654321 -fileName MyFileName -filePath C:\Logs -showReport

        Returns the process file associated with a Deep Visibility event and saves the results in the defined directory with the defined name
        and opens the location to were the file is saved.

        fileName:
            MyFileName

    .NOTES
        As of 2022-11:
            Cannot fully validate due to permissions

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/DeepVisibility/Export-SentinelOneDeepVisibilityProcessFile.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$downloadToken,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fileName = "dvProcessFile-$downloadToken-$( Get-date -Format 'yyyy-MM-dd_HHmmss' )",

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$showReport

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/dv/fetch-file"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'fileName','filePath','showReport'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ($Key in $PSBoundParameters.GetEnumerator()){

                if($excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {

            $fileOutput = "$filePath\$filename"

            if ( (Test-Path -Path $filePath -PathType Container) -eq $false ){
                New-Item -Path $filePath -ItemType Directory > $null
            }

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -OutFile $fileOutput `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $fileOutput -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}



function Get-SentinelOneDeepVisibilityEvents {
<#
    .SYNOPSIS
        Get all Deep Visibility events from a queryId

    .DESCRIPTION
        The Get-SentinelOneDeepVisibilityEvents cmdlet gets all Deep Visibility events from a queryId.

        You can use this command to send a sub-query, a new query to run on these events.

        The id can be found from the "Create Query And Get Queryid" uri

    .PARAMETER event_type
        Get Deep Visibility results from the query that matches the given event type.

        Allowed values:
        'Process Exit', 'Process Modification', 'Process Creation', 'Duplicate Process Handle', 'Duplicate Thread Handle',
        'Open Remote Process Handle', 'Remote Thread Creation', 'Remote Process Termination', 'Command Script', 'IP Connect',
        'IP Listen', 'File Modification', 'File Creation', 'File Scan', 'File Deletion', 'File Rename', 'Pre Execution Detection',
        'Login', 'Logout', 'GET', 'OPTIONS', 'POST', 'PUT', 'DELETE', 'CONNECT', 'HEAD',
        'DNS Resolved', 'DNS Unresolved', 'Task Register', 'Task Update', 'Task Start', 'Task Trigger', 'Task Delete',
        'Registry Key Create', 'Registry Key Rename', 'Registry Key Delete', 'Registry Key Export', 'Registry Key Security Changed', 'Registry Key Import',
        'Registry Value Modified', 'Registry Value Create', 'Registry Value Delete', 'Behavioral Indicators', 'Module Load'

    .PARAMETER queryId
        QueryId obtained when creating a query under Create Query.

        Example: "q1xx2xx3"

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER sortBy
        Events sorted by field.

        Example:
        'createdAt'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER subQuery
        Create a sub query to run on the data that was already pulled

    .EXAMPLE
        Get-SentinelOneDeepVisibilityEvents -queryId q1xx2xx3

        Returns all Deep Visibility events from the defined queryId

    .EXAMPLE
        Get-SentinelOneDeepVisibilityEvents -event_type GET -queryId q1xx2xx3

        Returns all Deep Visibility events from the defined queryId with the defined event type

    .EXAMPLE
        Get-SentinelOneDeepVisibilityEvents -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns Deep Visibility events after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        As of 2022-11
            Cannot fully validate due to permissions

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/DeepVisibility/Get-SentinelOneDeepVisibilityEvents.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ParameterSetName = 'indexByType' )]
        [ValidateSet(   'Process Exit', 'Process Modification', 'Process Creation', 'Duplicate Process Handle', 'Duplicate Thread Handle',
                        'Open Remote Process Handle', 'Remote Thread Creation', 'Remote Process Termination', 'Command Script', 'IP Connect',
                        'IP Listen', 'File Modification', 'File Creation', 'File Scan', 'File Deletion', 'File Rename', 'Pre Execution Detection',
                        'Login', 'Logout', 'GET', 'OPTIONS', 'POST', 'PUT', 'DELETE', 'CONNECT', 'HEAD',
                        'DNS Resolved', 'DNS Unresolved', 'Task Register', 'Task Update', 'Task Start', 'Task Trigger', 'Task Delete',
                        'Registry Key Create', 'Registry Key Rename', 'Registry Key Delete', 'Registry Key Export', 'Registry Key Security Changed', 'Registry Key Import',
                        'Registry Value Modified', 'Registry Value Create', 'Registry Value Delete', 'Behavioral Indicators', 'Module Load'
                    )]
        [String]$event_type,

        [Parameter( Mandatory = $true, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $true, ParameterSetName = 'indexByType' )]
        [ValidateNotNullOrEmpty()]
        [String]$queryId,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false)]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false)]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$sortBy,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$subQuery

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/dv/events"}
            'indexByType'   {$resource_uri = "/dv/events/$event_type"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneDeepVisibilityProcessState {
<#
    .SYNOPSIS
        Get details of all Deep Visibility processes from a queryId

    .DESCRIPTION
        The Get-SentinelOneDeepVisibilityProcessState cmdlet gets details of all Deep Visibility processes from a queryId.

        The id can be found from the "Create Query And Get QueryId" uri

    .PARAMETER queryId
        QueryId obtained when creating a query under Create Query.

        Example: "q1xx2xx3"

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER sortBy
        Events sorted by field.

        Example:
        'SrcProcStartTime'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .EXAMPLE
        Get-SentinelOneDeepVisibilityProcessState -queryId q1xx2xx3

        Returns all Deep Visibility events from the defined queryId

    .EXAMPLE
        Get-SentinelOneDeepVisibilityProcessState -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns Deep Visibility events after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        As of 2022-11
            Cannot fully validate due to permissions

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/DeepVisibility/Get-SentinelOneDeepVisibilityProcessState.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$queryId,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false)]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false)]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$sortBy,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder = 'asc'

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/dv/process-state"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneDeepVisibilityQueryStatus {
<#
    .SYNOPSIS
        Get the status of a Deep Visibility Query

    .DESCRIPTION
        The Get-SentinelOneDeepVisibilityQueryStatus cmdlet gets the status of a Deep Visibility Query.

        When the status is FINISHED, you can get the results with the queryId in "Get Events".

    .PARAMETER queryId
        QueryId obtained when creating a query under Create Query.

        Example: "q1xx2xx3"

    .EXAMPLE
        Get-SentinelOneDeepVisibilityProcessState -queryId q1xx2xx3

        Returns the status of a Deep Visibility Query

    .NOTES
        As of 2022-11
            Cannot fully validate due to permissions

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/DeepVisibility/Get-SentinelOneDeepVisibilityProcessState.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$queryId

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/dv/query-status"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneDeepVisibilityPowerQueryPing {
<#
    .SYNOPSIS
        Ping a Deep Visibility Power Query using the queryId if results have not returned
        from an initial Power Query or a previous ping

    .DESCRIPTION
        The Get-SentinelOneDeepVisibilityPowerQueryPing cmdlet pings a Deep Visibility Power Query
        using the queryId if results have not returned from an initial Power Query
        or a previous ping

    .PARAMETER queryId
        QueryId obtained when creating a query under Create Query.

        Example: "q1xx2xx3"

    .EXAMPLE
        Get-SentinelOneDeepVisibilityPowerQueryPing -queryId q1xx2xx3

        Returns the status of a Deep Visibility Query

    .NOTES
        As of 2022-11
            Cannot fully validate due to permissions

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/DeepVisibility/Get-SentinelOneDeepVisibilityPowerQueryPing.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$queryId

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/dv/events/pq-ping"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\deepVisibility\DeepVisibility-GET.ps1' 626
#Region '.\Public\deviceControl\DeviceControl-GET.ps1' 0
function Export-SentinelOneDeviceControlRules {
<#
    .SYNOPSIS
        Export Device Control rules to a CSV file.

    .DESCRIPTION
        The Export-SentinelOneDeviceControlRules cmdlet exports Device Control rules to a CSV file.

    .PARAMETER accessPermissions
        Access permission in.

        Allowed values:
        'Not-Applicable', 'Read-Only', 'Read-Write'

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER actions
        Return device rules with the filtered action.

        Allowed values:
        'Allow', 'Block'

    .PARAMETER bluetoothAddresses
        Return device rules with the filtered bluetooth addresses.

    .PARAMETER createdAt__between
        Return device rules created within this range (inclusive).

        Example: "1514978764288-1514978999999".

    .PARAMETER createdAt__gt
        Returns device rules created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns device rules created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns device rules created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns device rules created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER deviceClasses
        Return device rules with the filtered device class.

        Example: "02h".

    .PARAMETER deviceInformationServiceInfoKeys
        Return device rules with the filtered device information service info keys.

    .PARAMETER deviceNames
        Return device rules with the filtered device names.

    .PARAMETER gattServices
        Return device rules with the filtered GATT services.

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ids
        List of ids to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER interfaces
        Return device rules with the filtered interface.

        Allowed values:
        'Bluetooth', 'USB'

    .PARAMETER manufacturerNames
        Return device rules with the filtered manufacturer names.

    .PARAMETER minorClasses
        Return device rules with the filtered minor classes.

    .PARAMETER productIds
        Return device rules with the filtered product id.

        Example: "02".

    .PARAMETER query
        A free-text search term, will match applicable attributes.

    .PARAMETER ruleName
        Return device rules with the filtered rule name.

    .PARAMETER scopes
        Return only device rules in this scope.

        Allowed values:
        'account', 'global', 'group', 'site'

    .PARAMETER serviceClasses
        Return device rules with the filtered service class.

        Example: "02".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER statuses
        Return device rules with the filtered status.

        Allowed values:
        'Disabled', 'Enabled'

    .PARAMETER tenant
        Indicates a tenant scope request

    .PARAMETER uids
        Return device rules with the filtered uId.

    .PARAMETER vendorIds
        Return device rules with the filtered vendor id.

    .PARAMETER versions
        Return device rules with the filtered versions.

    .PARAMETER fileName
        Name of the file

        Example: 'MyAgents-2022'

        The default name format is 'deviceControlRules_id-yyyy-MM-dd_HHmmss'

    .PARAMETER filePath
        The location to save the file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Export-SentinelOneDeviceControlRules

        Returns Device Control rules and saves the results to a csv in the current working directory

        fileName:
            deviceControlRules-2022-10-29_105845.csv

    .EXAMPLE
        Export-SentinelOneDeviceControlRules -fileName MyFileName -filePath C:\Logs -showReport

        Returns Device Control rules and saves the results to a csv in the defined directory with the defined name
        and opens the location to were the file is saved.

        fileName:
            MyFileName.csv

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/DeviceControl/Export-SentinelOneDeviceControlRules.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Not-Applicable', 'Read-Only', 'Read-Write' )]
        [String[]]$accessPermissions,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Allow', 'Block' )]
        [String[]]$actions,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$bluetoothAddresses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$createdAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$deviceClasses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$deviceInformationServiceInfoKeys,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$deviceNames,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$gattServices,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Bluetooth', 'USB' )]
        [String[]]$interfaces,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$manufacturerNames,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$minorClasses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$productIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$ruleName,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'account', 'global', 'group', 'site' )]
        [String[]]$scopes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$serviceClasses,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Disabled', 'Enabled' )]
        [String[]]$statuses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$tenant,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$uids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$vendorIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$versions,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fileName = "deviceControlRules-$( Get-date -Format 'yyyy-MM-dd_HHmmss' )",

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$showReport

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/device-control/export"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'fileName','filePath','showReport'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ($Key in $PSBoundParameters.GetEnumerator()){

                if($excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                    Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                    Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                    $body += @{ $Key.Key = $universalTime }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {

            $fileOutput = "$filePath\$filename.csv"

            if ( (Test-Path -Path $filePath -PathType Container) -eq $false ){
                New-Item -Path $filePath -ItemType Directory > $null
            }

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -OutFile $fileOutput `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $fileOutput -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}



function Get-SentinelOneDeviceControlConfiguration {
<#
    .SYNOPSIS
        Get Device Control configuration for a given scope.

    .DESCRIPTION
        The Get-SentinelOneDeviceControlConfiguration cmdlet gets Device Control configuration for a given scope.

        To filter the results for a scope:
            Global  - Make sure "tenant" is "true" and no other scope ID is given.
            Account - Make sure "tenant" is "false" and at least one Account ID is given.
            Site    - Make sure "tenant" is "false" and at least one Site ID is given.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER tenant
        Indicates a tenant scope request

    .EXAMPLE
        Get-SentinelOneDeviceControlConfiguration -tenant

        Returns the Device Control from a global scope

    .EXAMPLE
        Get-SentinelOneDeviceControlConfiguration -accountIds 225494730938493804

        Returns the Device Control configuration for the defined account

    .EXAMPLE
        Get-SentinelOneDeviceControlConfiguration -siteIds 225494730938493804

        Returns the Device Control configuration for the defined site

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/DeviceControl/Get-SentinelOneDeviceControlConfiguration.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$tenant

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/device-control/configuration"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneDeviceControlEvents {
<#
    .SYNOPSIS
        Get the data of Device Control events on Windows and macOS endpoints with
        Device Control-enabled Agents that match the filter.

    .DESCRIPTION
        The Get-SentinelOneDeviceControlEvents cmdlet gets the data of Device Control events on Windows and macOS
        endpoints with Device Control-enabled Agents that match the filter.

        Linux Agents do not support Device Control.

    .PARAMETER access_permissions
        Access permission in.

        Allowed values:
        'Not-Applicable', 'Read-Only', 'Read-Write'

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER agentIds
        List of agent Ids to filter by

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER deviceClasses
        List of device classes to filter by.

        Example: "02h".

    .PARAMETER eventIds
        List of event IDs to filter by

    .PARAMETER eventTime__between
        Return events generated created within this range (inclusive).

        Example: "1514978764288-1514978999999".

    .PARAMETER eventTime__gt
        Returns events generated after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER eventTime__gte
        Returns events generated after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER eventTime__lt
        Returns events generated before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER eventTime__lte
        Returns events generated before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER eventTypes
        List of event types to filter by.

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ids
        List of ids to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER interfaces
        Return device rules with the filtered interface.

        Allowed values:
        'Bluetooth', 'USB'

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER productIds
        Return device rules with the filtered product id.

        Example: "02".

    .PARAMETER query
        A free-text search term, will match applicable attributes.

    .PARAMETER serviceClasses
        Return device rules with the filtered service class.

        Example: "02".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'agentId', 'eventTime', 'eventType', 'id'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER tenant
        Indicates a tenant scope request

    .PARAMETER uids
        Return device rules with the filtered uId.

    .PARAMETER vendorIds
        Return device rules with the filtered vendor id.

    .EXAMPLE
        Get-SentinelOneDeviceControlEvents

        Returns the first 10 Device Control events on Windows and macOS endpoints with Device Control-enabled Agents that match the filter.

    .EXAMPLE
        Get-SentinelOneDeviceControlEvents -siteId 1234567890

        Returns the first 10 Device Control events from the defined site for Windows and macOS endpoints
        with Device Control-enabled Agents that match the filter.

    .EXAMPLE
        1234567890 | Get-SentinelOneDeviceControlEvents

        Returns the first 10 Device Control events from the defined site for Windows and macOS endpoints
        with Device Control-enabled Agents that match the filter.

    .EXAMPLE
        Get-SentinelOneDeviceControlEvents -eventTime__gt '2018-02-27T04:49:26.257525Z'

        Returns Device Control events that were created at after defined timestamp

    .EXAMPLE
        Get-SentinelOneDeviceControlEvents -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        As of 2022-11
            The "access_permissions" parameter does not work [ "dict_values(['accessPermissions']): Unknown field" ]

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/DeviceControl/Get-SentinelOneDeviceControlEvents.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Not-Applicable', 'Read-Only', 'Read-Write' )]
        [String[]]$access_permissions,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$deviceClasses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$eventIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$eventTime__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$eventTime__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$eventTime__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$eventTime__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$eventTime__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$eventTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Bluetooth', 'USB' )]
        [String[]]$interfaces,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$productIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$serviceClasses,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'agentId', 'eventTime', 'eventType', 'id' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$tenant,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$uids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$vendorIds

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/device-control/events"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                $body += @{ $Key.Key = $universalTime }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneDeviceControlRules {
<#
    .SYNOPSIS
        Get the Device Control rules of a specified Account, Site, Group or Global (tenant)
        that match the filter.

    .DESCRIPTION
        The Get-SentinelOneDeviceControlRules cmdlet gets the Device Control rules of a
        specified Account, Site, Group or Global (tenant) that match the filter.

    .PARAMETER accessPermissions
        Access permission in.

        Allowed values:
        'Not-Applicable', 'Read-Only', 'Read-Write'

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER actions
        Return device rules with the filtered action.

        Allowed values:
        'Allow', 'Block'

    .PARAMETER bluetoothAddresses
        Return device rules with the filtered bluetooth addresses.

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER createdAt__between
        Returns device rules created in the range of a start timestamp and an end timestamp.

        Example: "1514978764288-1514978999999"

    .PARAMETER createdAt__gt
        Returns adevice rules created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns device rules created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns device rules created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns device rules created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER deviceClasses
        List of device classes to filter by.

        Example: "02h".

    .PARAMETER deviceInformationServiceInfoKeys
        Return device rules with the filtered device information service info keys.

    .PARAMETER deviceNames
        Return device rules with the filtered device names.

    .PARAMETER disablePagination
        If true, all rules for requested scope will be returned

    .PARAMETER gattServices
        Return device rules with the filtered GATT services.

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ids
        List of ids to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER interfaces
        Return device rules with the filtered interface.

        Allowed values:
        'Bluetooth', 'USB'

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER manufacturerNames
        Return device rules with the filtered manufacturer names.

    .PARAMETER minorClasses
        Return device rules with the filtered minor classes.

    .PARAMETER productIds
        Return device rules with the filtered product id.

        Example: "02".

    .PARAMETER query
        A free-text search term, will match applicable attributes.

    .PARAMETER ruleName
        Return device rules with the filtered rule name.

    .PARAMETER scopes
        Return only device rules in this scope.

        Allowed values:
        'account', 'global', 'group', 'site'

    .PARAMETER serviceClasses
        Return device rules with the filtered service class.

        Example: "02".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'action', 'deviceClass', 'id', 'interface', 'order', 'ruleName', 'status', 'version'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER tenant
        Indicates a tenant scope request

    .PARAMETER uids
        Return device rules with the filtered uId.

    .PARAMETER vendorIds
        Return device rules with the filtered vendor id.

    .PARAMETER versions
        Return device rules with the filtered versions.

    .EXAMPLE
        Get-SentinelOneDeviceControlRules

        Returns the first 10 Device Control rules of a specified Account, Site, Group or Global (tenant) that match the filter.

    .EXAMPLE
        Get-SentinelOneDeviceControlRules -siteId 1234567890

        Returns the first 10 Device Control rules of a specified Account, Site, Group or Global (tenant) that match the filter.

    .EXAMPLE
        1234567890 | Get-SentinelOneDeviceControlRules

        Returns the first Device Control rules of a specified Account, Site, Group or Global (tenant) that match the filter.

    .EXAMPLE
        Get-SentinelOneDeviceControlRules -createdAt__gt '2018-02-27T04:49:26.257525Z'

        Returns Device Control events that were created at after defined timestamp

    .EXAMPLE
        Get-SentinelOneDeviceControlRules -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/DeviceControl/Get-SentinelOneDeviceControlRules.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Not-Applicable', 'Read-Only', 'Read-Write' )]
        [String[]]$accessPermissions,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Allow', 'Block' )]
        [String[]]$actions,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$bluetoothAddresses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$createdAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [DateTime]$createdAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [DateTime]$createdAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [DateTime]$createdAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [DateTime]$createdAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$deviceClasses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$deviceInformationServiceInfoKeys,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$deviceNames,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$disablePagination,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$gattServices,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Bluetooth', 'USB' )]
        [String[]]$interfaces,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$manufacturerNames,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$minorClasses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$productIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$ruleName,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'account', 'global', 'group', 'site' )]
        [String[]]$scopes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$serviceClasses,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'action', 'deviceClass', 'id', 'interface', 'order', 'ruleName', 'status', 'version' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$tenant,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$uids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$vendorIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$versions

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/device-control"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                $body += @{ $Key.Key = $universalTime }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\deviceControl\DeviceControl-GET.ps1' 1289
#Region '.\Public\exclusionsAndBlocklist\ExclusionsBlacklists-GET.ps1' 0
function Export-SentinelOneBlacklists {
<#
    .SYNOPSIS
        Export a csv of all the items in the Blacklist that match the filter.

    .DESCRIPTION
        The Export-SentinelOneBlacklists cmdlet exports a csv of all the items in the
        Blacklist that match the filter.

        To see items from the Global Blacklist, make sure "tenant" is "true"
        and no other scope ID is given.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER createdAt__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER createdAt__gt
        Returns blacklists created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns blacklists created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns blacklists created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns blacklists created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER description__contains
        Free-text filter by description

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ids
        List of IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER includeChildren
        Return filters from children scope levels

    .PARAMETER includeParents
        Return filters from parent scope levels

    .PARAMETER osTypes
        List of Os types to filter by.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER query
        A free-text search term, will match applicable attributes

    .PARAMETER recommendations
        List of recommendations to filter by.

        Allowed values:
        'None', 'Not allowed', 'Not recommended'

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER source
        List sources to filter by.

        Allowed values:
        'action_from_threat', 'catalog', 'cloud', 'user'

    .PARAMETER tenant
        Indicates a tenant scope request

    .PARAMETER type
        Type

        Allowed values:
        'black_hash'

    .PARAMETER types
        Type

        Allowed values:
        'black_hash'

    .PARAMETER unified
        Unified

    .PARAMETER updatedAt__between
        Date range for update time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER updatedAt__gt
        Returns blacklists updated after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__gte
        Returns blacklists updated after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lt
        Returns blacklists updated before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lte
        Returns blacklists updated before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER user__contains
        Free-text filter by user name

    .PARAMETER userIds
        List of user ids to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER value
        value

    .PARAMETER value__contains
        Free-text filter by value

    .PARAMETER fileName
        Name of the file

        Example: 'MyAgents-2022'

        The default name format is 'blacklists-yyyy-MM-dd_HHmmss'

    .PARAMETER filePath
        The location to save the file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Export-SentinelOneBlacklists

        If less then 10k results then it returns a top level blacklist and saves the results to a csv in the current working directory

        fileName:
            blacklists-2022-10-29_105845.

    .EXAMPLE
        225494730938493804 | Export-SentinelOneBlacklists

        If less then 10k results then it returns a blacklist for the defined site and saves the results to a csv in the current working directory

        fileName:
            blacklists-2022-10-29_105845.csv

    .EXAMPLE
        Export-SentinelOneBlacklists -siteIds 225494730938493804  -fileName MyFile -filePath C:\Logs -showReport

        If less then 10k results then it returns a blacklist for the defined site, saves the results to a csv in the defined directory
        with the defined name and opens the location to were the file is saved.

        fileName:
            MyFile.csv

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/ExclusionsAndBlacklist/Export-SentinelOneBlacklists.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$createdAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$description__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$includeChildren,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$includeParents,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'linux', 'macos', 'windows', 'windows_legacy' )]
        [String[]]$osTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'NONE', 'Not allowed', 'Not recommended' )]
        [String[]]$recommendations,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'action_from_threat', 'catalog', 'cloud', 'user' )]
        [String[]]$source,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$tenant,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'black_hash' )]
        [String]$type,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'black_hash' )]
        [String[]]$types,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$unified,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$updatedAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$user__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$userIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$value,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$value__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fileName = "blacklists-$( Get-date -Format 'yyyy-MM-dd_HHmmss' )",

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$showReport

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' { $resource_uri = "/export/restrictions" }
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'fileName','filePath','showReport'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ($Key in $PSBoundParameters.GetEnumerator()){

                if($excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                    Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                    Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                    $body += @{ $Key.Key = $universalTime }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {

            $fileOutput = "$filePath\$filename.csv"

            if ( (Test-Path -Path $filePath -PathType Container) -eq $false ){
                New-Item -Path $filePath -ItemType Directory > $null
            }

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -OutFile $fileOutput `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $fileOutput -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}



function Export-SentinelOneExclusions {
<#
    .SYNOPSIS
        Export a csv of all the items in the Exclusions that match the filter.

    .DESCRIPTION
        The Export-SentinelOneExclusions cmdlet exports a csv of all the items in
        the Exclusions that match the filter.

        To see items from the Global Exclusion scope, make sure "tenant" is "true"
        and no other scope ID is given.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER createdAt__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER createdAt__gt
        Returns exclusions created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns exclusions created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns exclusions created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns exclusions created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER description__contains
        Free-text filter by description

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ids
        List of IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER includeChildren
        Return filters from children scope levels

    .PARAMETER includeParents
        Return filters from parent scope levels

    .PARAMETER modes
        List of modes to filter by (Path exclusions only).

        Allowed values:
        'disable_all_monitors', 'disable_all_monitors_deep', 'disable_in_process_monitor', 'disable_in_process_monitor_deep',
        'suppress', 'suppress_app_control', 'suppress_dfi_only', 'suppress_dynamic_only'

    .PARAMETER osTypes
        List of Os types to filter by.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER pathExclusionTypes
        List of excluded paths in an exclusion (Path exclusions only).

        Allowed values:
        'file', 'folder', 'subfolder'

    .PARAMETER query
        A free-text search term, will match applicable attributes

    .PARAMETER recommendations
        List of recommendations to filter by.

        Allowed values:
        'None', 'Not allowed', 'Not recommended'

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER source
        List sources to filter by.

        Allowed values:
        'action_from_threat', 'catalog', 'cloud', 'user'

    .PARAMETER tenant
        Indicates a tenant scope request

    .PARAMETER type
        Type

        Allowed values:
        'black_hash'

    .PARAMETER types
        Type

        Allowed values:
        'black_hash'

    .PARAMETER unified
        Unified

    .PARAMETER updatedAt__between
        Date range for update time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER updatedAt__gt
        Returns exclusions updated after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__gte
        Returns exclusions updated after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lt
        Returns exclusions updated before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lte
        Returns exclusions updated before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER user__contains
        Free-text filter by user name

    .PARAMETER userIds
        List of user ids to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER value
        value

    .PARAMETER value__contains
        Free-text filter by value

    .PARAMETER fileName
        Name of the file

        Example: 'MyAgents-2022'

        The default name format is 'exclusions-yyyy-MM-dd_HHmmss'

    .PARAMETER filePath
        The location to save the file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Export-SentinelOneExclusions

        If less then 10k results then it returns a top level blacklist and saves the results to a csv in the current working directory

        fileName:
            blacklists-2022-10-29_105845.

    .EXAMPLE
        225494730938493804 | Export-SentinelOneExclusions

        If less then 10k results then it returns a blacklist for the defined site and saves the results to a csv in the current working directory

        fileName:
            blacklists-2022-10-29_105845.csv

    .EXAMPLE
        Export-SentinelOneExclusions -siteIds 225494730938493804  -fileName MyFile -filePath C:\Logs -showReport

        If less then 10k results then it returns a blacklist for the defined site, saves the results to a csv in the defined directory
        with the defined name and opens the location to were the file is saved.

        fileName:
            MyFile.csv

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/ExclusionsAndBlacklist/Export-SentinelOneExclusions.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$createdAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$description__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$includeChildren,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$includeParents,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'disable_all_monitors', 'disable_all_monitors_deep', 'disable_in_process_monitor',
                        'disable_in_process_monitor_deep', 'suppress', 'suppress_app_control',
                        'suppress_dfi_only', 'suppress_dynamic_only'
                    )]
        [String[]]$modes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'file', 'folder', 'subfolder' )]
        [String[]]$pathExclusionTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'linux', 'macos', 'windows', 'windows_legacy' )]
        [String[]]$osTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'NONE', 'Not allowed', 'Not recommended' )]
        [String[]]$recommendations,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'action_from_threat', 'catalog', 'cloud', 'user' )]
        [String[]]$source,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$tenant,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'black_hash' )]
        [String]$type,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'black_hash' )]
        [String[]]$types,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$unified,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$updatedAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$user__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$userIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$value,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$value__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fileName = "exclusions-$( Get-date -Format 'yyyy-MM-dd_HHmmss' )",

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$showReport

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' { $resource_uri = "/export/exclusions" }
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'fileName','filePath','showReport'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ($Key in $PSBoundParameters.GetEnumerator()){

                if($excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                    Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                    Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                    $body += @{ $Key.Key = $universalTime }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {

            $fileOutput = "$filePath\$filename.csv"

            if ( (Test-Path -Path $filePath -PathType Container) -eq $false ){
                New-Item -Path $filePath -ItemType Directory > $null
            }

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -OutFile $fileOutput `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $fileOutput -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}



function Get-SentinelOneBlacklists {
<#
    .SYNOPSIS
        Get a list of all the items in the Blacklist that match the filter.

    .DESCRIPTION
        The Get-SentinelOneBlacklists cmdlet gets a list of all the items in the Blacklist that match the filter.

        To filter the results for a scope:
            Global  - Make sure "tenant" is "true" and no other scope ID is given.
            Account - Make sure "tenant" is "false" and at least one Account ID is given.
            Site    - Make sure "tenant" is "false" and at least one Site ID is given.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER createdAt__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER createdAt__gt
        Returns blacklists created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns blacklists created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns blacklists created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns blacklists created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".


    .PARAMETER description__contains
        Free-text filter by description

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ids
        List of IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER includeChildren
        Return filters from children scope levels

    .PARAMETER includeParents
        Return filters from parent scope levels

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER modes
        List of modes to filter by (Path exclusions only).

        Allowed values:
        'disable_all_monitors', 'disable_all_monitors_deep', 'disable_in_process_monitor', 'disable_in_process_monitor_deep',
        'suppress', 'suppress_app_control', 'suppress_dfi_only', 'suppress_dynamic_only'

    .PARAMETER osTypes
        List of Os types to filter by.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER query
        A free-text search term, will match applicable attributes

    .PARAMETER recommendations
        List of recommendations to filter by.

        Allowed values:
        'None', 'Not allowed', 'Not recommended'

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'createdAt', 'description', 'id', 'osType', 'scope', 'scopePath', 'source', 'updatedAt', 'userName', 'value'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER source
        List sources to filter by.

        Allowed values:
        'action_from_threat', 'catalog', 'cloud', 'user'

    .PARAMETER tenant
        Indicates a tenant scope request

    .PARAMETER type
        Type

        Allowed values:
        'black_hash'

    .PARAMETER types
        Type

        Allowed values:
        'black_hash'

    .PARAMETER unified
        Unified

    .PARAMETER updatedAt__between
        Date range for update time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER updatedAt__gt
        Returns blacklists updated after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__gte
        Returns blacklists updated after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lt
        Returns blacklists updated before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lte
        Returns blacklists updated before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER user__contains
        Free-text filter by user name

    .PARAMETER userIds
        List of user ids to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER value
        value

    .PARAMETER value__contains
        Free-text filter by value

    .EXAMPLE
        Get-SentinelOneBlacklists -tenant -countonly

        Gets a count of all exclusions from the main tenant

    .EXAMPLE
        225494730938493804 | Get-SentinelOneBlacklists

        Gets a list of all exclusions from the defined site

    .EXAMPLE
        Get-SentinelOneBlacklists -createdAt__gt '2018-02-27 14:32'

        Gets a list of all exclusions that were created after the defined dataTime

        DataTime values are converted to UTC, use -verbose to see the value it is converted to.

    .EXAMPLE
        Get-SentinelOneBlacklists -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns results after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/ExclusionsAndBlacklist/Get-SentinelOneBlacklists.html

#>

[CmdletBinding( DefaultParameterSetName = 'index' )]
Param (
    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$accountIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$countOnly,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$createdAt__between,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$createdAt__gt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$createdAt__gte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$createdAt__lt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$createdAt__lte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$cursor,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$description__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [Int64[]]$groupIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [Int64[]]$ids,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$includeChildren,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$includeParents,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, 1000)]
    [Int64]$limit,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet(   'disable_all_monitors', 'disable_all_monitors_deep', 'disable_in_process_monitor',
                    'disable_in_process_monitor_deep', 'suppress', 'suppress_app_control',
                    'suppress_dfi_only', 'suppress_dynamic_only'
                )]
    [String[]]$modes,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'linux', 'macos', 'windows', 'windows_legacy' )]
    [String[]]$osTypes,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$query,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'NONE', 'Not allowed', 'Not recommended' )]
    [String[]]$recommendations,

    [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [Int64[]]$siteIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64]$skip,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$skipCount,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet(   'createdAt', 'description', 'id', 'osType', 'scope', 'scopePath',
                    'source', 'updatedAt', 'userName', 'value'
                )]
    [String]$sortBy,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'asc', 'desc' )]
    [String]$sortOrder,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'action_from_threat', 'catalog', 'cloud', 'user' )]
    [String[]]$source,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$tenant,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'black_hash' )]
    [String]$type,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'black_hash' )]
    [String[]]$types,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$unified,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$updatedAt__between,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$updatedAt__gt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$updatedAt__gte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$updatedAt__lt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$updatedAt__lte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$user__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$userIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$value,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$value__contains

)

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/restrictions"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                $body += @{ $Key.Key = $universalTime }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneExclusions {
<#
    .SYNOPSIS
        Get a list of all the Exclusions that match the filters

    .DESCRIPTION
        The Get-SentinelOneExclusions  cmdlet gets a list of all the Exclusions that match the filter.

        Note: To filter the results for a scope:
            Global  - Make sure "tenant" is "true" and no other scope ID is given.
            Account - Make sure "tenant" is "false" and at least one Account ID is given.
            Site    - Make sure "tenant" is "false" and at least one Site ID is given.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER createdAt__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER createdAt__gt
        Returns exclusions created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns exclusions created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns exclusions created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns exclusions created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".


    .PARAMETER description__contains
        Free-text filter by description

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ids
        List of IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER includeChildren
        Return filters from children scope levels

    .PARAMETER includeParents
        Return filters from parent scope levels

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER modes
        List of modes to filter by (Path exclusions only).

        Allowed values:
        'disable_all_monitors', 'disable_all_monitors_deep', 'disable_in_process_monitor', 'disable_in_process_monitor_deep',
        'suppress', 'suppress_app_control', 'suppress_dfi_only', 'suppress_dynamic_only'

    .PARAMETER osTypes
        List of Os types to filter by.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER pathExclusionTypes
        List of excluded paths in an exclusion (Path exclusions only).

        Allowed values:
        'file', 'folder', 'subfolder'

    .PARAMETER query
        A free-text search term, will match applicable attributes

    .PARAMETER recommendations
        List of recommendations to filter by.

        Allowed values:
        'None', 'Not allowed', 'Not recommended'

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915"

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'actions', 'createdAt', 'description', 'id', 'mode', 'osType', 'pathExclusionType', 'scope', 'scopePath',
        'source', 'subfolders', 'type', 'updatedAt', 'userName', 'value'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER source
        List sources to filter by.

        Allowed values:
        'action_from_threat', 'catalog', 'cloud', 'user'

    .PARAMETER tenant
        Indicates a tenant scope request

    .PARAMETER type
        Type

        Allowed values:
        'black_hash'

    .PARAMETER types
        Type

        Allowed values:
        'black_hash'

    .PARAMETER unified
        Unified

    .PARAMETER updatedAt__between
        Date range for update time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER updatedAt__gt
        Returns exclusions updated after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__gte
        Returns exclusions updated after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lt
        Returns exclusions updated before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lte
        Returns exclusions updated before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER user__contains
        Free-text filter by user name

    .PARAMETER userIds
        List of user ids to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER value
        value

    .PARAMETER value__contains
        Free-text filter by value

    .EXAMPLE
        Get-SentinelOneExclusions -tenant -countonly

        Gets a count of all exclusions from the main tenant

    .EXAMPLE
        225494730938493804 | Get-SentinelOneExclusions

        Gets a list of all exclusions from the defined site

    .EXAMPLE
        Get-SentinelOneExclusions -createdAt__gt '2018-02-27 14:32'

        Gets a list of all exclusions that were created after the defined dataTime

        DataTime values are converted to UTC, use -verbose to see the value it is converted to.

    .EXAMPLE
        Get-SentinelOneExclusions -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns results after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/ExclusionsAndBlacklist/Get-SentinelOneExclusions.html

#>

[CmdletBinding( DefaultParameterSetName = 'index' )]
Param (
    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$accountIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$countOnly,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$createdAt__between,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$createdAt__gt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$createdAt__gte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$createdAt__lt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$createdAt__lte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$cursor,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$description__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [Int64[]]$groupIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [Int64[]]$ids,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$includeChildren,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$includeParents,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, 1000)]
    [Int64]$limit,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet(   'disable_all_monitors', 'disable_all_monitors_deep', 'disable_in_process_monitor',
                    'disable_in_process_monitor_deep', 'suppress', 'suppress_app_control',
                    'suppress_dfi_only', 'suppress_dynamic_only'
                )]
    [String[]]$modes,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'file', 'folder', 'subfolder' )]
    [String[]]$pathExclusionTypes,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'linux', 'macos', 'windows', 'windows_legacy' )]
    [String[]]$osTypes,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$query,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'NONE', 'Not allowed', 'Not recommended' )]
    [String[]]$recommendations,

    [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [Int64[]]$siteIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64]$skip,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$skipCount,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet(   'actions', 'createdAt', 'description', 'id', 'mode', 'osType', 'pathExclusionType',
                    'scope', 'scopePath', 'source', 'subfolders', 'type', 'updatedAt', 'userName', 'value'
                )]
    [String]$sortBy,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'asc', 'desc' )]
    [String]$sortOrder,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'action_from_threat', 'catalog', 'cloud', 'user' )]
    [String[]]$source,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$tenant,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'black_hash' )]
    [String]$type,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'black_hash' )]
    [String[]]$types,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$unified,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$updatedAt__between,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$updatedAt__gt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$updatedAt__gte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$updatedAt__lt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$updatedAt__lte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$user__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$userIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$value,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$value__contains

)

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/exclusions"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                $body += @{ $Key.Key = $universalTime }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\exclusionsAndBlocklist\ExclusionsBlacklists-GET.ps1' 1803
#Region '.\Public\filters\Filters-GET.ps1' 0
function Get-SentinelOneFilters {
<#
    .SYNOPSIS
        Get the list of saved filters or Get saved Deep Visibility queries with full data

    .DESCRIPTION
        The Get-SentinelOneFilters cmdlet gets the list of saved filters or
        Gets saved Deep Visibility queries with full data

        Using the "groupIds" parameter changes the function to reference the Deep Visibility Filter "/filters/dv"
        instead of the normal "/filters"

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER groupIds
        List of Group IDs to filter by.

        This parameter changes the function to reference the Deep Visibility Filter "/filters/dv"
        instead of the normal "/filters"

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ids
        A list of Agent IDs.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER includeChildren
        Return filters from children scope levels

    .PARAMETER includeParents
        Return filters from parent scope levels

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER query
        Text query for filter's name.

        Example: "MyFilter".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'createdAt', 'id', 'name', 'updatedAt'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .EXAMPLE
        Get-SentinelOneFilters

        Returns the first 10 saved filters set at the global level

    .EXAMPLE
        Get-SentinelOneFilters -siteIds 225494730938493804

        Returns the first 10 saved filters set at the defined site

    .EXAMPLE
        Get-SentinelOneFilters -groupIds 225494730938493804

        Returns the saved Deep Visibility queries with full data

    .EXAMPLE
        Get-SentinelOneFilters -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        As of 2022-11
            Cannot fully validate the deep visibility endpoint due to permissions

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Filters/Get-SentinelOneFilters.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDeepVis' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDeepVis' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDeepVis' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDeepVis' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDeepVis' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDeepVis' )]
        [Switch]$includeChildren,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDeepVis' )]
        [Switch]$includeParents,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDeepVis' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDeepVis' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'indexByDeepVis' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDeepVis' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDeepVis' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDeepVis' )]
        [ValidateSet( 'createdAt', 'id', 'name', 'updatedAt' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDeepVis' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder = 'asc'

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'             {$resource_uri = "/filters"}
            'indexByDeepVis'    {$resource_uri = "/filters/dv"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\filters\Filters-GET.ps1' 226
#Region '.\Public\firewallControl\FirewallControls-GET.ps1' 0
function Export-SentinelOneFirewallRules {
<#
    .SYNOPSIS
        Export Firewall Control rules that match the filter to a JSON file

    .DESCRIPTION
        The Export-SentinelOneFirewallRules exports Firewall Control rules that match the filter
        to a JSON file from a scope specified by ID and to use in an import to another scope.

        Firewall Control requires Control SKU.

        The response will be quite long because it includes all the rule properties, thus filters are highly encouraged

        Filter ids can be some of the following
            "accounts", "sites", "groups",

        To filter the results for a scope:
            Global  - Make sure "tenant" is "true" and no other scope ID is given.
            Account - Make sure "tenant" is "false" and at least one Account ID is given.
            Site    - Make sure "tenant" is "false" and at least one Site ID is given.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER actions
        Return firewall rules with the filtered action.

        Allowed values:
        'Allow', 'Blocked'

    .PARAMETER application__contains
        Free-text filter by application (supports multiple values)

    .PARAMETER applications
        Return firewall rules with the filtered firewall class.

    .PARAMETER createdAt__between
        Returns rules created in the range of a start timestamp and an end timestamp.

        Example: "1514978764288-1514978999999"

    .PARAMETER createdAt__gt
        Returns rules created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns rules created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns rules created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns rules created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER directions
        Return firewall rules with the filtered directions.

        Allowed values:
        'any', 'inbound', 'outbound'

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ids
        List of ids to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER locationIds
        Filter by associated locations.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER name
        Return firewall rules with the filtered name.

    .PARAMETER name__contains
        Free-text filter by the Rule name

    .PARAMETER osTypes
        Return firewall rules with the filtered os_type.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER protocol__contains
        Free-text filter by protocol

    .PARAMETER protocols
        Return firewall rules with the filtered protocols.

    .PARAMETER query
        Free text search on name, tag, application, protocol

    .PARAMETER scopes
        Return firewall rules with the filtered os_type.

        Allowed values:
        'account', 'global', 'group', 'site'

    .PARAMETER service__contains
        Free-text filter by service

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER statuses
        Return firewall rules with the filtered status.

        Allowed values:
        'Disabled', 'Enabled'

    .PARAMETER tagIds
        Filter by associated tags.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER tagName__contains
        Free-text filter by the Tag name

    .PARAMETER tenant
        Indicates a tenant scope request

    .PARAMETER fileName
        Name of the file

        Example: 'MyAgents-2022'

        The default name format is 'firewallRules_id-yyyy-MM-dd_HHmmss'

    .PARAMETER filePath
        The location to save the file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Export-SentinelOneFirewallRules -siteIds 123456789012345678

        Returns the firewall rules from the defined siteIds and saves the results to a json in the current working directory

        fileName:
            firewallRules-2022-10-29_105845.json

    .EXAMPLE
        Export-SentinelOneFirewallRules -siteIds 123456789012345678 -groupIds 876543210987654321

        Returns the firewall rules from defined group in the defined siteId and saves the results to a json in the current working directory

        fileName:
            firewallRules-2022-10-29_105845.json

    .EXAMPLE
        Export-SentinelOneFirewallRules -siteIds 123456789012345678 -groupIds 876543210987654321 -fileName MyCustomFile -filePath C:\Logs -showReport

        Returns the firewall rules  from the defined group in teh defined siteId, saves the results to a json in the defined directory with the defined name
        and opens the location to were the file is saved.

        fileName:
            MyCustomFile.json

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/FirewallControl/Export-SentinelOneFirewallRules.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet ( 'Allow', 'Blocked' )]
        [String[]]$actions,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$application__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$applications,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$createdAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [DateTime]$createdAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [DateTime]$createdAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [DateTime]$createdAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [DateTime]$createdAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet ( 'any', 'inbound', 'outbound' )]
        [String[]]$directions,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$locationIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$name,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$name__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet ( 'linux', 'macos', 'windows', 'windows_legacy' )]
        [String[]]$osTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$protocol__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$protocols,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet ( 'account', 'global', 'group', 'site' )]
        [String[]]$scopes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$service__contains,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet ( 'Disabled', 'Enabled' )]
        [String[]]$statuses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$tagIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$tagName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$tenant,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fileName = "firewallRules-$( Get-date -Format 'yyyy-MM-dd_HHmmss' )",

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$showReport

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/firewall-control/export"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'fileName','filePath','showReport'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ($Key in $PSBoundParameters.GetEnumerator()){

                if($excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                    Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                    Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                    $body += @{ $Key.Key = $universalTime }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {

            $fileOutput = "$filePath\$filename.json"

            if ( (Test-Path -Path $filePath -PathType Container) -eq $false ){
                New-Item -Path $filePath -ItemType Directory > $null
            }

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -OutFile $fileOutput `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $fileOutput -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}



function Get-SentinelOneFirewallConfig {
<#
    .SYNOPSIS
        Get the Firewall Control configuration for a given scope.

    .DESCRIPTION
        The Get-SentinelOneFirewallConfig cmdlet gets the Firewall Control configuration for a given scope.

        To filter the results for a scope:
            Global - Make sure "tenant" is "true" and no other scope ID is given.
            Account - Make sure "tenant" is "false" and at least one Account ID is given.
            Site - Make sure "tenant" is "false" and at least one Site ID is given.

        The response shows if Firewall Control is enabled for the scope, if Location Awareness is enabled, the higher scope from which this scope inherited the configuration, and whether a lower scope inherits this configuration.
        Firewall Control requires Control SKU.

    .PARAMETER accountIds
        Return accounts under the defined ids

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER tenant
        Indicates a tenant scope request

    .EXAMPLE
        Get-SentinelOneFirewallConfig

        Returns the Firewall Control configuration for a given scope.


    .EXAMPLE
        Get-SentinelOneFirewallConfig -siteIds 225494730938493804

        Returns the Firewall Control configuration for the defined siteIds

    .EXAMPLE
        225494730938493804 | Get-SentinelOneFirewallConfig

        Returns the Firewall Control configuration for the defined siteIds


    .EXAMPLE
        Get-SentinelOneFirewallConfig -tenant

        Returns the Firewall Control configuration from a global scope

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/FirewallControl/Get-SentinelOneFirewallConfig.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$tenant

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/firewall-control/configuration"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneFirewallRules {
<#
    .SYNOPSIS
        Get the Firewall Control rules that match the filter

    .DESCRIPTION
        The Get-SentinelOneFirewallRules gets the Firewall Control rules that match the filter
        from a scope specified by ID.

        Firewall Control requires Control SKU.

        The response will be quite long because it includes all the rule properties, thus filters are highly encouraged

        Filter ids can be some of the following
            "accounts", "sites", "groups",

        To filter the results for a scope:
            Global  - Make sure "tenant" is "true" and no other scope ID is given.
            Account - Make sure "tenant" is "false" and at least one Account ID is given.
            Site    - Make sure "tenant" is "false" and at least one Site ID is given.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER actions
        Return firewall rules with the filtered action.

        Allowed values:
        'Allow', 'Blocked'

    .PARAMETER application__contains
        Free-text filter by application (supports multiple values)

    .PARAMETER applications
        Return firewall rules with the filtered firewall class.

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER createdAt__between
        Returns rules created in the range of a start timestamp and an end timestamp.

        Example: "1514978764288-1514978999999"

    .PARAMETER createdAt__gt
        Returns rules created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns rules created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns rules created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns rules created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER directions
        Return firewall rules with the filtered directions.

        Allowed values:
        'any', 'inbound', 'outbound'

    .PARAMETER disablePagination
        If true, all rules for requested scope will be returned

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ids
        List of ids to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER locationIds
        Filter by associated locations.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER name
        Return firewall rules with the filtered name.

    .PARAMETER name__contains
        Free-text filter by the Rule name

    .PARAMETER osTypes
        Return firewall rules with the filtered os_type.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER protocol__contains
        Free-text filter by protocol

    .PARAMETER protocols
        Return firewall rules with the filtered protocols.

    .PARAMETER query
        Free text search on name, tag, application, protocol

    .PARAMETER scopes
        Return firewall rules with the filtered os_type.

        Allowed values:
        'account', 'global', 'group', 'site'

    .PARAMETER service__contains
        Free-text filter by service

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'action', 'id', 'name', 'order', 'status'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER statuses
        Return firewall rules with the filtered status.

        Allowed values:
        'Disabled', 'Enabled'

    .PARAMETER tagIds
        Filter by associated tags.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER tagName__contains
        Free-text filter by the Tag name

    .PARAMETER tenant
        Indicates a tenant scope request

    .EXAMPLE
        Get-SentinelOneFirewallRules

        Returns the first 10 Firewall Control rules for a global

    .EXAMPLE
        Get-SentinelOneFirewallRules -siteId 1234567890

        Returns the first 10 Firewall Control rules for the defined siteIds

    .EXAMPLE
        1234567890 | Get-SentinelOneFirewallRules

        Returns the first 10 Firewall Control rules for the defined siteIds

    .EXAMPLE
        Get-SentinelOneFirewallRules -siteId 1234567890,0987654321

        Returns the first 10 Firewall Control rules for the defined siteIds

    .EXAMPLE
        Get-SentinelOneFirewallRules -createdAt '2018-02-27'

        Returns firewall control rules that were created after the defined timestamp defined

    .EXAMPLE
        Get-SentinelOneFirewallRules -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/FirewallControl/Get-SentinelOneFirewallRules.html

#>

[CmdletBinding( DefaultParameterSetName = 'index' )]
Param (
    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$accountIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet ( 'Allow', 'Blocked' )]
    [String[]]$actions,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$application__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$applications,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$countOnly,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [String]$createdAt__between,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [DateTime]$createdAt__gt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [DateTime]$createdAt__gte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [DateTime]$createdAt__lt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [DateTime]$createdAt__lte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$cursor,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet ( 'any', 'inbound', 'outbound' )]
    [String[]]$directions,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$disablePagination,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [Int64[]]$groupIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [Int64[]]$ids,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, 1000)]
    [Int64]$limit,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$locationIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$name,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$name__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet ( 'linux', 'macos', 'windows', 'windows_legacy' )]
    [String[]]$osTypes,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$protocol__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$protocols,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$query,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet ( 'account', 'global', 'group', 'site' )]
    [String[]]$scopes,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$service__contains,

    [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [Int64[]]$siteIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, 1000)]
    [Int64]$skip,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$skipCount,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'action', 'id', 'name', 'order', 'status' )]
    [String]$sortBy,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'asc', 'desc' )]
    [String]$sortOrder,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet ( 'Disabled', 'Enabled' )]
    [String[]]$statuses,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$tagIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$tagName__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$tenant

)

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/firewall-control"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                $body += @{ $Key.Key = $universalTime }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneFirewallProtocols {
<#
    .SYNOPSIS
        Get a list of protocols that can be used in Firewall Control rules.

    .DESCRIPTION
        The Get-SentinelOneFirewallProtocols gets a list of protocols that can be used in Firewall Control rules.

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER disablePagination
        If true, all rules for requested scope will be returned

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER query
        Free text search on name, tag, application, protocol

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'name'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .EXAMPLE
        Get-SentinelOneFirewallProtocols

        Returns the first 10 Firewall protocol rules that can be used in rules

    .EXAMPLE
        Get-SentinelOneFirewallProtocols -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/FirewallControl/Get-SentinelOneFirewallProtocols.html

#>

[CmdletBinding( DefaultParameterSetName = 'index' )]
Param (
    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$countOnly,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$cursor,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$disablePagination,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, 1000)]
    [Int64]$limit,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$query,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, 1000)]
    [Int64]$skip,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$skipCount,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'name' )]
    [String]$sortBy,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'asc', 'desc' )]
    [String]$sortOrder = 'asc'

)

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/firewall-control/protocols"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneFirewallRulesByTag {
<#
    .SYNOPSIS
        Get all Firewall rules linked to tag, regardless of inheritance mode.

    .DESCRIPTION
        The Get-SentinelOneFirewallRulesByTag gets all Firewall rules linked to tag, regardless of inheritance mode.

        To get the ID of a tag, run the firewall-control API (see Get Firewall Rules)
        and see tagIDs in the response.

    .PARAMETER tag_id
        Rule ID.

        Example: "225494730938493804".

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER actions
        Return firewall rules with the filtered action.

        Allowed values:
        'Allow', 'Blocked'

    .PARAMETER application__contains
        Free-text filter by application (supports multiple values)

    .PARAMETER applications
        Return firewall rules with the filtered firewall class.

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER createdAt__between
        Returns rules created in the range of a start timestamp and an end timestamp.

        Example: "1514978764288-1514978999999"

    .PARAMETER createdAt__gt
        Returns rules created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns rules created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns rules created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns rules created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER directions
        Return firewall rules with the filtered directions.

        Allowed values:
        'any', 'inbound', 'outbound'

    .PARAMETER disablePagination
        If true, all rules for requested scope will be returned

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ids
        List of ids to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER locationIds
        Filter by associated locations.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER name
        Return firewall rules with the filtered name.

    .PARAMETER name__contains
        Free-text filter by the Rule name

    .PARAMETER osTypes
        Return firewall rules with the filtered os_type.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER protocol__contains
        Free-text filter by protocol

    .PARAMETER protocols
        Return firewall rules with the filtered protocols.

    .PARAMETER query
        Free text search on name, tag, application, protocol

    .PARAMETER scopes
        Return firewall rules with the filtered os_type.

        Allowed values:
        'account', 'global', 'group', 'site'

    .PARAMETER service__contains
        Free-text filter by service

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'action', 'id', 'name', 'order', 'status'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER statuses
        Return firewall rules with the filtered status.

        Allowed values:
        'Disabled', 'Enabled'

    .PARAMETER tagIds
        Filter by associated tags.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER tagName__contains
        Free-text filter by the Tag name

    .PARAMETER tenant
        Indicates a tenant scope request

    .EXAMPLE
        Get-SentinelOneFirewallRulesByTag -tag_id 225494730938493804

        Returns the first 10 firewall rules linked to tag, regardless of inheritance mode.

    .EXAMPLE
        Get-SentinelOneFirewallRulesByTag -tag_id 225494730938493804 -siteId 1234567890

        Returns the first 10 firewall rules linked to tag, regardless of inheritance mode for the defined siteIds

    .EXAMPLE
        1234567890 | Get-SentinelOneFirewallRulesByTag -tag_id 225494730938493804

        Returns the first 10 firewall rules linked to tag, regardless of inheritance mode for the defined siteIds

    .EXAMPLE
        Get-SentinelOneFirewallRulesByTag -tag_id 225494730938493804 -createdAt '2018-02-27'

        Returns firewall control rules liked that were created after the defined timestamp defined

    .EXAMPLE
        Get-SentinelOneFirewallRulesByTag -tag_id 225494730938493804 -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        Maybe combine this function with the "Get-SentinelOneFirewallRules" function

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/FirewallControl/Get-SentinelOneFirewallRulesByTag.html

#>

[CmdletBinding( DefaultParameterSetName = 'index' )]
Param (
    [Parameter( Mandatory = $true, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$tag_id,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$accountIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet ( 'Allow', 'Blocked' )]
    [String[]]$actions,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$application__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$applications,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$countOnly,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [String]$createdAt__between,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [DateTime]$createdAt__gt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [DateTime]$createdAt__gte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [DateTime]$createdAt__lt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [DateTime]$createdAt__lte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$cursor,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet ( 'any', 'inbound', 'outbound' )]
    [String[]]$directions,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$disablePagination,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [Int64[]]$groupIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [Int64[]]$ids,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, 1000)]
    [Int64]$limit,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$locationIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$name,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$name__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet ( 'linux', 'macos', 'windows', 'windows_legacy' )]
    [String[]]$osTypes,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$protocol__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$protocols,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$query,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet ( 'account', 'global', 'group', 'site' )]
    [String[]]$scopes,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$service__contains,

    [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [Int64[]]$siteIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, 1000)]
    [Int64]$skip,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$skipCount,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'action', 'id', 'name', 'order', 'status' )]
    [String]$sortBy,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'asc', 'desc' )]
    [String]$sortOrder,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet ( 'Disabled', 'Enabled' )]
    [String[]]$statuses,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$tagIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$tagName__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$tenant

)

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/firewall-control/tag-rules/$tag_id"}
        }

        $resource_uri

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable','tag_id'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                $body += @{ $Key.Key = $universalTime }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\firewallControl\FirewallControls-GET.ps1' 1495
#Region '.\Public\gateways\Gateways-GET.ps1' 0
function Get-SentinelOneGateways {
<#
    .SYNOPSIS
        Get the gateways in your deployment that match the filter from a Ranger scan.

    .DESCRIPTION
        The Get-SentinelOneGateways cmdlet gets the gateways in your deployment that match the filter
        from a Ranger scan.

        Ranger requires a Ranger license.

    .PARAMETER accountIds
        Return accounts under the defined ids

    .PARAMETER agentPercentage__between
        Percentage of agents of the account in this network calculated as
        numberOfAgents/totalAgents * 100.

        Example: "70-80".

    .PARAMETER agentPercentage__gt
        Agent percentage (more than)

    .PARAMETER agentPercentage__gte
        Agent percentage (more than or equal)

    .PARAMETER agentPercentage__lt
        Agent percentage (less than)

    .PARAMETER agentPercentage__lte
        Agent percentage (less than or equal)

    .PARAMETER allowScan
        Do we allow scanning in this network

    .PARAMETER archived
        Archived network

    .PARAMETER connectedRangers__between
        The total of non decommissioned agents in the account.

        Example: "2-8".

    .PARAMETER connectedRangers__gt
        Total agents (more than)

    .PARAMETER connectedRangers__gte
        Total agents (more than or equal)

    .PARAMETER connectedRangers__lt
        Total agents (less than)

    .PARAMETER connectedRangers__lte
        Total agents (less than or equal)

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER createdAt__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER createdAt__gt
        Returns gateways created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns gateways created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns gateways created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns gateways created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER externalIp
        Search external ip using a CIDR expression or exact IP

    .PARAMETER externalIp__contains
        Free-text filter by visible IP

        Example: "192.168.0.1/24,10.1".

    .PARAMETER icmpScan
        ICMP scan enabled

    .PARAMETER ids
        A list of Agent IDs.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ip
        Search ip using a CIDR expression exact IP

    .PARAMETER ip__contains
        Free-text filter by IP Address.

        Example: "192.168.0.1/24,10.1".

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER macAddress
        The gateway mac address

    .PARAMETER macAddress__contains
        Free-text filter by mac address.

        Example: "aa:ee:b1".

    .PARAMETER manufacturer
        The gateway manufacturer obtained from the mac address

    .PARAMETER manufacturer__contains
        Free-text filter by manufacturer

        Example: "Company".

    .PARAMETER mdnsScan
        MDNS scan enabled

    .PARAMETER networkName__contains
        Free-text filter by network name

        Example: "Network1".

    .PARAMETER new
        True if this is network was first seen some days ago, 3 by default

    .PARAMETER numberOfAgents__between
        The total of non decommissioned agents in the account.

        Example: "2-8".

    .PARAMETER numberOfAgents__gt
        Total agents (more than)

    .PARAMETER numberOfAgents__gte
        Total agents (more than or equal)

    .PARAMETER numberOfAgents__lt
        Total agents (less than)

    .PARAMETER numberOfAgents__lte
        Total agents (less than or equal)

    .PARAMETER numberOfRangers__between
        The total of non decommissioned rangers in the account.

        Example: "2-8".

    .PARAMETER numberOfRangers__gt
        Total rangers (more than)

    .PARAMETER numberOfRangers__gte
        Total rangers (more than or equal)

    .PARAMETER numberOfRangers__lt
        Total rangers (less than)

    .PARAMETER numberOfRangers__lte
        Total rangers (less than or equal)

    .PARAMETER query
        Free text query

    .PARAMETER rdnsScan
        RDNS scan enabled

    .PARAMETER scanOnlyLocalSubnets
        Allow remote tasks form this network

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER smbScan
        SMB scan enabled

    .PARAMETER snmpScan
        SNMP scan enabled

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'agentPercentage', 'allowScan', 'connectedRangers', 'createdAt', 'expiryDate', 'externalIp',
        'id', 'ip', 'macAddress', 'networkName', 'numberOfAgents', 'numberOfRangers', 'totalAgents'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER tcpPorts__contains
        Free-text filter by tcp port.

        Example: "80,24".

    .PARAMETER totalAgents__between
        The total of non decommissioned agents in the account.

        Example: "2-8".

    .PARAMETER totalAgents__gt
        Total agents (more than)

    .PARAMETER totalAgents__gte
        Total agents (more than or equal)

    .PARAMETER totalAgents__lt
        Total agents (less than)

    .PARAMETER totalAgents__lte
        Total agents (less than or equal)

    .PARAMETER udpPorts__contains
        Free-text filter by udp port

        Example: "137,2002".

    .PARAMETER updatedAt__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER updatedAt__gt
        Returns gateways created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__gte
        Returns gateways created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lt
        Returns gateways created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lte
        Returns gateways created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .EXAMPLE
        Get-SentinelOneGateways

        Returns the first 10 gateways

    .EXAMPLE
        Get-SentinelOneGateways -countAgents

        Returns the number of gateways without any data that match a filter.

    .EXAMPLE
        Get-SentinelOneGateways -createdAt__gt '2018-02-27 14:32'

        Returns gateways that were created after the defined dataTime

        DataTime values are converted to UTC, use -verbose to see the value it is converted to.

    .EXAMPLE
        Get-SentinelOneGateways -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        As of 2022-11
            Cannot fully validate due to permissions

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Gateways/Get-SentinelOneGateways.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$agentPercentage__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$agentPercentage__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$agentPercentage__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$agentPercentage__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$agentPercentage__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$allowScan,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$archived,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$connectedRangers__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$connectedRangers__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$connectedRangers__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$connectedRangers__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$connectedRangers__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$createdAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$externalIp,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$externalIp__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$icmpScan,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$ip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$ip__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$macAddress,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$macAddress__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$manufacturer,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$manufacturer__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$mdnsScan,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$networkName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$new,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$numberOfAgents__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$numberOfAgents__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$numberOfAgents__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$numberOfAgents__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$numberOfAgents__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$numberOfRangers__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$numberOfRangers__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$numberOfRangers__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$numberOfRangers__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$numberOfRangers__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$rdnsScan,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$scanOnlyLocalSubnets,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$smbScan,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$snmpScan,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'agentPercentage', 'allowScan', 'connectedRangers', 'createdAt', 'expiryDate', 'externalIp',
                        'id', 'ip', 'macAddress', 'networkName', 'numberOfAgents', 'numberOfRangers', 'totalAgents'
                    )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$tcpPorts__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$totalAgents__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalAgents__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalAgents__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalAgents__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalAgents__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$udpPorts__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$updatedAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lte

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/ranger/gateways"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                $body += @{ $Key.Key = $universalTime }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\gateways\Gateways-GET.ps1' 651
#Region '.\Public\groups\Groups-GET.ps1' 0
function Get-SentinelOneGroups {
<#
    .SYNOPSIS
        Get data of groups that match the filter.

    .DESCRIPTION
        The Get-SentinelOneGroups cmdlet gets data of groups that match the filter.

        Using the "group_id" parameter will call the the "/groups/{group_id}" endpoint
        instead of the "/groups" endpoint.

    .PARAMETER accountIds
        Return accounts under the defined ids

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER description
        The description for the Group

    .PARAMETER group_id
        Group ID.

        This calls the "/groups/{group_id}" endpoint instead of the "/groups"

        Example: "225494730938493804".

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER id
        Id.

        Example: "225494730938493804".

    .PARAMETER isDefault
        Is this the default group?

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER name
        Name

    .PARAMETER query
        Free text search on fields name, description

    .PARAMETER rank
        The rank sets the priority of a dynamic group over others.

        Example: "1".

    .PARAMETER registrationToken
        Registration token.

        Example: "eyJ1cmwiOiAiaHR0cHM6Ly9jb25zb2xlL......==".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'createdAt', 'description', 'id', 'name', 'rank', 'siteId', 'type', 'updatedAt'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER type
        Group type.

        Allowed values:
        'dynamic', 'pinned', 'static'

    .PARAMETER types
        A list of Group types.

        Allowed values:
        'dynamic', 'pinned', 'static'

    .PARAMETER updatedAt__gt
        Returns groups created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__gte
        Returns groups created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lt
        Returns groups created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lte
        Returns groups created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .EXAMPLE
        Get-SentinelOneGroups

        Returns the first 10 groups

    .EXAMPLE
        Get-SentinelOneGroups -group_id 1234567890

        Returns the group matching the defined id.

    .EXAMPLE
        Get-SentinelOneGroups -countOnly

        Returns the number of groups without any data that match a filter.

    .EXAMPLE
        Get-SentinelOneGroups -updatedAt__gt '2018-02-27 14:32'

        Returns groups that were updated after the defined dataTime

        DataTime values are converted to UTC, use -verbose to see the value it is converted to.

    .EXAMPLE
        Get-SentinelOneGroups -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Groups/Get-SentinelOneGroups.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$description,

        [Parameter( Mandatory = $true, ParameterSetName = 'indexByGroup' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$group_id,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$id,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$isDefault,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$name,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$rank,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$registrationToken,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'createdAt', 'description', 'id', 'name', 'rank', 'siteId', 'type', 'updatedAt' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'dynamic', 'pinned', 'static' )]
        [String]$type,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'dynamic', 'pinned', 'static' )]
        [String[]]$types,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lte

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/groups"}
            'indexByGroup'  {$resource_uri = "/groups/$group_id"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable', 'group_id'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                    Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                    Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                    $body += @{ $Key.Key = $universalTime }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }
        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\groups\Groups-GET.ps1' 332
#Region '.\Public\hashes\Hashes-GET.ps1' 0
function Get-SentinelOneHashReputation {
<#
    .SYNOPSIS
        Get the reputation of a hash, given the required SHA1.

    .DESCRIPTION
        The Get-SentinelOneHashReputation cmdlet gets the reputation of a hash, given the required SHA1.

        To get a hash, run "threats" (best if filtered for a Group or Site)
        and take the fileContentHash value.

    .PARAMETER hash
        Return the hash reputation for the defined SHA1 hash

    .EXAMPLE
        Get-SentinelOneHashReputation -hash 1ce2472499424b6e4d3923f42024d002d7aeb7a6

        Returns the hash reputation for the defined SHA1 hash

    .EXAMPLE
        1ce2472499424b6e4d3923f42024d002d7aeb7a6 | Get-SentinelOneHashReputation

        Returns the hash reputation for the defined SHA1 hash

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Hashes/Get-SentinelOneHashReputation.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ValueFromPipeline = $true, Position=0, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$hash
    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/hashes/$hash/reputation"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }
        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\hashes\Hashes-GET.ps1' 88
#Region '.\Public\locations\Locations-GET.ps1' 0
function Get-SentinelOneLocations {
<#
    .SYNOPSIS
        Get the locations of Agents in a given scope that match the filter.

    .DESCRIPTION
        The Get-SentinelOneLocations cmdlet gets the locations of Agents in a given scope that match the filter.

        Agent locations are based on endpoint network parameters
            IP, DNS, NIC, Registry Key,
            or SentinelOne connection set for all true, at least one true,
            or none true and applied to a Site, Account, or Global

        Agents detect their location settings and apply Firewall Control rules that have Location Aware parameters
        that match the Agent location. Agents can be in multiple locations at the same time.
        If an Agent that supports Locations does not detect that it is in a defined location,
        it uses the Firewall rules assigned to the Fallback location.

        Use this command with a filter for "hasFirewallRules" to find Locations that do not have matching Firewall Control rules.
        The response to this request includes the ID of the location, which you can use in other commands.

        Firewall Control and Location Awareness require Control SKU.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER creator__contains
        Free-text filter by creator of the location

        Example: "max,mike".

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER description__contains
        Free-text filter by description

        Example: "out of office".

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER hasFirewallRules
        Filter by locations with/without firewall rules associated to them

    .PARAMETER hostname__contains
        Free-text filter by hostname

        Example: "sentinelone.com,localhost".

    .PARAMETER ids
        Filter results by location IDs.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ipAddress__contains
        Free-text filter by IP address

        Example: "29.213.22.17".

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER name__contains
        Free-text filter by location name

        Example: "office".

    .PARAMETER registryKey__contains
        Free-text filter by registry key

        Example: "system\software,sentinel".

    .PARAMETER scopeName__contains
        Free-text filter by scope name

        Example: "my_group,my_site".

    .PARAMETER scopes
        Filter results by scope.

        Allowed values
        'account', 'global', 'group', 'site'

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'id', 'scope'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .EXAMPLE
        Get-SentinelOneLocations

        Returns the first 10 locations

    .EXAMPLE
        Get-SentinelOneLocations -countOnly

        Returns the number of locations without any data that match a filter.

    .EXAMPLE
        Get-SentinelOneLocations -siteIds 225494730938493804 -scopes global

        Returns the first 10 locations from the defined siteIds that are applied from a global scope down

    .EXAMPLE
        Get-SentinelOneLocations -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Locations/Get-SentinelOneLocations.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$creator__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$description__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$hasFirewallRules,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$hostname__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$ipAddress__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$name__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$registryKey__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$scopeName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'account', 'global', 'group', 'site' )]
        [String[]]$scopes,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'id', 'scope' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/locations"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                $body += @{ $Key.Key = $universalTime }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\locations\Locations-GET.ps1' 286
#Region '.\Public\marketplace\Marketplace-GET.ps1' 0
function Get-SentinelOneMarketplaceAppCatalog {
<#
    .SYNOPSIS
        Get the Marketplace Application Catalog.

    .DESCRIPTION
        The Get-SentinelOneMarketplaceAppCatalog cmdlet gets the Marketplace Application Catalog.

    .PARAMETER category__contains
        Free-text filter by catalog application category.

        Example: "Service Pack 1".

    .PARAMETER description__contains
        Free-text filter by catalog application description

        Example: "Service Pack 1".

    .PARAMETER id
        Filter results by application catalog id.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER name__contains
        Free-text filter by catalog application name

        Example: "Service Pack 1".

    .PARAMETER query
        Free-text filter by SentinelOne query

        Example: "Service Pack 1".

    .EXAMPLE
        Get-SentinelOneMarketplaceAppCatalog

        Returns all the Marketplace Applications

    .EXAMPLE
        Get-SentinelOneMarketplaceAppCatalog -category__contains Threat

        Returns the Marketplace Applications whose category contains the defined value

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Marketplace/Get-SentinelOneMarketplaceAppCatalog.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$category__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$description__contains,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$id,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$name__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$query

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/singularity-marketplace/applications-catalog"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneMarketplaceAppConfigFields {
<#
    .SYNOPSIS
        Get the Catalog Application Configuration Fields.

    .DESCRIPTION
        The Get-SentinelOneMarketplaceAppConfigFields cmdlet gets the Catalog Application Configuration Fields.

    .PARAMETER application_catalog_id
        Application Catalog ID.

        Example: "225494730938493804".

    .EXAMPLE
        Get-SentinelOneMarketplaceAppConfigFields -application_catalog_id 225494730938493804

        Returns the defined Marketplace catalog applications configuration fields.

    .EXAMPLE
        225494730938493804 | Get-SentinelOneMarketplaceAppConfigFields

        Returns the defined Marketplace catalog applications configuration fields.

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Marketplace/Get-SentinelOneMarketplaceAppConfigFields.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$application_catalog_id
    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/singularity-marketplace/applications-catalog/$application_catalog_id/config"}
        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneMarketplaceAppConfigSchema {
<#
    .SYNOPSIS
        Get the configuration schema for a requested Application Catalog.

    .DESCRIPTION
        The Get-SentinelOneMarketplaceAppConfigSchema cmdlet gets the configuration schema for a requested Application Catalog.

    .PARAMETER application_id
        Application ID.

        Example: "225494730938493804".

    .EXAMPLE
        Get-SentinelOneMarketplaceAppConfigSchema -application_id 225494730938493804

        Returns the defined Marketplace configuration schema for a requested Application Catalog.

    .EXAMPLE
        225494730938493804 | Get-SentinelOneMarketplaceAppConfigSchema

        Returns the defined Marketplace configuration schema for a requested Application Catalog.

    .NOTES
        AS of 2022-10
            Cannot fully validate due to permissions

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Marketplace/Get-SentinelOneMarketplaceAppConfigSchema.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$application_id
    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/singularity-marketplace/applications/$application_id/config"}
        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneMarketplaceAppInstalls {
<#
    .SYNOPSIS
        Get the installed Marketplace applications for a scope specified.

    .DESCRIPTION
        The Get-SentinelOneMarketplaceAppInstalls cmdlet gets the installed Marketplace
        applications for a scope specified.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER application_catalog_id
        A list of catalog applications IDs.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER creator__contains
        Free-text filter by application creator

        Example: "Service Pack 1".

    .PARAMETER cursor
        Cursor position returned by the last request. Should be used for iterating over more than 1000 items.

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER disablePagination
        If true, all installed applications for requested scope will be returned

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER id
        Filter results by application catalog id.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER name__contains
        Free-text filter by application name

        Example: "Service Pack 1".

    .PARAMETER query
        Free-text filter by SentinelOne query

        Example: "Service Pack 1".

    .PARAMETER scopes
        Filter results by scope.

        Allowed values:
        'account', 'global', 'group', 'site'

    .PARAMETER siteIds
        List of Site IDs to filter by

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'id', 'name', 'queryType', 'scope'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .EXAMPLE
        Get-SentinelOneMarketplaceAppInstalls

        Returns installed Marketplace applications from a global scope

    .EXAMPLE
        Get-SentinelOneMarketplaceAppInstalls -siteIds 225494730938493804

        Returns installed Marketplace applications for a defined scope

    .EXAMPLE
        225494730938493804 | Get-SentinelOneMarketplaceAppInstalls

        Returns installed Marketplace applications for a defined scope

    .EXAMPLE
        Get-SentinelOneMarketplaceAppInstalls -name__contains jira,azure

        Returns installed Marketplace applications from a global scope whose name is like the defined values

    .EXAMPLE
        Get-SentinelOneMarketplaceAppInstalls -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns accounts after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        As of 2022-11
            The "scopes" parameter returns a 500 error and appears to be bugged as it does it in the management portal as well.

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Marketplace/Get-SentinelOneMarketplaceAppInstalls.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$application_catalog_id,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$creator__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$disablePagination,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$id,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$name__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'account', 'global', 'group', 'site' )]
        [String[]]$scopes,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'id', 'name', 'queryType', 'scope' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/singularity-marketplace/applications"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\marketplace\Marketplace-GET.ps1' 500
#Region '.\Public\networkQuarantineControl\NetworkQuarantineControl-GET.ps1' 0
function Export-SentinelOneFirewallCategoryRules {
<#
    .SYNOPSIS
        Export Firewall Control rules that match the filter to a JSON file

    .DESCRIPTION
        The Export-SentinelOneFirewallCategoryRules cmdlet exports Firewall Control rules that match
        the filter to a JSON file from a scope specified by ID
        and to use in an import to another scope.

        Firewall Control requires Control SKU.

        The response will be quite long because it includes all the rule properties, thus filters are highly encouraged

        Filter ids can be some of the following
            "accounts", "groupIds",

        To filter the results for a scope:
            Global  - Make sure "tenant" is "true" and no other scope ID is given.
            Account - Make sure "tenant" is "false" and at least one Account ID is given.
            Site    - Make sure "tenant" is "false" and at least one Site ID is given.

    .PARAMETER firewall_rule_category
        To affect Network Quarantine use network-quarantine

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER actions
        Return firewall rules with the filtered action.

        Allowed values:
        'Allow', 'Block'

    .PARAMETER application__contains
        Free-text filter by application

    .PARAMETER applications
        Return firewall rules with the filtered firewall class.

    .PARAMETER createdAt__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER createdAt__gt
        Returns firewall rules created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns firewall rules created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns firewall rules created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns firewall rules created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER directions
        Return firewall rules with the filtered action.

        Allowed values:
        'any', 'inbound', 'outbound'

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ids
        List of ids to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER locationIds
        Filter by associated locations.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER name
        Return firewall rules with the filtered name.

    .PARAMETER name__contains
        Free-text filter by the Rule name

    .PARAMETER osTypes
        Return firewall rules with the filtered os_type.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER protocol__contains
        Free-text filter by protocol

    .PARAMETER protocols
        Return firewall rules with the filtered protocols.

    .PARAMETER query
        Free text search on name, tag, application, protocol

    .PARAMETER scopes
        Return firewall rules with the filtered os_type.

        Allowed values:
        'account', 'global', 'group', 'site'

    .PARAMETER service__contains
        Free-text filter by service

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER statuses
        Return firewall rules with the filtered status.

        Allowed values:
        'Disabled', 'Enabled'

    .PARAMETER tagIds
        Filter by associated tags.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER tagName__contains
        Free-text filter by the Tag name

    .PARAMETER tenant
        Indicates a tenant scope request

    .PARAMETER fileName
        Name of the file

        Example: 'MyAgents-2022'

        The default name format is 'firewallCategoryRules-yyyy-MM-dd_HHmmss'

    .PARAMETER filePath
        The location to save the file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Export-SentinelOneFirewallCategoryRules -firewall_rule_category firewall

        Exports Firewall Control category rules using the defined value from a global scope to a JSON file the current directory

        fileName:
            firewallCategoryRules-2022-10-29_105845.json

    .EXAMPLE
        Export-SentinelOneFirewallCategoryRules -firewall_rule_category firewall -groupIds 225494730938493804

        Exports Firewall Control category rules from the defined group with the defined category value to a JSON file the current directory

        fileName:
            firewallCategoryRules-2022-10-29_105845.json

    .EXAMPLE
        Export-SentinelOneFirewallCategoryRules -firewall_rule_category firewall -fileName MyCustomFile -filePath C:\Logs -showReport

        Exports Firewall Control category rules using the defined value from a global scope to a JSON file in the defined directory with the defined name
        and opens the location to were the file is saved.

        fileName:
            MyCustomFile.json

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/NetworkQuarantineControl/Export-SentinelOneFirewallCategoryRules.html
#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$firewall_rule_category,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Allow', 'Block' )]
        [String[]]$actions,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$application__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$applications,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$createdAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'any', 'inbound', 'outbound' )]
        [String[]]$directions,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$locationIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$name,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$name__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'linux', 'macos', 'windows', 'windows_legacy' )]
        [String[]]$osTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$protocol__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$protocols,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'account', 'global', 'group', 'site' )]
        [String[]]$scopes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$service__contains,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Disabled', 'Enabled' )]
        [String[]]$statuses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$tagIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$tagName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$tenant,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fileName = "firewallCategoryRules-$( Get-date -Format 'yyyy-MM-dd_HHmmss' )",

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$showReport

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/firewall-control/$firewall_rule_category/export"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'agentLight','fileName','filePath','showReport','firewall_rule_category'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                    Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                    Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                    $body += @{ $Key.Key = $universalTime }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {

            $fileOutput = "$filePath\$filename.json"

            if ( (Test-Path -Path $filePath -PathType Container) -eq $false ){
                New-Item -Path $filePath -ItemType Directory > $null
            }

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -OutFile $fileOutput `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $fileOutput -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}



function Get-SentinelOneFirewallCategoryConfig {
<#
    .SYNOPSIS
        Get the Firewall Control configuration for a given scope.

    .DESCRIPTION
        The Get-SentinelOneFirewallCategoryConfig cmdlet gets the Firewall Control configuration for a given scope.

    .PARAMETER firewall_rule_category
        To affect Network Quarantine use network-quarantine

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER tenant
        Indicates a tenant scope request

    .EXAMPLE
        Get-SentinelOneFirewallCategoryConfig -firewall_rule_category firewall

        Get the Firewall Control category configuration using the defined value from a global scope

    .EXAMPLE
        Get-SentinelOneFirewallCategoryConfig -firewall_rule_category firewall -siteIds 225494730938493804

        Get the Firewall Control category configuration using the defined value from the defined scope

    .EXAMPLE
        225494730938493804 | Get-SentinelOneFirewallCategoryConfig -firewall_rule_category firewall

        Get the Firewall Control category configuration using the defined value from the defined scope

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/NetworkQuarantineControl/Get-SentinelOneFirewallCategoryConfig.html
#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$firewall_rule_category,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$tenant

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/firewall-control/$firewall_rule_category/configuration"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable', 'firewall_rule_category'

        $body = @{}

        if ( $PSCmdlet.ParameterSetName -eq 'index' ) {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }
        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneFirewallCategoryRules {
<#
    .SYNOPSIS
        Get the Firewall Control rules for a scope

    .DESCRIPTION
        The Get-SentinelOneFirewallCategoryRules cmdlet gets the Firewall Control rules for a
        scope specified by ID specified by ID

        Firewall Control requires Control SKU.

        The response will be quite long because it includes all the rule properties, thus filters are highly encouraged

        Filter ids can be some of the following
            "accounts", "groupIds",

        To filter the results for a scope:
            Global  - Make sure "tenant" is "true" and no other scope ID is given.
            Account - Make sure "tenant" is "false" and at least one Account ID is given.
            Site    - Make sure "tenant" is "false" and at least one Site ID is given.

    .PARAMETER firewall_rule_category
        To affect Network Quarantine use network-quarantine

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER actions
        Return firewall rules with the filtered action.

        Allowed values:
        'Allow', 'Block'

    .PARAMETER application__contains
        Free-text filter by application

    .PARAMETER applications
        Return firewall rules with the filtered firewall class.

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER createdAt__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER createdAt__gt
        Returns firewall rules created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns firewall rules created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns firewall rules created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns firewall rules created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER directions
        Return firewall rules with the filtered action.

        Allowed values:
        'any', 'inbound', 'outbound'

    .PARAMETER disablePagination
        If true, all rules for requested scope will be returned

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ids
        List of ids to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER locationIds
        Filter by associated locations.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER name
        Return firewall rules with the filtered name.

    .PARAMETER name__contains
        Free-text filter by the Rule name

    .PARAMETER osTypes
        Return firewall rules with the filtered os_type.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER protocol__contains
        Free-text filter by protocol

    .PARAMETER protocols
        Return firewall rules with the filtered protocols.

    .PARAMETER query
        Free text search on name, tag, application, protocol

    .PARAMETER scopes
        Return firewall rules with the filtered os_type.

        Allowed values:
        'account', 'global', 'group', 'site'

    .PARAMETER service__contains
        Free-text filter by service

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'action', 'id', 'name', 'order', 'status'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER statuses
        Return firewall rules with the filtered status.

        Allowed values:
        'Disabled', 'Enabled'

    .PARAMETER tagIds
        Filter by associated tags.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER tagName__contains
        Free-text filter by the Tag name

    .PARAMETER tenant
        Indicates a tenant scope request

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Get-SentinelOneFirewallCategoryRules -firewall_rule_category firewall

        Gets Firewall Control category rules using the defined value from a global scope

    .EXAMPLE
        Get-SentinelOneFirewallCategoryRules -firewall_rule_category firewall -createdAt__gte '2022-02-27'

        Inputted data is converted to UTC time

        Returns Firewall Control category rules created after or at this timestamp.

    .EXAMPLE
        Get-SentinelOneFirewallCategoryRules -firewall_rule_category firewall -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/NetworkQuarantineControl/Get-SentinelOneFirewallCategoryRules.html
#>

[CmdletBinding( DefaultParameterSetName = 'index' )]
Param (
    [Parameter( Mandatory = $true, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$firewall_rule_category,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64[]]$accountIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'Allow', 'Block' )]
    [String[]]$actions,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$application__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$applications,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$countOnly,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$createdAt__between,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$createdAt__gt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$createdAt__gte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$createdAt__lt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$createdAt__lte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$cursor,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'any', 'inbound', 'outbound' )]
    [String[]]$directions,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$disablePagination,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [Int64[]]$groupIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [Int64[]]$ids,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$locationIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$name,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$name__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'linux', 'macos', 'windows', 'windows_legacy' )]
    [String[]]$osTypes,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$protocol__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$protocols,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$query,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'account', 'global', 'group', 'site' )]
    [String[]]$scopes,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$service__contains,

    [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [Int64[]]$siteIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, 1000)]
    [Int64]$skip,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$skipCount,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'action', 'id', 'name', 'order', 'status' )]
    [String]$sortBy,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'asc', 'desc' )]
    [String]$sortOrder,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'Disabled', 'Enabled' )]
    [String[]]$statuses,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$tagIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$tagName__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$tenant

)

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/firewall-control/$firewall_rule_category"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable','firewall_rule_category'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                $body += @{ $Key.Key = $universalTime }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneFirewallCategoryProtocols {
<#
    .SYNOPSIS
        Get a list of protocols that can be used in Firewall Control rules.

    .DESCRIPTION
        The Get-SentinelOneFirewallCategoryProtocols cmdlet gets a list of protocols
        that can be used in Firewall Control rules.

    .PARAMETER firewall_rule_category
        To affect Network Quarantine use network-quarantine

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER disablePagination
        If true, all rules for requested scope will be returned

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER query
        Full text search on protocols

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'name'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .EXAMPLE
        Get-SentinelOneFirewallCategoryProtocols -firewall_rule_category firewall

        Gets first 10 Firewall Control category rules using the defined value from a global scope

    .EXAMPLE
        firewall | Get-SentinelOneFirewallCategoryProtocols

        Gets first 10 Firewall Control category rules using the defined value from a global scope

    .EXAMPLE
        Get-SentinelOneFirewallCategoryProtocols -firewall_rule_category firewall -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/NetworkQuarantineControl/Get-SentinelOneFirewallCategoryProtocols.html
#>

[CmdletBinding( DefaultParameterSetName = 'index' )]
Param (
    [Parameter( Mandatory = $true, ValueFromPipeline = $true, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$firewall_rule_category,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$countOnly,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$cursor,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$disablePagination,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, 1000)]
    [Int64]$limit,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$query,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, 1000)]
    [Int64]$skip,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$skipCount,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'name' )]
    [String]$sortBy,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'asc', 'desc' )]
    [String]$sortOrder

)

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/firewall-control/$firewall_rule_category/protocols"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable','firewall_rule_category'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\networkQuarantineControl\NetworkQuarantineControl-GET.ps1' 1096
#Region '.\Public\policies\Policies-GET.ps1' 0
function Get-SentinelOnePolicies {
<#
    .SYNOPSIS
        Get the policies for defined scopes

    .DESCRIPTION
        The Get-SentinelOnePolicies cmdlet gets the policies for defined scopes

        Scopes:
        Global, Account, Site, Group

    .PARAMETER account_id
        Account ID. You can get the ID from the Get accounts command.

        Example: "225494730938493804".

    .PARAMETER globalPolicy
        Get the Global policy

        Returned by default

    .PARAMETER group_id
        Group ID.

        Example: "225494730938493804".

    .PARAMETER site_id
        Site ID.

        Example: "225494730938493804".

    .EXAMPLE
        Get-SentinelOnePolicies

        Returns the Global policy

    .EXAMPLE
        Get-SentinelOnePolicies -siteId 225494730938493804

        Returns the policy of the Site given by ID

    .EXAMPLE
        225494730938493804 | Get-SentinelOnePolicies

        Returns the policy of the Site given by ID

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Policies/Get-SentinelOnePolicies.html

#>

    [CmdletBinding( DefaultParameterSetName = 'indexByGlobal' )]
    Param (
        [Parameter( Mandatory = $true, ParameterSetName = 'indexByAccount' )]
        [ValidateNotNullOrEmpty()]
        [String]$account_id,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByGlobal' )]
        [Switch]$globalPolicy,

        [Parameter( Mandatory = $true, ParameterSetName = 'indexByGroup' )]
        [ValidateNotNullOrEmpty()]
        [String]$group_id,

        [Parameter( Mandatory = $true, ValueFromPipeline = $true, ParameterSetName = 'indexBySite' )]
        [ValidateNotNullOrEmpty()]
        [String]$site_id

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'indexByGlobal'     {$resource_uri = "/tenant/policy"}
            'indexByAccount'    {$resource_uri = "/accounts/$account_id/policy"}
            'indexBySite'       {$resource_uri = "/sites/$site_id/policy"}
            'indexByGroup'      {$resource_uri = "/groups/$group_id/policy"}
        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\policies\Policies-GET.ps1' 103
#Region '.\Public\RangerDeploys-GET.ps1' 0
function Get-SentinelOneRangerDeployCredGroups {
<#
    .SYNOPSIS
        Get the data for each row in the Cred Groups table.

    .DESCRIPTION
        The Get-SentinelOneRangerDeployCredGroups cmdlet gets the data for each row in the Cred Groups table.

        By default the "/ranger/cred-groups" endpoint is referenced

        Can reference both the "/ranger/cred-groups" & "/ranger/cred-groups/details" endpoints
        depending on the parameters chosen.

        Though note that the "SortBy" parameter contains values from both endpoints.
        If you select the wrong value when referencing an endpoint the function will fail as
        the SentinelOne endpoint wont support that value.

    .PARAMETER accountIds
        Single Account ID to filter by.

        Example: "225494730938493804".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER credGroupIds
        A list of ids to get

    .PARAMETER credTypeLike
        The type of the cred group

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER groupName
        Group name being searched

    .PARAMETER groupNameLike
        Group name being searched

    .PARAMETER ids
        A list of ids to get

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values: (without Details)
        'createdAt', 'domain', 'groupName', 'targetOs', 'updatedAt'

        Allowed values: (with Details)
        'createdAt', 'credType', 'title', 'type', 'updatedAt'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER targetOs
        The os type for this cred group.

        Allowed values:
        'osx_linux', 'windows'

    .PARAMETER title
        Exact filter by title

    .PARAMETER titleLike
        Like filter by title

    .PARAMETER totalDetails__gt
        Get creds with total details greater than the supplied number

    .EXAMPLE
        Get-SentinelOneRangerDeployCredGroups -groupNameLike test

        Returns the data for each row in the Cred Groups table.

        This references the "/ranger/cred-groups" endpoint

    .EXAMPLE
        Get-SentinelOneRangerDeployCredGroups -credTypeLike test

        Returns the data for each row in the Cred Groups table.

        This references the "/ranger/cred-groups/details" endpoint

    .EXAMPLE
        Get-SentinelOneRangerDeployCredGroups -countOnly

        Returns the number of groups without any data that match a filter.

    .EXAMPLE
        Get-SentinelOneRangerDeployCredGroups -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        This references the "/ranger/cred-groups" endpoint

        The cursor value can be found under pagination

    .NOTES
        As of 2022-11
            Cannot fully validate due to permissions and licensing
            Maybe add dynamic parameters for sortBy to adjust for group details

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/RangerDeploy/Get-SentinelOneRangerDeployCredGroups.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDetails' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDetails' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDetails' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$credGroupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDetails' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$credTypeLike,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDetails' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$groupName,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$groupNameLike,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDetails' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDetails' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'indexByDetails' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDetails' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDetails' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDetails' )]
        [ValidateSet( 'createdAt', 'credType', 'domain', 'groupName', 'targetOs', 'title', 'type', 'updatedAt' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDetails' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'osx_linux', 'windows' )]
        [String]$targetOs,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDetails' )]
        [ValidateNotNullOrEmpty()]
        [String]$title,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDetails' )]
        [ValidateNotNullOrEmpty()]
        [String]$titleLike,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalDetails__gt

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'             {$resource_uri = "/ranger/cred-groups"}
            'indexByDetails'    {$resource_uri = "/ranger/cred-groups/details"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }
        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\RangerDeploys-GET.ps1' 267
#Region '.\Public\RangerSelfEnablements-GET.ps1' 0
function Get-SentinelOneRangerEnablementDefaults {
<#
    .SYNOPSIS
        Get the self-enablement feature settings for Sites

    .DESCRIPTION
        The Get-SentinelOneRangerEnablementDefaults cmdlet gets the self-enablement features
        (Ranger and Rogues) settings for Sites that will be created in your Account.

        Note: Currently, this feature is available only for MSSPs and distributors.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .EXAMPLE
        Get-SentinelOneRangerEnablementDefaults -accountIds 225494730938493804

        Returns the self-enablement feature settings for Sites that will be created
        in the defined account

    .EXAMPLE
        225494730938493804 | Get-SentinelOneRangerEnablementDefaults

        Returns the self-enablement feature settings for Sites that will be created
        in the defined account

    .NOTES
        As of 2022-11
            Cannot fully validate due to permissions and licensing

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/RangerSelfEnablement/Get-SentinelOneRangerEnablementDefaults.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/ranger/enablement/defaults"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneRangerEnablements {
<#
    .SYNOPSIS
        Get data about Accounts and Sites with self-enablement features enabled.

    .DESCRIPTION
        The Get-SentinelOneRangerEnablements cmdlet get data about Accounts and Sites with
        self-enablement features (Ranger and Rogues) enabled.

        Returns a lot of data so filters are highly encouraged

        Note: Currently, this feature is available only for MSSPs and distributors.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER activeAgents
        The number of non-decommissioned agents in the site

    .PARAMETER activeAgents__between
        Agent count (between).

        Example: "2-8".

    .PARAMETER activeAgents__gt
        Agent count (more than)

    .PARAMETER activeAgents__gte
        Agent count (more than or equal)

    .PARAMETER activeAgents__lt
        Agent count (less than)

    .PARAMETER activeAgents__lte
        Agent count (less than or equal)

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER id
        The enablement id.

        Example: "225494730938493804".

    .PARAMETER ids
        A list of ids to get.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER rangerEnabled
        Ranger Enabled true/false

    .PARAMETER roguesEnabled
        Rogues Enabled true/false

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER siteName
        The site name

    .PARAMETER siteName__contains
        Free-text filter by site name (supports multiple values)

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'activeAgents', 'rangerEnabled', 'rangerProEnabled', 'rougesEnabled', 'siteName'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER tenant
        Indicates a tenant scope request

    .EXAMPLE
        Get-SentinelOneRangerEnablements

        Get data about Accounts and Sites with self-enablement features enabled.

    .EXAMPLE
        Get-SentinelOneRangerEnablements -countOnly

        Returns the total number of results without any data.

    .EXAMPLE
        Get-SentinelOneRangerEnablements -siteIds 225494730938493804

        Get data from the defined Sites with self-enablement features enabled.

    .EXAMPLE
        225494730938493804 | Get-SentinelOneRangerEnablements

        Get data from the defined Sites with self-enablement features enabled.

    .EXAMPLE
        Get-SentinelOneRangerEnablements -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        As of 2022-11
            Cannot fully validate due to permissions and licensing

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/RangerSelfEnablement/Get-SentinelOneRangerEnablementDefaults.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$activeAgents,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$activeAgents__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$activeAgents__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$activeAgents__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$activeAgents__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$activeAgents__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$id,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$rangerEnabled,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$roguesEnabled,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$siteName,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'activeAgents', 'rangerEnabled', 'rangerProEnabled', 'rougesEnabled', 'siteName' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$tenant

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/ranger/enablement"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\RangerSelfEnablements-GET.ps1' 372
#Region '.\Public\Rangers-GET.ps1' 0
function Export-SentinelOneRangers {
<#
    .SYNOPSIS
        Exports Ranger data to a csv or json file

    .DESCRIPTION
        The Export-SentinelOneRangers cmdlet exports Ranger data to a csv or json file

        Output can contain a lot of information so filters are highly encouraged.

            Using the "inventory_id" parameter will export data for one ranger device
            in json format.

        Ranger requires a Ranger license.

    .PARAMETER accountIds
        Single Account ID to filter by.

        Example: "225494730938493804".

    .PARAMETER agentIds
        List of agent ids.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER deviceFunction__contains
        Free-text filter by device function

        Example: "security,mobile".

    .PARAMETER deviceReviews
        The device review state

    .PARAMETER deviceType
        Device type.

        Example: "Server/Workstation/...".

    .PARAMETER deviceTypes
        Device types.

        Example: "Server/Workstation/...".

    .PARAMETER discoveryMethods
        Discovery methods

    .PARAMETER domains
        Included network domains.

        Example: "mybusiness,workgroup".

    .PARAMETER externalIp
        Search external ip using a CIDR expression or exact IP

    .PARAMETER externalIp__contains
        Free-text filter by visible IP

        Example: "192.168.0.1/24,10.1".

    .PARAMETER firstSeen__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER firstSeen__gt
        Returns rangers created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER firstSeen__gte
        Returns rangers created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER firstSeen__lt
        Returns rangers created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER firstSeen__lte
        Returns rangers created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER gatewayMacAddress
        A gateway mac address to search for

    .PARAMETER gatewayMacAddress__contains
        Free-text filter by gateway mac address

        Example: "aa:ee:b1".

    .PARAMETER hostnames
        Hostnames

    .PARAMETER hostnames__contains
        Free-text filter by hostname

        Example: "s1_host,SomeHost".

    .PARAMETER ids
        List of device ids.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER inventory_id
        Inventory ID.

        Example: "225494730938493804".

    .PARAMETER knownFingerprintingData
        Known fingerprinting data.

        Allowed values:
        'Hostname', 'MAC Address', 'Manufacturer', 'OS Version'

    .PARAMETER lastSeen__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER lastSeen__gt
        Returns rangers lastSeen after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastSeen__gte
        Returns rangers lastSeen after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastSeen__lt
        Returns rangers lastSeen before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastSeen__lte
        Returns rangers lastSeen before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER localIp
        Search using local IP

    .PARAMETER localIp__contains
        Free-text filter by IP Address

        Example: "192.168.0.1/24,10.1".

    .PARAMETER macAddress
        A mac address to search for

    .PARAMETER macAddress__contains
        Free-text filter by mac address.

        Example: "aa:ee:b1".

    .PARAMETER managedState
        Is the device managed

    .PARAMETER managedStates
        Is the device managed

    .PARAMETER manufacturer
        Manufacturer of the device or network interface

    .PARAMETER manufacturer__contains
        Free-text filter by manufacturer

        Example: "Company".

    .PARAMETER networkName
        Search using network name

    .PARAMETER networkName__contains
        Free-text filter by network name

        Example: "Office".

    .PARAMETER osName
        Os name

    .PARAMETER osType
        OS type

    .PARAMETER osTypes
        Included OS types

    .PARAMETER osVersion
        Os version

    .PARAMETER osVersion__contains
        Free-text filter by OS full name and version

        Example: "Service Pack 1".

    .PARAMETER period
        Period.

        Allowed values:
        'last12h', 'last24h', 'last3d', 'last7d', 'latest'

    .PARAMETER query
        Free text query

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER siteNames
        Included site names.

        Example: "Office,Test".

    .PARAMETER subnetAddress__contains
        Free-text filter by Subnet Address

        Example: "192.168.0.1/24,10.1".

    .PARAMETER tagName__contains
        Free-text filter by tag name

        Example: "iot".

    .PARAMETER tcpPorts__contains
        Free-text filter by tcp port

        Example: "80,24".

    .PARAMETER udpPorts__contains
        Free-text filter by udp port

        Example: "137,2002".

    .PARAMETER fileName
        Name of the file

        Example: 'MySites-2022'

        The default name format is 'rangers-yyyy-MM-dd_HHmmss'

    .PARAMETER filePath
        The location to save the file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Export-SentinelOneRangers

        Returns ranger data to a csv file in the current directory

        fileName:
            rangers-2022-10-29_105845.csv

    .EXAMPLE
        Export-SentinelOneRangers -inventory_id 225494730938493804

        Returns a single rangers data to a json file in the current directory

        fileName:
            rangers-2022-10-29_105845.json

    .EXAMPLE
        Export-SentinelOneRangers -firstSeen__gt '2018-02-27 14:32'

        Returns rangers first seen after defined dataTime and outputs the data to a csv
        in the current working directory.

        DataTime values are converted to UTC, use -verbose to see the value it is converted to.

        fileName:
            rangers-2022-10-29_105845.csv

    .EXAMPLE
        Export-SentinelOneRangers -siteIds 1234567890 -fileName MyCustomFile -filePath C:\Logs -showReport

        Returns rangers from the defined siteIds, saves the CSV file in the defined directory
        with the defined named, and opens the location to were the file is saved.

        fileName:
            MyCustomFile.csv

    .NOTES
        As of 2022-11
            Cannot fully validate due to permissions and licensing

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Ranger/Export-SentinelOneRangers.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$deviceFunction__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$deviceReviews,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$deviceType,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$deviceTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$discoveryMethods,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$domains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$externalIp,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$externalIp__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$firstSeen__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$firstSeen__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$firstSeen__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$firstSeen__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$firstSeen__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$gatewayMacAddress,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$gatewayMacAddress__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$hostnames,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$hostnames__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $true, ParameterSetName = 'indexByJson' )]
        [ValidateNotNullOrEmpty()]
        [String]$inventory_id,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Hostname', 'MAC Address', 'Manufacturer', 'OS Version' )]
        [String[]]$knownFingerprintingData,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$lastSeen__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$lastSeen__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$lastSeen__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$lastSeen__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$lastSeen__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$localIp,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$localIp__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$macAddress,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$macAddress__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$managedState,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$managedStates,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$manufacturer,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$manufacturer__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$networkName,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$networkName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$osName,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$osType,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$osTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$osVersion,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$osVersion__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'last12h', 'last24h', 'last3d', 'last7d', 'latest' )]
        [String]$period,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$siteNames,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$subnetAddress__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$tagName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$tcpPorts__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$udpPorts__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByJson' )]
        [String]$fileName = "rangers-$( Get-date -Format 'yyyy-MM-dd_HHmmss' )",

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByJson' )]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByJson' )]
        [Switch]$showReport

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/ranger/report/csv"}
            'indexByJson'   {$resource_uri = "/ranger/$inventory_id/json/export"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'fileName','filePath','showReport', 'inventory_id'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                    Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                    Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                    $body += @{ $Key.Key = $universalTime }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {

            Switch ([bool]$inventory_id){
                $false  { $fileOutput = "$filePath\$filename.csv" }
                $true   { $fileOutput = "$filePath\$filename.json" }
            }

            if ( (Test-Path -Path $filePath -PathType Container) -eq $false ){
                New-Item -Path $filePath -ItemType Directory > $null
            }

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -OutFile $fileOutput `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $fileOutput -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}



function Get-SentinelOneRangerSettings {
<#
    .SYNOPSIS
        Gets ranger visibility settings

    .DESCRIPTION
        The Get-SentinelOneRangerSettings cmdlet gets ranger visibility settings

    .PARAMETER accountId
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .EXAMPLE
        Get-SentinelOneRangerSettings -accountId 1234567890

        Returns ranger settings for the defined accountId

    .EXAMPLE
        Get-SentinelOneRangerSettings -siteIds 1234567890,27348952792

        Returns ranger settings for the defined siteId

    .EXAMPLE
        1234567890 | Get-SentinelOneRangerSettings

        Returns ranger settings for the defined siteId

    .NOTES
        As of 2022-11
            Cannot fully validate due to permissions and licensing

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Ranger/Get-SentinelOneRangerSettings.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountId,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds

    )

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/ranger/settings"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ( $PSCmdlet.ParameterSetName -eq 'index' ) {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneRangerTables {
<#
    .SYNOPSIS
        Get the data for each row in the Ranger Device Inventory Table.

    .DESCRIPTION
        The Get-SentinelOneRangerTables cmdlet gets the data for each row in the
        Ranger Device Inventory Table.

    .PARAMETER accountIds
        Single Account ID to filter by.

        Example: "225494730938493804".

    .PARAMETER agentIds
        List of agent ids.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER deviceFunction__contains
        Free-text filter by device function

        Example: "security,mobile".

    .PARAMETER deviceReviews
        The device review state

    .PARAMETER deviceType
        Device type.

        Example: "Server/Workstation/...".

    .PARAMETER deviceTypes
        Device types.

        Example: "Server/Workstation/...".

    .PARAMETER discoveryMethods
        Discovery methods

    .PARAMETER domains
        Included network domains.

        Example: "mybusiness,workgroup".

    .PARAMETER externalIp
        Search external ip using a CIDR expression or exact IP

    .PARAMETER externalIp__contains
        Free-text filter by visible IP

        Example: "192.168.0.1/24,10.1".

    .PARAMETER firstSeen__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER firstSeen__gt
        Returns rangers created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER firstSeen__gte
        Returns rangers created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER firstSeen__lt
        Returns rangers created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER firstSeen__lte
        Returns rangers created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER gatewayMacAddress
        A gateway mac address to search for

    .PARAMETER gatewayMacAddress__contains
        Free-text filter by gateway mac address

        Example: "aa:ee:b1".

    .PARAMETER hostnames
        Hostnames

    .PARAMETER hostnames__contains
        Free-text filter by hostname

        Example: "s1_host,SomeHost".

    .PARAMETER ids
        List of device ids.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER knownFingerprintingData
        Known fingerprinting data.

        Allowed values:
        'Hostname', 'MAC Address', 'Manufacturer', 'OS Version'

    .PARAMETER lastSeen__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER lastSeen__gt
        Returns rangers lastSeen after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastSeen__gte
        Returns rangers lastSeen after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastSeen__lt
        Returns rangers lastSeen before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastSeen__lte
        Returns rangers lastSeen before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER localIp
        Search using local IP

    .PARAMETER localIp__contains
        Free-text filter by IP Address

        Example: "192.168.0.1/24,10.1".

    .PARAMETER macAddress
        A mac address to search for

    .PARAMETER macAddress__contains
        Free-text filter by mac address.

        Example: "aa:ee:b1".

    .PARAMETER managedState
        Is the device managed

    .PARAMETER managedStates
        Is the device managed

    .PARAMETER manufacturer
        Manufacturer of the device or network interface

    .PARAMETER manufacturer__contains
        Free-text filter by manufacturer

        Example: "Company".

    .PARAMETER networkName
        Search using network name

    .PARAMETER networkName__contains
        Free-text filter by network name

        Example: "Office".

    .PARAMETER osName
        Os name

    .PARAMETER osType
        OS type

    .PARAMETER osTypes
        Included OS types

    .PARAMETER osVersion
        Os version

    .PARAMETER osVersion__contains
        Free-text filter by OS full name and version

        Example: "Service Pack 1".

    .PARAMETER period
        Period.

        Allowed values:
        'last12h', 'last24h', 'last3d', 'last7d', 'latest'

    .PARAMETER query
        Free text query

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER siteNames
        Included site names.

        Example: "Office,Test".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'archived', 'deviceReview', 'deviceType', 'domain', 'externalIp', 'firstSeen', 'gatewayMacAddress',
        'hasUserLabel', 'id', 'lastSeen', 'localIp', 'macAddress', 'managedState', 'manufacturer', 'networkName',
        'osName', 'osType', 'osVersion', 'subnetAddress'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER subnetAddress__contains
        Free-text filter by Subnet Address

        Example: "192.168.0.1/24,10.1".

    .PARAMETER tagName__contains
        Free-text filter by tag name

        Example: "iot".

    .PARAMETER tcpPorts__contains
        Free-text filter by tcp port

        Example: "80,24".

    .PARAMETER udpPorts__contains
        Free-text filter by udp port

        Example: "137,2002".

    .EXAMPLE
        Get-SentinelOneRangerTables

        Returns the data for each row in the Ranger Device Inventory Table from a global scope

    .EXAMPLE
        Get-SentinelOneRangerTables -siteIds 225494730938493804

        Returns the data for each row in the Ranger Device Inventory Table from the defined site

    .EXAMPLE
        225494730938493804 | Get-SentinelOneRangerTables

        Returns the data for each row in the Ranger Device Inventory Table from the defined site

    .EXAMPLE
        Get-SentinelOneRangerTables -firstSeen__gt '2018-02-27 14:32' -siteIds 225494730938493804

        Returns rangers first seen after defined dataTime from the defined site

        DataTime values are converted to UTC, use -verbose to see the value it is converted to.

    .EXAMPLE
        Get-SentinelOneRangerTables -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        As of 2022-11
            Cannot fully validate due to permissions and licensing

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Ranger/Get-SentinelOneRangerTables.html

#>

[CmdletBinding( DefaultParameterSetName = 'index' )]
Param (
    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64[]]$accountIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$agentIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$countOnly,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$cursor,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$deviceFunction__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$deviceReviews,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$deviceType,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$deviceTypes,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$discoveryMethods,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$domains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$externalIp,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$externalIp__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$firstSeen__between,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$firstSeen__gt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$firstSeen__gte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$firstSeen__lt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$firstSeen__lte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$gatewayMacAddress,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$gatewayMacAddress__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$hostnames,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$hostnames__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [Int64[]]$ids,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'Hostname', 'MAC Address', 'Manufacturer', 'OS Version' )]
    [String[]]$knownFingerprintingData,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$lastSeen__between,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$lastSeen__gt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$lastSeen__gte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$lastSeen__lt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$lastSeen__lte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, 1000)]
    [Int64]$limit,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$localIp,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$localIp__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$macAddress,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$macAddress__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$managedState,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$managedStates,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$manufacturer,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$manufacturer__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$networkName,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$networkName__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$osName,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$osType,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$osTypes,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$osVersion,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$osVersion__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'last12h', 'last24h', 'last3d', 'last7d', 'latest' )]
    [String]$period,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$query,

    [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [Int64[]]$siteIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$siteNames,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, 1000)]
    [Int64]$skip,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$skipCount,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet(   'archived', 'deviceReview', 'deviceType', 'domain', 'externalIp', 'firstSeen',
                    'gatewayMacAddress', 'hasUserLabel', 'id', 'lastSeen', 'localIp', 'macAddress',
                    'managedState', 'manufacturer', 'networkName','osName', 'osType', 'osVersion',
                    'subnetAddress'
                )]
    [String]$sortBy,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'asc', 'desc' )]
    [String]$sortOrder,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$subnetAddress__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$tagName__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$tcpPorts__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$udpPorts__contains

)

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/ranger/table-view"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                    Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                    Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                    $body += @{ $Key.Key = $universalTime }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneRangers {
<#
    .SYNOPSIS
        Get a json string with the Ranger data for one device

    .DESCRIPTION
        The Get-SentinelOneRangers cmdlet gets a json string with the Ranger data for one device
        by ID in the Device Inventory Data.

    .PARAMETER inventory_id
        Inventory ID.

        Example: "225494730938493804".

    .EXAMPLE
        Get-SentinelOneRangers -inventory_id 123456789

        Returns a json string with the Ranger data for the defined device

    .EXAMPLE
        123456789 | Get-SentinelOneRangers

        Returns a json string with the Ranger data for the defined device

    .NOTES
        As of 2022-11
            Cannot fully validate due to permissions and licensing

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Ranger/Get-SentinelOneRangers.html

#>

[CmdletBinding( DefaultParameterSetName = 'index' )]
Param (
    [Parameter( Mandatory = $true, ValueFromPipeline = $true, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$inventory_id

)

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/ranger/$inventory_id/json"}
        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\Rangers-GET.ps1' 1417
#Region '.\Public\rbac\RBAC-GET.ps1' 0
function Get-SentinelOneRBACRoles {
<#
    .SYNOPSIS
        Gets roles assigned to users that match the filter or the role definition

    .DESCRIPTION
        The Get-SentinelOneRBACRoles cmdlet gets roles assigned to users that match the filter or the role definition,
        a basic description of the roles, and the number of users for each role.

        Using the [ -role_id ] parameter calls the "/rbac/role/{role_id}" endpoint instead of the
        "/rbac/roles" endpoint. This endpoint shows more detailed information about the RBAC role
        such as permissions.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER accountName
        Name of the account that contains the role

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER created_by_id
        Id of the creating user.

        Example: "225494730938493804".

    .PARAMETER created_by_name
        Email of the creating user

    .PARAMETER createdAt
        Created at.

        This needs to be an exact UTC value

        Example: "2018-02-27T04:49:26.257525Z".

    .PARAMETER createdAt__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER createdAt__gt
        Returns RBAC roles created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns RBAC roles created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns RBAC roles created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns RBAC roles created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER description
        Description

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ids
        List of ids to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER includeChildren
        Include child scopes roles

    .PARAMETER includeParents
        Include parent scopes roles

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER name
        Return RBAC role matching the name

    .PARAMETER query
        Free text search on role name, and description

    .PARAMETER role_id
        Role ID.

        This calls the "/rbac/role/{role_id}" endpoint which shows more
        detailed information about the RBAC role such as permissions.

        Example: "225494730938493804".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER siteName
        Name of the site that contains the role

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'accountName', 'createdAt', 'creator', 'description', 'id', 'name', 'siteName',
        'updatedAt', 'updatedBy', 'usersInRoles'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER tenant
        Indicates a tenant scope request

    .PARAMETER updatedAt
        updated at.

        This needs to be an exact UTC value

        Example: "2018-02-27T04:49:26.257525Z".

    .PARAMETER updatedAt__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER updatedAt__gt
        Returns RBAC roles updated after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__gte
        Returns RBAC roles updated after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lt
        Returns RBAC roles updated before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lte
        Returns RBAC roles updated before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedBy
        Email of the creating user

    .PARAMETER updatedById
        Id of the creating user.

        Example: "225494730938493804".

    .PARAMETER usersInRoles
        How many users use this role

    .EXAMPLE
        Get-SentinelOneRBACRoles

        Returns the first 10 RBAC roles from a global scope

    .EXAMPLE
        Get-SentinelOneRBACRoles -countOnly

        Returns the total number of RBAC roles without any data from a global scope.

    .EXAMPLE
        Get-SentinelOneRBACRoles -siteIds 225494730938493804

        Returns the first 10 RBAC roles for the defined scope

    .EXAMPLE
        225494730938493804 | Get-SentinelOneRBACRoles

        Returns the first 10 RBAC roles for the defined scope

    .EXAMPLE
        Get-SentinelOneRBACRoles -role_id 225494730938493804

        Returns the defined RBAC role which allows for more detailed information
        such as role permissions.

        This calls the "/rbac/role/{role_id}" endpoint instead of the "/rbac/roles" endpoint

    .EXAMPLE
        Get-SentinelOneRBACRoles -createdAt__gt '2018-02-27 14:32'

        Returns RBAC roles that were created after the defined dataTime

        DataTime values are converted to UTC, use -verbose to see the value it is converted to.

    .EXAMPLE
        Get-SentinelOneRBACRoles -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        As of 2022-11
            The "usersInRoles" parameter does not appear to function (500 error)

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/RBAC/Get-SentinelOneRBACRoles.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByRole' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$accountName,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$created_by_id,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$created_by_name,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$createdAt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByRole' )]
        [ValidateNotNullOrEmpty()]
        [String]$createdAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByRole' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByRole' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByRole' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByRole' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$description,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByRole' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$includeChildren,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$includeParents,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByRole' )]
        [ValidateNotNullOrEmpty()]
        [String]$name,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByRole' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $true, ParameterSetName = 'indexByRole' )]
        [ValidateNotNullOrEmpty()]
        [String]$role_id,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'indexByRole' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$siteName,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'accountName', 'createdAt', 'creator', 'description', 'id', 'name',
                        'siteName', 'updatedAt', 'updatedBy', 'usersInRoles'
                    )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByRole' )]
        [Switch]$tenant,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$updatedAt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByRole' )]
        [ValidateNotNullOrEmpty()]
        [String]$updatedAt__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByRole' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByRole' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByRole' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByRole' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$updatedBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$updatedById,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$usersInRoles

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/rbac/roles"}
            'indexByRole'   {$resource_uri = "/rbac/role/$role_id"}
        }

        if ([bool]$role_id){
            Write-Verbose "Using [ /rbac/role/{role_id} ] instead of [ /rbac/roles ] uri."
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable','role_id'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                $body += @{ $Key.Key = $universalTime }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneRBACRoleTemplate {
<#
    .SYNOPSIS
        Gets the template for a new role.

    .DESCRIPTION
        The Get-SentinelOneRBACRoleTemplate cmdlet gets the template for a new role.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER tenant
        Indicates a tenant scope request

    .EXAMPLE
        Get-SentinelOneRBACRoleTemplate

        Returns the template for a new role from a global scope

    .EXAMPLE
        Get-SentinelOneRBACRoleTemplate -siteIds 225494730938493804

        Returns the template for a new role from the defined scope

    .EXAMPLE
        225494730938493804 | Get-SentinelOneRBACRoleTemplate

        Returns the template for a new role from the defined scope

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/RBAC/Get-SentinelOneRBACRoleTemplate.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$tenant

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/rbac/role"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\rbac\RBAC-GET.ps1' 604
#Region '.\Public\RemoteScriptOrchestration-GET.ps1' 0
function Get-SentinelOneRemoteScripts {
<#
    .SYNOPSIS
        Gets data of the scripts in the SentinelOne Script Library.

    .DESCRIPTION
        The Get-SentinelOneRemoteScripts cmdlet gets data of the scripts in the
        SentinelOne Script Library.

        The SentinelOne Script Library, used for the Remote Script Orchestration feature,
        gives you a wide range of scripts to collect various forensic artifacts,
        parse them, and show them in formats that are easy to analyze.

        Use the scripts to collect information such as hardware and software inventory
        and configuration, running applications and processes, files and directories,
        network connections, and more.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ids
        A list of script IDs.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER osTypes
        List of the script OS types.

        Allowed values:
        'linux', 'macos', 'windows'

    .PARAMETER query
        A free-text search term, will match applicable attributes (sub-String match).

        Note: Device's physical addresses will be matched if they start with the search term only (no match if they contain the term).

        Example: "Linux".

    .PARAMETER scriptType
        List of the script types.

        Allowed values:
        'action', 'artifactCollection', 'dataCollection'

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'createdAt', 'createdByUserId', 'id', 'inputExample', 'inputInstructions', 'mgmtId', 'osTypes',
        'scopeId', 'scopeLevel', 'scopePath', 'scriptName', 'scriptType', 'version'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .EXAMPLE
        Get-SentinelOneRemoteScripts

        Returns data of the scripts in the SentinelOne Script Library.

    .EXAMPLE
        Get-SentinelOneRemoteScripts -countOnly

        Returns the total amount of scripts data without any data.

    .EXAMPLE
        Get-SentinelOneRemoteScripts -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        As of 2022-11
            Cannot fully validate due to permissions and licensing

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/RemoteScriptOrchestration/Get-SentinelOneRemoteScripts.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'linux', 'macos', 'windows' )]
        [String[]]$osTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'action', 'artifactCollection', 'dataCollection' )]
        [String[]]$scriptType,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'createdAt', 'createdByUserId', 'id', 'inputExample', 'inputInstructions',
                        'mgmtId', 'osTypes', 'scopeId', 'scopeLevel', 'scopePath', 'scriptName',
                        'scriptType', 'version'
                    )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/remote-scripts"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                $body += @{ $Key.Key = $universalTime }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneRemoteScriptStatus {
<#
    .SYNOPSIS
        Gets remote scripts tasks using a variety of filters

    .DESCRIPTION
        The Get-SentinelOneRemoteScriptStatus cmdlet gets remote scripts tasks using a variety of filters.

        Accessible via API only
        parent_task_id or parent_task_id__in query parameter is mandatory

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER computerName__contains
        Free-text filter by agent computer name (supports multiple values)

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER createdAt__gt
        Returns scripts created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns scripts created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns scripts created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns scripts created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER description__contains
        Only include tasks with specific description

    .PARAMETER detailedStatus__contains
        Only include tasks with specific detailed status

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ids
        A list of script IDs.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER initiatedBy__contains
        Only include tasks from specific initiating user

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER parentTaskId
        Parent task id

    .PARAMETER parentTaskId__in
        List of IDs to filter by

    .PARAMETER query
        A free-text search term, will match applicable attributes (sub-String match).

        Note: Device's physical addresses will be matched if they start with the search term only (no match if they contain the term).

        Example: "Linux".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'accountName', 'agentComputerName', 'createdAt', 'description', 'detailedStatus', 'groupName',
        'id', 'initiatedBy', 'parentTaskId', 'siteName', 'status', 'updatedAt'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER status
        Status in

        Allowed values:
        'canceled', 'completed', 'created', 'expired', 'failed', 'in_progress', 'partially_completed',
        'pending', 'scheduled'

    .PARAMETER tenant
        Indicates a tenant scope request

    .PARAMETER type
        Type

    .PARAMETER types
        Type in

    .PARAMETER updatedAt__gt
        Returns scripts updated after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__gte
        Returns scripts updated after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lt
        Returns scripts updated before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lte
        Returns scripts updated before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER uuid__contains
        Free-text filter by agent UUID (supports multiple values)

    .EXAMPLE
        Get-SentinelOneRemoteScriptStatus -parentTaskId 12345

        Returns remote scripts tasks from the defined id

    .EXAMPLE
        Get-SentinelOneRemoteScriptStatus -parentTaskId__in 12345,12345

        Returns remote scripts tasks from the defined ids

    .EXAMPLE
        Get-SentinelOneRemoteScriptStatus -parentTaskId 12345 -countOnly

        Returns the total amount of remote scripts tasks without any data.

    .EXAMPLE
        Get-SentinelOneRemoteScriptStatus -parentTaskId 12345 -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        As of 2022-11
            Cannot fully validate due to permissions and licensing

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/RemoteScriptOrchestration/Get-SentinelOneRemoteScriptStatus.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$computerName__contains,

        [Parameter( Mandatory = $false)]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gte,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lte,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$description__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$detailedStatus__contains,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$initiatedBy__contains,

        [Parameter( Mandatory = $false)]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$parentTaskId,

        [Parameter( Mandatory = $true, ParameterSetName = 'indexByFilter' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$parentTaskId__in,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true)]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false)]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false)]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false)]
        [ValidateSet(   'accountName', 'agentComputerName', 'createdAt', 'description', 'detailedStatus', 'groupName',
                        'id', 'initiatedBy', 'parentTaskId', 'siteName', 'status', 'updatedAt'
                    )]
        [String]$sortBy,

        [Parameter( Mandatory = $false)]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false)]
        [ValidateSet(   'canceled', 'completed', 'created', 'expired', 'failed',
                        'in_progress', 'partially_completed', 'pending', 'scheduled'
                    )]
        [String]$status,

        [Parameter( Mandatory = $false)]
        [Switch]$tenant,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String]$type,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$types,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gte,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lt,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lte,

        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [String[]]$uuid__contains

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        $resource_uri = "/remote-scripts/status"

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                $body += @{ $Key.Key = $universalTime }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\RemoteScriptOrchestration-GET.ps1' 624
#Region '.\Public\reports\Reports-GET.ps1' 0
function Export-SentinelOneReports {
<#
    .SYNOPSIS
        Exports generated reports to HTML or PDF

    .DESCRIPTION
        The Export-SentinelOneReports cmdlet exports generated reports to HTML or PDF

        When the Management generates a report, it is uploaded to the Management Console.
        Use this command to get the report as a PDF or HTML file.

        To get the ID of the report, see Get Reports.

    .PARAMETER report_format
        Report format.

        Allowed values:
        'html', 'pdf'

    .PARAMETER report_id
        Report ID.

        Example: "225494730938493804".

    .PARAMETER fileName
        Name of the file

        Example: 'MyAgents-2022'

        The default name format is 'reports-$report_id-yyyy-MM-dd_HHmmss'

    .PARAMETER filePath
        The location to save the file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Export-SentinelOneReports -report_format html -report_id 225494730938493804

        Returns a HTML report for the defined report and saves the results in the current working directory

        fileName:
            reports-225494730938493804-2022-10-29_105845.html

    .EXAMPLE
        225494730938493804 | Export-SentinelOneReports -report_format pdf

        Returns a PDF report for the defined report and saves the results in the current working directory

        fileName:
            reports-225494730938493804-2022-10-29_105845.pdf

    .EXAMPLE
        Export-SentinelOneReports -report_format html -report_id 225494730938493804 -fileName MyCustomFile -filePath C:\Logs -showReport

        Returns a PDF report for the defined report and saves the results in the defined directory with the defined name
        and opens the location to were the file is saved.

        fileName:
            MyCustomFile.html

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Reports/Export-SentinelOneReports.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ParameterSetName = 'index' )]
        [ValidateSet( 'html', 'pdf' )]
        [String]$report_format,

        [Parameter( Mandatory = $true, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$report_id,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fileName = "reports-$report_id-$( Get-date -Format 'yyyy-MM-dd_HHmmss' )",

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$showReport

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/reports/$report_id/$report_format"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'fileName','filePath','showReport'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ($Key in $PSBoundParameters.GetEnumerator()){

                if($excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {

            $fileOutput = "$filePath\$filename.$report_format"

            if ( (Test-Path -Path $filePath -PathType Container) -eq $false ){
                New-Item -Path $filePath -ItemType Directory > $null
            }

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -OutFile $fileOutput `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $fileOutput -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}



function Get-SentinelOneReportInsights {
<#
    .SYNOPSIS
        Get the Insight Report types.

    .DESCRIPTION
        The Get-SentinelOneReportInsights cmdlet gets the Insight Report types.

        These reports show high-level and detailed information on the state of your
        endpoint security.

        Reports include statistics, trends, and summaries with easy to read and actionable
        information about your network.

        This command does not give data for specific reports.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER forceUpdate
        Force update

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .EXAMPLE
        Get-SentinelOneReportInsights

        Returns high-level and detailed information on the state of your endpoint security
        from a global scope.

    .EXAMPLE
        Get-SentinelOneReportInsights -siteIds 225494730938493804

        Returns high-level and detailed information on the state of your endpoint security
        from a defined siteId.

    .EXAMPLE
        225494730938493804 | Get-SentinelOneReportInsights

        Returns high-level and detailed information on the state of your endpoint security
        from a defined siteId.


    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Reports/Get-SentinelOneReportInsights.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$forceUpdate,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$siteIds

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/reports/insights/types"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneReportTasks {
<#
    .SYNOPSIS
        Get the tasks that were done to generate reports and
        to schedule future reports.

    .DESCRIPTION
        The Get-SentinelOneReportTasks cmdlet Gets the tasks that were done to
        generate reports and to schedule future reports.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER createdAt__gte
        Returns report tasks created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns report tasks created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER creatorId
        Creator id.

        Example: "225494730938493804".

    .PARAMETER creatorName
        Creator name

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER day
        Day

    .PARAMETER frequency
        Frequency.

        Allowed values:
        'manually', 'monthly', 'weekly'

    .PARAMETER id
        Id.

        Example: "225494730938493804".

    .PARAMETER ids
        Id in.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER query
        query

    .PARAMETER scheduleType
        Report type.

        Allowed values:
        'manually', 'scheduled'

    .PARAMETER scope
        Scope.

        Allowed values:
        'account', 'group', 'site', 'tenant'

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'createdAt', 'day', 'frequency', 'id', 'name', 'scheduleType', 'scope', 'sites', 'status'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .EXAMPLE
        Get-SentinelOneReportTasks

        Returns the first 10 tasks that were done to generate reports and
        to schedule future reports from a global scope

    .EXAMPLE
        Get-SentinelOneReportTasks -countOnly

        Returns the total number of tasks that were done to generate reports and
        to schedule future reports from a global scope without any data.

    .EXAMPLE
        Get-SentinelOneReportTasks -siteIds 225494730938493804

        Returns the first 10 tasks that were done to generate reports and
        to schedule future reports from the defined siteIds

    .EXAMPLE
        225494730938493804 | Get-SentinelOneReportTasks

        Returns the first 10 tasks that were done to generate reports and
        to schedule future reports from the defined siteIds

    .EXAMPLE
        Get-SentinelOneReportTasks -createdAt__gte '2018-02-27 14:32'

        Returns the first 10 tasks created after the defined data

        DataTime values are converted to UTC, use -verbose to see the value it is converted to.

    .EXAMPLE
        Get-SentinelOneReportTasks -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Reports/Get-SentinelOneReportTasks.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$creatorId,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$creatorName,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$day,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'manually', 'monthly', 'weekly' )]
        [String]$frequency,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$id,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'manually', 'scheduled' )]
        [String]$scheduleType,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'account', 'group', 'site', 'tenant' )]
        [String]$scope,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'createdAt', 'day', 'frequency', 'id', 'name', 'scheduleType', 'scope', 'sites', 'status' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/report-tasks"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                $body += @{ $Key.Key = $universalTime }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneReports {
<#
    .SYNOPSIS
        Get the reports that match the filter and the data of the reports.

    .DESCRIPTION
        The Get-SentinelOneReports cmdlet gets the reports that match the filter and
        the data of the reports.

        Use this command to get the ID of reports to use in other commands.
        Other data in the response:
            schedule, Insight Type, name and ID of the user who created the report, the date range, and more.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER createdAt__gte
        Returns reports created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns reports created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER frequency
        Frequency.

        Allowed values:
        'manually', 'monthly', 'weekly'

    .PARAMETER fromDate
        From date.

        Example: "2018-02-27T04:49:26.257525Z".

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER id
        Id.

        Example: "225494730938493804".

    .PARAMETER ids
        Id in.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER interval
        Interval

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER name
        Name

    .PARAMETER query
        query

    .PARAMETER scheduleType
        Report type.

        Allowed values:
        'manually', 'scheduled'

    .PARAMETER scope
        Scope.

        Allowed values:
        'account', 'group', 'site', 'tenant'

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'createdAt', 'frequency', 'id', 'interval', 'name', 'scheduleType', 'scope', 'sites', 'status'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER taskId
        Task id.

        Example: "225494730938493804".

    .PARAMETER toDate
        To date.

        Example: "2018-02-27T04:49:26.257525Z".

    .EXAMPLE
        Get-SentinelOneReports

        Returns the first 10 reports from a global scope

    .EXAMPLE
        Get-SentinelOneReports -countOnly

        Returns the total number reports from a global scope without any data.

    .EXAMPLE
        Get-SentinelOneReports -siteIds 225494730938493804

        Returns the first 10 reports from the defined siteIds

    .EXAMPLE
        225494730938493804 | Get-SentinelOneReports

        Returns the first 10 reports from the defined siteIds

    .EXAMPLE
        Get-SentinelOneReports -createdAt__gte '2018-02-27 14:32'

        Returns the first 10 reports created after the defined data

        DataTime values are converted to UTC, use -verbose to see the value it is converted to.

    .EXAMPLE
        Get-SentinelOneReports -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Reports/Get-SentinelOneReports.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'manually', 'monthly', 'weekly' )]
        [String]$frequency,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fromDate,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$id,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$interval,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$name,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'manually', 'scheduled' )]
        [String]$scheduleType,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'account', 'group', 'site', 'tenant' )]
        [String]$scope,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'createdAt', 'frequency', 'id', 'interval', 'name', 'scheduleType', 'scope', 'sites', 'status' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$taskId,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$toDate

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/reports"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                $body += @{ $Key.Key = $universalTime }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneRSSFeeds {
<#
    .SYNOPSIS
        Get the SentinelOne RSS feed.

    .DESCRIPTION
        The Get-SentinelOneRSSFeeds cmdlet gets the SentinelOne RSS feed.

        In the SentinelOne Management Console, we show the feed contents in the Dashboard.

    .EXAMPLE
        Get-SentinelOneRSSFeeds

        Returns the SentinelOne RSS feed.

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Reports/Get-SentinelOneRSSFeeds.html

#>

    [CmdletBinding()]
    Param ()

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        $resource_uri = "/sentinelonerss"

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\reports\Reports-GET.ps1' 963
#Region '.\Public\rouges\Rogues-GET.ps1' 0
function Export-SentinelOneRogues {
<#
    .SYNOPSIS
        Exports Rogues data to CSV

    .DESCRIPTION
        The Export-SentinelOneRogues cmdlet exports Rogues data to CSV

        You can set filters to get only relevant data.

        The response sends the CSV data as text.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER deviceType
        Device type.

        Example: "Server/Workstation/...".

    .PARAMETER deviceTypes
        Device types.

        Example: "Server/Workstation/...".

    .PARAMETER externalIp
        Search external ip using a CIDR expression or exact IP

    .PARAMETER externalIp__contains
        Free-text filter by visible IP

        Example: "192.168.0.1/24,10.1".

    .PARAMETER firstSeen__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER firstSeen__gt
        Returns rogues created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER firstSeen__gte
        Returns rogues created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER firstSeen__lt
        Returns rogues created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER firstSeen__lte
        Returns rogues created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER hostnames
        Hostnames

    .PARAMETER hostnames__contains
        Free-text filter by hostname

        Example: "s1_host,SomeHost".

    .PARAMETER ids
        List of device ids.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER lastSeen__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER lastSeen__gt
        Returns rogues lastSeen after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastSeen__gte
        Returns rogues lastSeen after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastSeen__lt
        Returns rogues lastSeen before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastSeen__lte
        Returns rogues lastSeen before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER localIp
        Search using local IP

    .PARAMETER localIp__contains
        Free-text filter by IP Address

        Example: "192.168.0.1/24,10.1".

    .PARAMETER macAddress
        A mac address to search for

    .PARAMETER macAddress__contains
        Free-text filter by mac address.

        Example: "aa:ee:b1".

    .PARAMETER manufacturer
        Manufacturer of the device or network interface

    .PARAMETER manufacturer__contains
        Free-text filter by manufacturer

        Example: "Company".

    .PARAMETER osName
        Os name

    .PARAMETER osType
        OS type

    .PARAMETER osTypes
        Included OS types

    .PARAMETER osVersion
        Os version

    .PARAMETER osVersion__contains
        Free-text filter by OS full name and version

        Example: "Service Pack 1".

    .PARAMETER query
        Free text query

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER tenant
        Indicates a tenant scope request

    .PARAMETER fileName
        Name of the file

        Example: 'MySites-2022'

        The default name format is 'rogues-yyyy-MM-dd_HHmmss'

    .PARAMETER filePath
        The location to save the file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Export-SentinelOneRogues

        Returns rogue data to a csv file in the current directory

        fileName:
            rogues-2022-10-29_105845.csv

    .EXAMPLE
        Export-SentinelOneRogues -firstSeen__gt '2018-02-27 14:32'

        Returns rogues first seen after defined dataTime and outputs the data to a csv
        in the current working directory.

        DataTime values are converted to UTC, use -verbose to see the value it is converted to.

        fileName:
            rogues-2022-10-29_105845.csv

    .EXAMPLE
        Export-SentinelOneRogues -siteIds 1234567890 -fileName MyCustomFile -filePath C:\Logs -showReport

        Returns rogues from the defined siteIds, saves the CSV file in the defined directory
        with the defined named, and opens the location to were the file is saved.

        fileName:
            MyCustomFile.csv

    .NOTES
        As of 2022-11
            Cannot fully validate due to permissions and licensing

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Rouges/Export-SentinelOneRogues.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$deviceType,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$deviceTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$externalIp,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$externalIp__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$firstSeen__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$firstSeen__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$firstSeen__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$firstSeen__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$firstSeen__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$hostnames,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$hostnames__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$lastSeen__between,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$lastSeen__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$lastSeen__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$lastSeen__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$lastSeen__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$localIp,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$localIp__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$macAddress,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$macAddress__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$manufacturer,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$manufacturer__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$osName,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$osType,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$osTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$osVersion,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$osVersion__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$tenant,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fileName = "rogues-$( Get-date -Format 'yyyy-MM-dd_HHmmss' )",

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$showReport

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/rogues/report/csv"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'fileName','filePath','showReport'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                    Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                    Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                    $body += @{ $Key.Key = $universalTime }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {

            $fileOutput = "$filePath\$filename.csv"

            if ( (Test-Path -Path $filePath -PathType Container) -eq $false ){
                New-Item -Path $filePath -ItemType Directory > $null
            }

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -OutFile $fileOutput `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $fileOutput -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}



function Get-SentinelOneRogueSettings {
<#
    .SYNOPSIS
        Gets rogue settings

    .DESCRIPTION
        The Get-SentinelOneRogueSettings cmdlet gets rogue settings

    .PARAMETER accountId
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .EXAMPLE
        Get-SentinelOneRogueSettings -accountId 1234567890

        Returns rogue settings for the defined accountId

    .EXAMPLE
        Get-SentinelOneRogueSettings -siteIds 1234567890,27348952792

        Returns rogue settings for the defined siteId

    .EXAMPLE
        1234567890 | Get-SentinelOneRogueSettings

        Returns rogue settings for the defined siteId

    .NOTES
        As of 2022-11
            Cannot fully validate due to permissions and licensing

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Rouges/Get-SentinelOneRogueSettings.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountId,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds

    )

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/rogues/settings"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ( $PSCmdlet.ParameterSetName -eq 'index' ) {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneRogueTables {
<#
    .SYNOPSIS
        Get the data for each row in the Rogues Device Inventory Table.

    .DESCRIPTION
        The Get-SentinelOneRogueTables cmdlet gets the data for each row in the
        Rogues Device Inventory Table.

    .PARAMETER accountIds
        Single Account ID to filter by.

        Example: "225494730938493804".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER deviceType
        Device type.

        Example: "Server/Workstation/...".

    .PARAMETER deviceTypes
        Device types.

        Example: "Server/Workstation/...".

    .PARAMETER externalIp
        Search external ip using a CIDR expression or exact IP

    .PARAMETER externalIp__contains
        Free-text filter by visible IP

        Example: "192.168.0.1/24,10.1".

    .PARAMETER firstSeen__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER firstSeen__gt
        Returns rogues created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER firstSeen__gte
        Returns rogues created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER firstSeen__lt
        Returns rogues created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER firstSeen__lte
        Returns rogues created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER hostnames
        Hostnames

    .PARAMETER hostnames__contains
        Free-text filter by hostname

        Example: "s1_host,SomeHost".

    .PARAMETER ids
        List of device ids.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER lastSeen__between
        Date range for creation time (format: <from_timestamp>-<to_timestamp>, inclusive).

        Example: "1514978890136-1514978650130".

    .PARAMETER lastSeen__gt
        Returns rogues lastSeen after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastSeen__gte
        Returns rogues lastSeen after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastSeen__lt
        Returns rogues lastSeen before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER lastSeen__lte
        Returns rogues lastSeen before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER localIp
        Search using local IP

    .PARAMETER localIp__contains
        Free-text filter by IP Address

        Example: "192.168.0.1/24,10.1".

    .PARAMETER macAddress
        A mac address to search for

    .PARAMETER macAddress__contains
        Free-text filter by mac address.

        Example: "aa:ee:b1".

    .PARAMETER manufacturer
        Manufacturer of the device or network interface

    .PARAMETER manufacturer__contains
        Free-text filter by manufacturer

        Example: "Company".

    .PARAMETER osName
        Os name

    .PARAMETER osType
        OS type

    .PARAMETER osTypes
        Included OS types

    .PARAMETER osVersion
        Os version

    .PARAMETER osVersion__contains
        Free-text filter by OS full name and version

        Example: "Service Pack 1".

    .PARAMETER query
        Free text query

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'deviceType', 'externalIp', 'firstSeen', 'id', 'lastSeen', 'localIp',
        'macAddress', 'manufacturer', 'osName', 'osType', 'osVersion'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER tenant
        Indicates a tenant scope request

    .EXAMPLE
        Get-SentinelOneRogueTables

        Returns the data for each row in the rogue Device Inventory Table from a global scope

    .EXAMPLE
        Get-SentinelOneRogueTables -siteIds 225494730938493804

        Returns the data for each row in the rogue Device Inventory Table from the defined site

    .EXAMPLE
        225494730938493804 | Get-SentinelOneRogueTables

        Returns the data for each row in the rogue Device Inventory Table from the defined site

    .EXAMPLE
        Get-SentinelOneRogueTables -firstSeen__gt '2018-02-27 14:32' -siteIds 225494730938493804

        Returns rogues first seen after defined dataTime from the defined site

        DataTime values are converted to UTC, use -verbose to see the value it is converted to.

    .EXAMPLE
        Get-SentinelOneRogueTables -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        As of 2022-11
            Cannot fully validate due to permissions and licensing

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Rouges/Get-SentinelOneRogueTables.html

#>

[CmdletBinding( DefaultParameterSetName = 'index' )]
Param (
    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, [Int64]::MaxValue)]
    [Int64[]]$accountIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$countOnly,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$cursor,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$deviceType,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$deviceTypes,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$externalIp,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$externalIp__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$firstSeen__between,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$firstSeen__gt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$firstSeen__gte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$firstSeen__lt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$firstSeen__lte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [Int64[]]$groupIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$hostnames,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$hostnames__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [Int64[]]$ids,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$lastSeen__between,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$lastSeen__gt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$lastSeen__gte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$lastSeen__lt,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [DateTime]$lastSeen__lte,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, 1000)]
    [Int64]$limit,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$localIp,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$localIp__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$macAddress,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$macAddress__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$manufacturer,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$manufacturer__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$osName,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$osType,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$osTypes,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$osVersion,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String[]]$osVersion__contains,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [String]$query,

    [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
    [ValidateNotNullOrEmpty()]
    [Int64[]]$siteIds,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateRange(1, 1000)]
    [Int64]$skip,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$skipCount,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet(   'deviceType', 'externalIp', 'firstSeen', 'id', 'lastSeen', 'localIp',
                    'macAddress', 'manufacturer', 'osName', 'osType', 'osVersion'
                )]
    [String]$sortBy,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [ValidateSet( 'asc', 'desc' )]
    [String]$sortOrder,

    [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
    [Switch]$tenant

)

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/rogues/table-view"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                    Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                    $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                    Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                    $body += @{ $Key.Key = $universalTime }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\rouges\Rogues-GET.ps1' 1045
#Region '.\Public\settings\Settings-GET.ps1' 0
function Get-SentinelOneSettings {
<#
    .SYNOPSIS
        Gets SentinelOne settings for various endpoints

    .DESCRIPTION
        The Get-SentinelOneSettings cmdlet gets SentinelOne settings for various endpoints

        You will need to define an endpoint to reference or the function will fail

        Endpoints:
            Ad Fqdns                = /settings/active-directory/scope-mapping
            Ad Settings             = /settings/active-directory
            Notification Settings   = /settings/notifications
            Smtp Settings           = /settings/smtp
            Sso Settings            = /settings/sso
            Syslog Settings         = /settings/syslog

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER adFQDNs
        Return Ad Fqdn settings

    .PARAMETER adSettings
        Return Ad settings

    .PARAMETER notification
        Return notification settings

    .PARAMETER smtp
        Return smtp settings

    .PARAMETER sso
        Return sso settings

    .PARAMETER syslog
        Return syslog settings

    .EXAMPLE
        Get-SentinelOneSettings

        Will fail as you will need to define what settings endpoint to query

    .EXAMPLE
        Get-SentinelOneSettings -adFQDNs -siteIds 225494730938493804

        Returns the map of Active Directory FQDNs to user roles of the given Sites (use "sites" to get IDs) or Accounts ("accounts").

    .EXAMPLE
        Get-SentinelOneSettings -adSettings -siteIds 225494730938493804

        Returns the Active Directory settings for the defined siteIds

    .EXAMPLE
        Get-SentinelOneSettings -Notification -siteIds 225494730938493804

        Returns the notification settings for the given Sites (to get the IDs, run "settings") or Accounts ("accounts").

    .NOTES
        As of 2022-11
            Cannot fully validate due to permissions

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Settings/Get-SentinelOneSettings.html

#>

    [CmdletBinding()]
    Param (
        [Parameter( Mandatory = $false)]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true)]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $true, ParameterSetName = 'indexByAdFQDN' )]
        [Switch]$adFQDNs,

        [Parameter( Mandatory = $true, ParameterSetName = 'indexByAdSettings' )]
        [Switch]$adSettings,

        [Parameter( Mandatory = $true, ParameterSetName = 'indexByNotification' )]
        [Switch]$notification,

        [Parameter( Mandatory = $true, ParameterSetName = 'indexBySMTP' )]
        [Switch]$smtp,

        [Parameter( Mandatory = $true, ParameterSetName = 'indexBySSO' )]
        [Switch]$sso,

        [Parameter( Mandatory = $true, ParameterSetName = 'indexBySyslog' )]
        [Switch]$syslog

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'indexByAdFQDN'         {$resource_uri = "/settings/active-directory/scope-mapping"}
            'indexByAdSettings'     {$resource_uri = "/settings/active-directory"}
            'indexByNotification'   {$resource_uri = "/settings/notifications"}
            'indexBySMTP'           {$resource_uri = "/settings/smtp"}
            'indexBySSO'            {$resource_uri = "/settings/sso"}
            'indexBySyslog'         {$resource_uri = "/settings/syslog"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'adFQDNs', 'adSettings', 'notification', 'smtp', 'sso', 'syslog'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneSettingEmailRecipients {
<#
    .SYNOPSIS
        Get the emails that are configured to receive notifications.

    .DESCRIPTION
        The Get-SentinelOneSettingEmailRecipients cmdlet gets the emails that
        are configured to receive notifications.

        Alias = "Get-SentinelOneEmailRecipients"

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER email
        email

    .PARAMETER name
        name

    .PARAMETER query
        query

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER sms
        sms

    .EXAMPLE
        Get-SentinelOneSettingEmailRecipients

        Returns the emails that are configured to receive notifications from a global scope

    .EXAMPLE
        Get-SentinelOneSettingEmailRecipients -siteIds 225494730938493804

        Returns the emails that are configured to receive notifications from a defined scope

    .EXAMPLE
        225494730938493804 | Get-SentinelOneSettingEmailRecipients

        Returns the emails that are configured to receive notifications from a defined scope

    .EXAMPLE
        Get-SentinelOneEmailRecipients

        Alias for "Get-SentinelOneSettingEmailRecipients"

        Returns the emails that are configured to receive notifications from a global scope

    .NOTES
        As of 2022-11
            Cannot fully validate due to permissions

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Settings/Get-SentinelOneSettingEmailRecipients.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$email,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$name,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$sms

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/settings/recipients"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}

New-Alias -Name Get-SentinelOneEmailRecipients -Value Get-SentinelOneSettingEmailRecipients
#EndRegion '.\Public\settings\Settings-GET.ps1' 299
#Region '.\Public\sites\Export-SentinelOneSites.ps1' 0
function Export-SentinelOneSites {
<#
    .SYNOPSIS
        Exports site data from one more more sites under an account

    .DESCRIPTION
        The Export-SentinelOneSites cmdlet exports site data from one more more sites under an account

    .PARAMETER accountId
        Return sites under the defined AccountId

        This is not the site Id

    .PARAMETER accountIds
        Return sites under the defined AccountIds

        This is not the site Id

    .PARAMETER accountName__contains
        Free-text filter by account name (supports multiple values)

    .PARAMETER activeLicenses
        Returns sites with the exact amount of active licenses defined

    .PARAMETER adminOnly
        Show sites the user has Admin privileges to

        This command does not function in the console as well

    .PARAMETER availableMoveSites
        Return sites the user can move agents to

    .PARAMETER createdAt
        Returns sites created at the exact UTC timestamp defined

        Example: "2018-02-27T04:49:26.257525Z"

    .PARAMETER description
        Returns sited matching the exact description defined.

        This is case-sensitive

    .PARAMETER description__contains
        Free-text filter by site description (supports multiple values)

    .PARAMETER expiration
        Returns sites whose expiration time matches the exact UTC timestamp defined

        Example: "2018-02-27T04:49:26.257525Z".

    .PARAMETER externalId
        Id in a CRM external system

    .PARAMETER features
        Return only sites that support this\these features.

        Allowed Values:
        'device-control', 'firewall-control', 'ioc'

    .PARAMETER healthStatus
        Returns only sites that are healthy

    .PARAMETER isDefault
        Returns only the default site

    .PARAMETER module
        Returns certain modules from the licenses section

    .PARAMETER name
        Returns sited matching the exact name defined.

        This is case-sensitive

    .PARAMETER name__contains
        Free-text filter by site name (supports multiple values)

    .PARAMETER query
        Full text search for fields: name, account_name, description.

        Note: on single-account consoles account name will not be matched

    .PARAMETER registrationToken
        Returns a site with the matching registration token

    .PARAMETER siteIds
        Returns a list of sites using the defined ids

        Example: "225494730938493804,225494730938493915".

    .PARAMETER siteType
        Returns sites of a certain type

        Allowed values:
        'Paid', 'Trial'

    .PARAMETER sku
        Returns sites of a certain sku

        This is case-sensitive

    .PARAMETER state
        Returns sites matching a certain state

        Allowed values:
        'active', 'deleted', 'expired'

    .PARAMETER states
        Returns sites matching a certain states

        Allowed values:
        'active', 'deleted', 'expired'

    .PARAMETER suite
        Returns sites with using active defined product features

        Allowed values:
        'Complete', 'Control', 'Core'

    .PARAMETER totalLicenses
        Returns sites matching the total amount of licenses defined

    .PARAMETER updatedAt
        Returns sites updated at the exact UTC timestamp defined

        Example: "2018-02-27T04:49:26.257525Z"

    .PARAMETER fileName
        Name of the file

        Example: 'MySites-2022'

        The default name format is 'sites-yyyy-MM-dd_HHmmss'

    .PARAMETER filePath
        The location to save the file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Export-SentinelOneSites

        Returns all sites and saves the results to a CSV in the current working directory

    .EXAMPLE
        1234567890 | Export-SentinelOneSites

        Returns the site with the matching id defined and saves the results to a CSV in the current working directory

    .EXAMPLE
        Export-SentinelOneSites -siteId 1234567890,0987654321 -fileName MySites -filePath C:\Logs -showReport

        Returns the site with the matching id defined, saves the CSV file in the defined directory with the defined named
        and opens the location to were the file is saved.

    .EXAMPLE
        Export-SentinelOneSites -createdAt '2018-02-27T04:49:26.257525Z'

        Returns sites that were created at the exact UTC timestamp defined and saves the results to a CSV in the current working directory

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Sites/Export-SentinelOneSites.html
#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$accountId,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$accountName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$activeLicenses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$adminOnly, #Error - Server cannot process any request

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$availableMoveSites,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$createdAt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$description,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$description__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$expiration,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$externalId,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'device-control', 'firewall-control', 'ioc' )]
        [String[]]$features,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$healthStatus,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$isDefault,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$module,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$name,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$name__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$registrationToken,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Paid', 'Trial' )]
        [String]$siteType,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$sku,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'active', 'deleted', 'expired' )]
        [String]$state,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'active', 'deleted', 'expired' )]
        [String[]]$states,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Complete', 'Control', 'Core' )]
        [String]$suite,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalLicenses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$updatedAt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fileName = "sites-$( Get-date -Format 'yyyy-MM-dd_HHmmss' )",

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$showReport

    )

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = '/export/sites'}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'fileName','filePath','showReport'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ($Key in $PSBoundParameters.GetEnumerator()){

                if($excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {

            $fileOutput = "$filePath\$filename.csv"

            if ( (Test-Path -Path $filePath -PathType Container) -eq $false ){
                New-Item -Path $filePath -ItemType Directory > $null
            }

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -OutFile $fileOutput `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $fileOutput -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}
#EndRegion '.\Public\sites\Export-SentinelOneSites.ps1' 357
#Region '.\Public\sites\Get-SentinelOneSites.ps1' 0
function Get-SentinelOneSites {
<#
    .SYNOPSIS
        Get the Sites that match the filters

    .DESCRIPTION
        The Get-SentinelOneSites cmdlet get the Site(s) that match the filters

    .PARAMETER accountId
        Account id

        Example: "225494730938493804"

    .PARAMETER accountIds
        List of Account IDs to filter by

        Example: "225494730938493804,225494730938493915"

    .PARAMETER accountName__contains
        Free-text filter by account name (supports multiple values)

    .PARAMETER activeLicenses
        Returns sites with the exact amount of active licenses defined

    .PARAMETER adminOnly
        Show sites the user has Admin privileges to

        As of 2022-12, this does not work

    .PARAMETER availableMoveSites
        Only return sites the user can move agents to

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects

    .PARAMETER createdAt
        Returns sites created at the exact UTC timestamp defined

        Example: "2018-02-27T04:49:26.257525Z"

    .PARAMETER cursor
        Cursor position returned by the last request

        Use to iterate over more than 1000 items

    .PARAMETER description
        Returns sited matching the case-sensitive & exact
        description defined

    .PARAMETER description__contains
        Free-text filter by site description (supports multiple values)

    .PARAMETER expiration
        Returns sites whose expiration time matches the exact UTC timestamp defined

        Example: "2018-02-27T04:49:26.257525Z"

    .PARAMETER externalId
        Id in a CRM external system

    .PARAMETER features
        Return only sites that support this\these features

        Allowed Values:
            'device-control', 'firewall-control', 'ioc'

    .PARAMETER healthStatus
        Returns only sites that are healthy

    .PARAMETER isDefault
        Returns only the default site

    .PARAMETER limit
        Limit number of returned items (1-1000)

    .PARAMETER module
        Returns certain modules from the licenses section

    .PARAMETER name
        Returns sited matching the exact name defined

        This is case-sensitive

    .PARAMETER name__contains
        Free-text filter by site name (supports multiple values)

    .PARAMETER query
        Full text search for fields: name, account_name, description

        Note: on single-account consoles account name will not be matched

    .PARAMETER registrationToken
        Returns a site with the matching registration token

    .PARAMETER siteId
        Returns data for a single site matching the defined id

        Returns data from the '/sites/{site_id}' endpoint

        Example: '225494730938493804'

    .PARAMETER siteIds
        Returns a list of sites using the defined ids

        Example: "225494730938493804,225494730938493915"

    .PARAMETER siteType
        Returns sites of a certain type

        Allowed values:
            'Paid', 'Trial'

    .PARAMETER skip
        Skip first number of items (0-1000)

        To iterate over more than 1000 items, use "cursor"

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time

    .PARAMETER sku
        Returns sites of a certain sku

        Allowed values:
            'complete', 'control', 'core'

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'accountName', 'activeLicenses', 'createdAt', 'description', 'expiration', 'id', 'name', 'siteType',
        'sku', 'state', 'suite', 'totalLicenses', 'updatedAt'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER state
        Returns sites matching a certain state

        Allowed values:
        'active', 'deleted', 'expired'

    .PARAMETER states
        Returns sites matching a certain states

        Allowed values:
        'active', 'deleted', 'expired'

    .PARAMETER totalLicenses
        Returns sites matching the total amount of licenses defined

    .PARAMETER updatedAt
        Returns sites updated at the exact UTC timestamp defined

        Example: "2018-02-27T04:49:26.257525Z"

    .PARAMETER updatedAt
        Returns sites updated at the exact UTC timestamp defined

        Example: "2018-02-27T04:49:26.257525Z"

    .PARAMETER allPages
        Returns all items from an endpoint

        Highly recommended to only use with filters to reduce API errors\timeouts

    .EXAMPLE
        Get-SentinelOneSites

        This uses the '/sites' endpoint instead of the '/sites/{site_id}' endpoint

        Returns the first 10 and data is sorted by their created at date

    .EXAMPLE
        Get-SentinelOneSites -siteId 1234567890

        Returns the site matching the defined siteId value

        This uses the '/sites/{site_id}' endpoint instead of the '/sites' endpoint

    .EXAMPLE
        Get-SentinelOneSites -siteIds 1234567890,0987654321

        Returns the sites matching the defined siteId value

        This uses the '/sites/{site_id}' endpoint instead of the '/sites' endpoint

    .EXAMPLE
        Get-SentinelOneSites -createdAt '2018-02-27T04:49:26.257525Z'

        Returns sites that were created at the exact UTC timestamp defined

    .EXAMPLE
        Get-SentinelOneSites -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns sites after the first 10 results

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/sites/Get-SentinelOneSites.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    [Alias( 'Get-S1Sites' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$accountId,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$accountName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$activeLicenses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$adminOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$availableMoveSites,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$createdAt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$description,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$description__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$expiration,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$externalId,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'device-control', 'firewall-control', 'ioc' )]
        [String[]]$features,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$healthStatus,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$isDefault,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$module,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$name,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$name__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$registrationToken,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexBySite' )]
        [ValidateNotNullOrEmpty()]
        [String]$siteId,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'paid', 'trial' )]
        [String]$siteType,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'complete', 'control', 'core' )]
        [String]$sku,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'accountName', 'activeLicenses', 'createdAt', 'description', 'expiration', 'id', 'name', 'siteType', 'sku', 'state', 'suite', 'totalLicenses', 'updatedAt' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'active', 'deleted', 'expired' )]
        [String]$state,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'active', 'deleted', 'expired' )]
        [String[]]$states,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$totalLicenses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$updatedAt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [switch]$allPages

    )

    begin {

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/sites"}
            'indexBySite'   {$resource_uri = "/sites/$siteId"}
        }

    }

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        #Region     [ Adjust parameters ]

            #Add default PSBoundParameters
            if( -not $PSBoundParameters.ContainsKey('limit') ) { $PSBoundParameters.limit = 1000 }

            #Remove path
            if( $PSBoundParameters.ContainsKey('siteId') ) { $PSBoundParameters.Remove('siteId') > $null }

        #EndRegion  [ Adjust  parameters ]

        Set-Variable -Name 'S1_sitesParameters' -Value $PSBoundParameters -Scope Global -Force

        Invoke-SentinelOneRequest -Method GET -resource_Uri $resource_Uri -uri_Filter $PSBoundParameters -allPages:$allPages

    }

    end {}

}
#EndRegion '.\Public\sites\Get-SentinelOneSites.ps1' 379
#Region '.\Public\system\Systems-GET.ps1' 0
function Get-SentinelOneSystems {
<#
    .SYNOPSIS
        Gets general SentinelOne system platform data

    .DESCRIPTION
        The Get-SentinelOneSystems cmdlet gets general SentinelOne system platform data

        By default an indication of the system's health status is returned

        Returned results include SentinelOne:
            Status health
            Database health
            Cache health
            Console build, version, patch, and release information.

    .PARAMETER cache
        Returns an indication of the system's cache health status.

    .PARAMETER dataBase
        Returns an indication of the system's database health status.

    .PARAMETER accountIds
        Returns sites under the defined AccountIds

        This is not the site Id

        Example: 225494730938493804,225494730938493915

    .PARAMETER siteIds
        Returns a list of sites using the defined ids

        Example: 225494730938493804,225494730938493915

    .PARAMETER info
        Returns the consoles build, version, patch, and release information.

    .PARAMETER status
        Returns an indication of the system's health status.

    .EXAMPLE
        Get-SentinelOneSystems

        Returns an indication of the system's health status.

    .EXAMPLE
        Get-SentinelOneSystems -database

        Returns an indication of the system's database health status.

    .EXAMPLE
        Get-SentinelOneSystems -siteIds 1234567890

        Returns a list of site configurations using the defined ids

    .EXAMPLE
        1234567890 | Get-SentinelOneSystems

        Returns a list of site configurations using the defined ids

    .EXAMPLE
        Get-SentinelOneSystems -siteIds 1234567890,0987654321

        Returns a list of site configurations using the defined ids

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/System/Get-SentinelOneSystems.html
#>

    [CmdletBinding( DefaultParameterSetName = 'indexByStatus' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByCache' )]
        [Switch]$cache,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByDb' )]
        [Switch]$dataBase,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByConfig' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $true, ValueFromPipeline = $true, ParameterSetName = 'indexByConfig' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByInfo' )]
        [Switch]$info,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByStatus' )]
        [Switch]$status

    )

    process{

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'indexByCache'      {$resource_uri = '/system/status/cache'}
            'indexByDb'         {$resource_uri = '/system/status/db'}
            'indexByConfig'     {$resource_uri = '/system/configuration'}
            'indexByInfo'       {$resource_uri = '/system/info'}
            'indexByStatus'     {$resource_uri = '/system/status'}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'indexByConfig'){

            ForEach ($Key in $PSBoundParameters.GetEnumerator()){

                if($excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {
            $ParameterSet = 'indexByConfig', 'indexByInfo'
            if ( $ParameterSet -contains $PSCmdlet.ParameterSetName ){
                $ApiToken = Get-SentinelOneAPIKey -plainText
                $S1_Headers.Add('Authorization', "ApiToken $ApiToken")
            }

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            if ( $ParameterSet -contains $PSCmdlet.ParameterSetName ){
                [void] ( $S1_Headers.Remove('Authorization') )
            }
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneSystemsOverview {
<#
    .SYNOPSIS
        Gets general SentinelOne system platform data

    .DESCRIPTION
        The Get-SentinelOneSystem cmdlet gets general SentinelOne system platform data

        Returned results include SentinelOne:
            Status health
            Database health
            Cache health
            Console build, version, patch, and release information.

    .EXAMPLE
        Get-SentinelOneSystemsOverview

        Returns general information about the SentinelOne platform and console.

    .NOTES
        Find a more elegant way of making\adding data to an object

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/System/Get-SentinelOneSystemsOverview.html
#>

    [CmdletBinding()]
    Param ()

    process{

        $resource_uri = '/system/status', '/system/status/db', '/system/status/cache', '/system/info'

        $systemOverview = [PSCustomObject]@{}
            $Parameters = @{
                'InputObject'   = $systemOverview
                'MemberType'    = 'NoteProperty'
            }

        try {

            ForEach ($uri in $resource_uri){

                if ( $uri -contains '/system/info' ){
                    $ApiToken = Get-SentinelOneAPIKey -plainText
                    $S1_Headers.Add('Authorization', "ApiToken $ApiToken")
                }

                $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $uri ) -Headers $S1_Headers -ErrorAction Stop -ErrorVariable rest_error

                switch ($uri){
                    '/system/status'        {Add-Member @Parameters -Name Status -Value $rest_output.data.health}
                    '/system/status/db'     {Add-Member @Parameters -Name DataBase -Value $rest_output.data.health}
                    '/system/status/cache'  {Add-Member @Parameters -Name Cache -Value $rest_output.data.health}
                    '/system/info'          {
                        Add-Member @Parameters -Name Release -Value $rest_output.data.release
                        Add-Member @Parameters -Name Version -Value $rest_output.data.version
                        Add-Member @Parameters -Name Build -Value $rest_output.data.build
                        Add-Member @Parameters -Name LatestAgentVersion -Value $rest_output.data.latestAgentVersion
                        Add-Member @Parameters -Name Patch -Value $rest_output.data.patch
                    }
                }

            }
        } catch {
            Write-Error $_
        } finally {
            if ( $S1_Headers.Keys -contains 'Authorization' ){
                [void] ( $S1_Headers.Remove('Authorization') )
            }
        }

        $data = @{}
        $data = $systemOverview
        return $data

    }

}
#EndRegion '.\Public\system\Systems-GET.ps1' 237
#Region '.\Public\tags\Tags-GET.ps1' 0
function Get-SentinelOneTags {
<#
    .SYNOPSIS
        Get tags.

    .DESCRIPTION
        The Get-SentinelOneTags cmdlet gets tags.

    .PARAMETER type
        Type in.

        Allowed values:
        'device-inventory', 'firewall', 'network-quarantine'

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER disablePagination
        If true, all tags for requested filters will be returned

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ids
        List of IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER kind
        Returns tags of this specific kind

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER name__contains
        Free-text filter by tag name.

        Example: "tag_name,tag_na".

    .PARAMETER onlyParents
        If true returns all tags possible to inherit from parent scopes,
        otherwise returns all tags already inherited and tags from this scope.

    .PARAMETER query
        Free text search on tag name

    .PARAMETER scope
        Return tags from given scope level.

        Allowed values:
        'account', 'global', 'group', 'site'

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'id', 'query', 'scope', 'type'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER tenant
        Indicates a tenant scope request

    .EXAMPLE
        Get-SentinelOneTags -type firewall

        Returns firewall tags from a global scope

    .EXAMPLE
        Get-SentinelOneTags -type firewall -siteIds 25494730938493804

        Returns firewall tags from the defined siteIds

    .EXAMPLE
        25494730938493804 | Get-SentinelOneTags -type firewall

        Returns firewall tags from the defined siteIds

    .EXAMPLE
        Get-SentinelOneTags -type firewall -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        As of 2022-11
            Cannot fully validate due to permissions
            The documented sortBy options other then "id" don't work

            Unsure what this endpoint is leveraging as I can create\edit\query the Agent tag endpoint,
            and create\edit\query on accounts and sites but not with this endpoint.

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Tags/Get-SentinelOneTags.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ParameterSetName = 'index' )]
        [ValidateSet( 'device-inventory', 'firewall', 'network-quarantine' )]
        [String[]]$type,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$disablePagination,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$kind,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$name__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$onlyParents,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'account', 'global', 'group', 'site' )]
        [String]$scope,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'id', 'query', 'scope', 'type' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$tenant
    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/tags"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ( $PSCmdlet.ParameterSetName -eq 'index' ) {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if($excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }
        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\tags\Tags-GET.ps1' 252
#Region '.\Public\tasks\Tasks-GET.ps1' 0
function Get-SentinelOneTaskChildScopeConfigurations {
<#
    .SYNOPSIS
        Get the task configuration of child scopes of the given scope

    .DESCRIPTION
        The Get-SentinelOneTaskChildScopeConfigurations cmdlet gets the task configuration of
        child scopes of the given scope, if the tasks are not inherited.

    .PARAMETER taskType
        Task type.

        Allowed values:
        'agent_version_change', 'agents_upgrade', 'auto_deploy', 'cis_scan', 'gad',
        'script_execution'

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER query
        Query

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'createdAt', 'scopeId', 'taskType', 'userId'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER tenant
        Indicates a tenant scope request

    .EXAMPLE
        Get-SentinelOneTaskChildScopeConfigurations -taskType agents_upgrade

        Returns the first 10 defined child task configurations from a global scope

    .EXAMPLE
        Get-SentinelOneTaskChildScopeConfigurations -taskType agents_upgrade -countOnly

        Returns the total child task configurations from a global scope without any data.

    .EXAMPLE
        Get-SentinelOneTaskChildScopeConfigurations -taskType agents_upgrade -siteIds 225494730938493804

        Returns the first 10 defined child task configurations from the defined scope.

    .EXAMPLE
        225494730938493804 | Get-SentinelOneTaskChildScopeConfigurations -taskType agents_upgrade

        Returns the first 10 defined child task configurations from the defined scope.

    .EXAMPLE
        Get-SentinelOneTaskChildScopeConfigurations -taskType agents_upgrade -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Tasks/Get-SentinelOneTaskChildScopeConfigurations.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ParameterSetName = 'index' )]
        [ValidateSet(   'agent_version_change', 'agents_upgrade', 'auto_deploy',
                        'cis_scan', 'gad', 'script_execution'
                    )]
        [String]$taskType,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'createdAt', 'scopeId', 'taskType', 'userId' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$tenant

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/tasks-configuration/explicit-subscopes"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneTaskConfigurations {
<#
    .SYNOPSIS
        Get the task configuration of a scope.

    .DESCRIPTION
        The Get-SentinelOneTaskConfigurations cmdlet gets the task configuration of a scope.

    .PARAMETER taskType
        Task type.

        Allowed values:
        'agent_version_change', 'agents_upgrade', 'auto_deploy', 'cis_scan', 'gad',
        'script_execution'

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'createdAt', 'scopeId', 'taskType', 'userId'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER tenant
        Indicates a tenant scope request

    .EXAMPLE
        Get-SentinelOneTaskConfigurations -taskType agents_upgrade

        Returns the first 10 defined task configurations from a global scope

    .EXAMPLE
        Get-SentinelOneTaskConfigurations -taskType agents_upgrade -countOnly

        Returns the total task configurations from a global scope without any data.

    .EXAMPLE
        Get-SentinelOneTaskConfigurations -taskType agents_upgrade -siteIds 225494730938493804

        Returns the first 10 defined task configurations from the defined scope.

    .EXAMPLE
        225494730938493804 | Get-SentinelOneTaskConfigurations -taskType agents_upgrade

        Returns the first 10 defined task configurations from the defined scope.

    .EXAMPLE
        Get-SentinelOneTaskConfigurations -taskType agents_upgrade -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        As of 2022-11
            The "countOnly" parameter doesn't appear to do anything
            The "taskType" "agents_upgrade" pulls the same data as "agent_version_change"

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Tasks/Get-SentinelOneTaskConfigurations.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ParameterSetName = 'index' )]
        [ValidateSet(   'agent_version_change', 'agents_upgrade', 'auto_deploy',
                        'cis_scan', 'gad', 'script_execution'
                    )]
        [String]$taskType,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'createdAt', 'scopeId', 'taskType', 'userId' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$tenant

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/tasks-configuration"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneTaskHasChildScopes {
<#
    .SYNOPSIS
        From a given scope, see if there are scopes under it that have local, explicit tasks.

    .DESCRIPTION
        The Get-SentinelOneTaskHasChildScopes cmdlet gets from a given scope, see if there are
        scopes under it that have local, explicit tasks.

        The response returns True if a sub-scope has a local (not inherited) task configuration.

    .PARAMETER taskType
        Task type.

        Allowed values:
        'agent_version_change', 'agents_upgrade', 'auto_deploy', 'cis_scan', 'gad',
        'script_execution'

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'createdAt', 'scopeId', 'taskType', 'userId'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER tenant
        Indicates a tenant scope request

    .EXAMPLE
        Get-SentinelOneTaskHasChildScopes -taskType agents_upgrade

        From a given scope, see if there are scopes under it that have local, explicit tasks.

        Returns true or false

    .EXAMPLE
        Get-SentinelOneTaskHasChildScopes -taskType agents_upgrade -siteIds 225494730938493804

        From the defined scope, see if there are scopes under it that have local, explicit tasks.

        Returns true or false

    .EXAMPLE
        225494730938493804 | Get-SentinelOneTaskHasChildScopes -taskType agents_upgrade

        From the defined scope, see if there are scopes under it that have local, explicit tasks.

        Returns true or false

    .EXAMPLE
        Get-SentinelOneTaskHasChildScopes -taskType agents_upgrade -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        As of 2022-11
            The "countOnly" parameter doesn't appear to do anything
            The "taskType" "agents_upgrade" pulls the same data as "agent_version_change"
            Look into merging all tasks functions into 1

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Tasks/Get-SentinelOneTaskHasChildScopes.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ParameterSetName = 'index' )]
        [ValidateSet(   'agent_version_change', 'agents_upgrade', 'auto_deploy',
                        'cis_scan', 'gad', 'script_execution'
                    )]
        [String]$taskType,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'createdAt', 'scopeId', 'taskType', 'userId' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$tenant

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/tasks-configuration/has-explicit-subscope"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\tasks\Tasks-GET.ps1' 621
#Region '.\Public\threatIntelligence\ThreatIntelligence-GET.ps1' 0
function Get-SentinelOneThreatIntelligence {
<#
    .SYNOPSIS
        Get the IOCs of a specified Account that match the filter.

    .DESCRIPTION
        The Get-SentinelOneThreatIntelligence cmdlet gets the IOCs of a specified Account
        that match the filter.

        IOCs stands for "Threat Intelligence indicator"

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER batchId
        Unique ID of the uploaded indicators batch.

        Example: "atmtn000000028a881bcf939dc6d92ab55443".

    .PARAMETER category__in
        The categories of the Threat Intelligence indicator,

        Example: The malware type associated with the IOC

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER creationTime__gt
        Returns IOCs created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER creationTime__gte
        Returns IOCs created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER creationTime__lt
        Returns IOCs created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER creationTime__lte
        Returns IOCs created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER creator__contains
        Free-text filter by the user uploaded the Threat Intelligence indicator

        Example: "admin@sentinelone.com".

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER description__contains
        Free-text filter by the description of the indicator

        Example: "Malicious-activity".

    .PARAMETER externalId
        The unique identifier of the indicator as provided by the Threat Intelligence source.

        Example: "e277603e-1060-5ad4-9937-c26c97f1ca68".

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER name__contains
        Free-text filter by the Indicator name (supports multiple values).

        Example: "foo.dll".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'creationTime', 'id', 'source', 'type'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER source
        List of the sources of the identified Threat Intelligence indicator.

        Example: "AlienVault".

    .PARAMETER type
        The type of the Threat Intelligence indicator.

        Allowed values:
        'DNS', 'IPv4', 'IPv6', 'MD5', 'SHA1', 'SHA256', 'URL'

    .PARAMETER updatedAt__gt
        Returns IOCs updated after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__gte
        Returns IOCs updated after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lt
        Returns IOCs updated before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lte
        Returns IOCs updated before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER uploadTime__gt
        The time at which the IOCs was uploaded to SentinelOne DB greater than.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER uploadTime__gte
        The time at which the IOCs was uploaded to SentinelOne DB greater or equal than.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER uploadTime__lt
        The time at which the IOCs was uploaded to SentinelOne DB lesser than.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER uploadTime__lte
        The time at which the IOCs was uploaded to SentinelOne DB lesser or equal than.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER uuids
        A list of included UUIDs.

        Example: "ff819e70af13be381993075eb0ce5f2f6de05b11,ff819e70af13be381993075eb0ce5f2f6de05c22".

    .PARAMETER value
        The value of the Threat Intelligence indicator.

        Example: "175.45.176.1".

    .EXAMPLE
        Get-SentinelOneThreatIntelligence

        Returns the first 10 IOCs from a global scope

    .EXAMPLE
        Get-SentinelOneThreatIntelligence -countOnly

        Returns the total number of IOCs from a global scope

    .EXAMPLE
        Get-SentinelOneThreatIntelligence -creationTime__gt '2018-02-27 14:32'

        Returns the first 10 IOCs that were created after the defined timestamp

        DataTime values are converted to UTC, use -verbose to see the value it is converted to.

    .EXAMPLE
        Get-SentinelOneThreatIntelligence -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/ThreatIntelligence/Get-SentinelOneThreatIntelligence.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$batchId,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$category__in,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$creationTime__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$creationTime__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$creationTime__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$creationTime__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$creator__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$description__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$externalId,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$name__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'creationTime', 'id', 'source', 'type' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$source,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'DNS', 'IPV4', 'IPV6', 'MD5', 'SHA1', 'SHA256', 'URL' )]
        [String]$type,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$uploadTime__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$uploadTime__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$uploadTime__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$uploadTime__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$uuids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$value

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/threat-intelligence/iocs"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                $body += @{ $Key.Key = $universalTime }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\threatIntelligence\ThreatIntelligence-GET.ps1' 417
#Region '.\Public\threatNotes\ThreatNotes-GET.ps1' 0
function Get-SentinelOneThreatNotes {
<#
    .SYNOPSIS
        Get the threat notes that match the filter.

    .DESCRIPTION
        The Get-SentinelOneThreatNotes cmdlet gets the threat notes that
        match the filter.

    .PARAMETER threat_id
        Threat ID.

        Example: "225494730938493804".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER creator__like
        Threat Note creator name (partially or full).

        Example: "John".

    .PARAMETER creatorId
        Threat Note creator ID.

        Example: "225494730938493804".

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'createdAt', 'updatedAt'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .EXAMPLE
        Get-SentinelOneThreatNotes -threat_id 225494730938493804

        Returns the threat notes that match the filter.

    .EXAMPLE
        225494730938493804 | Get-SentinelOneThreatNotes

        Returns the threat notes that match the filter.

    .EXAMPLE
        Get-SentinelOneThreatNotes -threat_id 225494730938493804 -creator__like john

        Returns the threat notes from the defined threat and from the defined creator

    .EXAMPLE
        Get-SentinelOneThreatNotes -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/ThreatNotes/Get-SentinelOneThreatNotes.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$threat_id,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$creator__like,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$creatorId,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'createdAt', 'updatedAt' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/threats/$threat_id/notes"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable', 'threat_id'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                $body += @{ $Key.Key = $universalTime }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\threatNotes\ThreatNotes-GET.ps1' 184
#Region '.\Public\threats\Threats-GET.ps1' 0
function Export-SentinelOneThreatFiles {
<#
    .SYNOPSIS
        Exports a threat file from cloud.

    .DESCRIPTION
        The Export-SentinelOneThreatFiles cmdlet exports a threat file from cloud.

    .PARAMETER threat_id
        Threat ID.

        Example: "225494730938493804".

    .PARAMETER fileName
        Name of the file

        Example: 'MyAgents-2022'

        The default name format is 'threatFile-$threat_id-yyyy-MM-dd_HHmmss'

    .PARAMETER filePath
        The location to save the file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Export-SentinelOneThreatFiles -threat_id 225494730938493804

        Returns a threat file using the defined Ids and saves the results to a in the current working directory

        fileName:
            threatFile-225494730938493804-2022-10-29_105845

    .EXAMPLE
        Export-SentinelOneThreatFiles -threat_id 225494730938493804 -fileName MyCustomFile -filePath C:\Logs -showReport

        Returns a threat file using the defined Ids and saves the results in the defined directory with the defined name
        and opens the location to were the file is saved.

        fileName:
            MyCustomFile

    .NOTES
        As of 2022-11
            Cannot fully validate due to permissions

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Threats/Export-SentinelOneThreatFiles.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$threat_id,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fileName = "threatFile-$threat_id-$( Get-date -Format 'yyyy-MM-dd_HHmmss' )",

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$showReport

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/threats/$threat_id/download-from-cloud"}
        }

        try {

            $fileOutput = "$filePath\$filename"

            if ( (Test-Path -Path $filePath -PathType Container) -eq $false ){
                New-Item -Path $filePath -ItemType Directory > $null
            }

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -OutFile $fileOutput `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $fileOutput -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}



function Export-SentinelOneThreatEvents {
<#
    .SYNOPSIS
        Export threat events in CSV or JSON format.

    .DESCRIPTION
        The Export-SentinelOneThreatEvents cmdlet exports threat events in CSV or JSON format.

        This can pull lots of data that can cause server timeouts so using filters is highly encourage

        The JSON format is more usable than the CSV

    .PARAMETER threat_id
        Threat ID.

        Example: "225494730938493804".

    .PARAMETER format
        Exported file format.

        Allowed values:
        'csv', 'json'

    .PARAMETER eventId
        Filter by a specific process key and its children

    .PARAMETER eventSubTypes
        Filter events by sub-type.

        Allowed values:
        'BEHAVIORALINDICATORS', 'DNS', 'FILECREATION', 'FILEMODIFICATION', 'FILERNAME', 'FILESCAN',
        'HTTP', 'LOGIN', 'LOGOUT', 'MODULE', 'PROCESSCREATION', 'PROCESSMODIFICATION', 'PROCESSTERMINATION',
        'REGISTRYACTION', 'REGKEYCREATE', 'REGKEYDELETE', 'REGKEYEXPORT', 'REGKEYIMPORT', 'REGKEYRENAME',
        'REGKEYSECURITYCHANGED', 'REGVALUECREATE', 'REGVALUEMODIFIED', 'SCHEDTASKDELETE', 'SCHEDTASKREGISTER',
        'SCHEDTASKSTART', 'SCHEDTASKTRIGGER', 'SCHEDTASKUPDATE', 'TCPV4', 'TCPV4LISTEN', 'TCPV6', 'TCPV6LISTEN'

    .PARAMETER eventTypes
        Filter events by sub-type.

        Allowed values:
        'dns', 'events', 'file', 'indicators', 'ip', 'logins', 'module', 'process',
        'registry', 'scheduled_task', 'url'

    .PARAMETER processName__like
        Filter by process name (substring)

    .PARAMETER fileName
        Name of the file

        Example: 'MyAgents-2022'

        The default name format is 'threatEvent-$threat_id-yyyy-MM-dd_HHmmss'

    .PARAMETER filePath
        The location to save the file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Export-SentinelOneThreatEvents -threat_id 225494730938493804 -format csv

        Returns threat events using the defined Ids and saves the results to a csv in the current working directory

        fileName:
            threatEvent-225494730938493804-2022-10-29_105845.csv

    .EXAMPLE
        225494730938493804 | Export-SentinelOneThreatEvents -format csv

        Returns threat events using the defined Ids and saves the results to a csv in the current working directory

        fileName:
            threatEvent-225494730938493804-2022-10-29_105845.csv

    .EXAMPLE
        Export-SentinelOneThreatEvents -threat_id 225494730938493804 -format json -fileName MyCustomFile -filePath C:\Logs -showReport

        Returns threat events using the defined Ids and saves the results in the defined directory with the defined name
        and opens the location to were the file is saved.

        fileName:
            MyCustomFile.json

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Threats/Export-SentinelOneThreatEvents.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$threat_id,

        [Parameter( Mandatory = $true, ParameterSetName = 'index' )]
        [ValidateSet( 'csv', 'json' )]
        [String]$format,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$eventId,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'BEHAVIORALINDICATORS', 'DNS', 'FILECREATION', 'FILEMODIFICATION', 'FILERENAME', 'FILESCAN',
                        'HTTP', 'LOGIN', 'LOGOUT', 'MODULE', 'PROCESSCREATION', 'PROCESSMODIFICATION', 'PROCESSTERMINATION',
                        'REGISTRYACTION', 'REGKEYCREATE', 'REGKEYDELETE', 'REGKEYEXPORT', 'REGKEYIMPORT', 'REGKEYRENAME',
                        'REGKEYSECURITYCHANGED', 'REGVALUECREATE', 'REGVALUEMODIFIED', 'SCHEDTASKDELETE', 'SCHEDTASKREGISTER',
                        'SCHEDTASKSTART', 'SCHEDTASKTRIGGER', 'SCHEDTASKUPDATE', 'TCPV4', 'TCPV4LISTEN', 'TCPV6', 'TCPV6LISTEN'
                    )]
        [String[]]$eventSubTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'dns', 'events', 'file', 'indicators', 'ip', 'logins', 'module',
                        'process', 'registry', 'scheduled_task', 'url'
                    )]
        [String[]]$eventTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$processName__like,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fileName = "threatEvents-$threat_id-$( Get-date -Format 'yyyy-MM-dd_HHmmss' )",

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$showReport

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/export/threats/$threat_id/explore/events"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'fileName', 'filePath', 'showReport', 'threat_id'

        $body = @{}

        if ( $PSCmdlet.ParameterSetName -eq 'index' ) {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if($excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }
        }

        try {

            $fileOutput = "$filePath\$filename.$format"

            if ( (Test-Path -Path $filePath -PathType Container) -eq $false ){
                New-Item -Path $filePath -ItemType Directory > $null
            }

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -OutFile $fileOutput `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $fileOutput -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}



function Export-SentinelOneThreatMitigations {
<#
    .SYNOPSIS
        Export the mitigation report as a CSV file.

    .DESCRIPTION
        The Export-SentinelOneThreatMitigations cmdlet exports the mitigation report
        as a CSV file.

    .PARAMETER report_id
        Mitigation report ID.

        Example: "225494730938493804".

    .PARAMETER fileName
        Name of the file

        Example: 'MyAgents-2022'

        The default name format is 'threatMitigation-$report_id-yyyy-MM-dd_HHmmss'

    .PARAMETER filePath
        The location to save the file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Export-SentinelOneThreatMitigations -report_id 225494730938493804

        Returns the mitigation report using the defined Ids and saves the results to a CSV in the current working directory

        fileName:
            threatMitigation-225494730938493804-2022-10-29_105845.csv

    .EXAMPLE
        225494730938493804 | Export-SentinelOneThreatMitigations

        Returns the mitigation report using the defined Ids and saves the results to a CSV in the current working directory

        fileName:
            threatMitigation-225494730938493804-2022-10-29_105845.csv

    .EXAMPLE
        Export-SentinelOneThreatMitigations -report_id 225494730938493804 -fileName MyCustomFile -filePath C:\Logs -showReport

        Returns the mitigation report using the defined Ids and saves the results in the defined directory with the defined name
        and opens the location to were the file is saved.

        fileName:
            MyCustomFile.csv

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Threats/Export-SentinelOneThreatMitigations.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$report_id,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fileName = "threatMitigation-$report_id-$( Get-date -Format 'yyyy-MM-dd_HHmmss' )",

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$showReport

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/threats/mitigation-report/$report_id"}
        }

        try {

            $fileOutput = "$filePath\$filename.csv"

            if ( (Test-Path -Path $filePath -PathType Container) -eq $false ){
                New-Item -Path $filePath -ItemType Directory > $null
            }

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -OutFile $fileOutput `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $fileOutput -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}



function Export-SentinelOneThreatTimelines {
<#
    .SYNOPSIS
        Export a threat's timeline.

    .DESCRIPTION
        The Export-SentinelOneThreatTimelines cmdlet exports a threat's timeline.

    .PARAMETER threat_id
        Threat ID.

        Example: "225494730938493804".

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER activityTypes
        Return only these activity codes (comma-separated list).

        Example: "52,53,71,72".

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER query
        Full text search for fields: hash, primary_description, secondary_description

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER fileName
        Name of the file

        Example: 'MyAgents-2022'

        The default name format is 'threatTimeline-$threat_id-yyyy-MM-dd_HHmmss'

    .PARAMETER filePath
        The location to save the file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Export-SentinelOneThreatTimelines -threat_id 225494730938493804

        Returns threat timeline using the defined Ids and saves the results to a csv in the current working directory

        fileName:
            threatTimeline-225494730938493804-2022-10-29_105845.csv

    .EXAMPLE
        225494730938493804 | Export-SentinelOneThreatTimelines

        Returns threat timeline using the defined Ids and saves the results to a csv in the current working directory

        fileName:
            threatTimeline-225494730938493804-2022-10-29_105845.csv

    .EXAMPLE
        Export-SentinelOneThreatTimelines -threat_id 225494730938493804 -fileName MyCustomFile -filePath C:\Logs -showReport

        Returns threat timeline using the defined Ids and saves the results in the defined directory with the defined name
        and opens the location to were the file is saved.

        fileName:
            MyCustomFile.csv

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Threats/Export-SentinelOneThreatTimelines.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$threat_id,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$activityTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fileName = "threatTimeline-$threat_id-$( Get-date -Format 'yyyy-MM-dd_HHmmss' )",

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$showReport

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/export/threats/$threat_id/timeline"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'fileName', 'filePath', 'showReport', 'threat_id'

        $body = @{}

        if ( $PSCmdlet.ParameterSetName -eq 'index' ) {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if($excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }
        }

        try {

            $fileOutput = "$filePath\$filename.csv"

            if ( (Test-Path -Path $filePath -PathType Container) -eq $false ){
                New-Item -Path $filePath -ItemType Directory > $null
            }

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -OutFile $fileOutput `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $fileOutput -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}



function Export-SentinelOneThreats {
<#
    .SYNOPSIS
        Exports data of threats that match the filter.

    .DESCRIPTION
        The Export-SentinelOneThreats cmdlet exports data of threats that match the filter.

        Note: Use the filter.
        This command exports only 20,000 items (each datum is an item).

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER agentIds
        List of Agent IDs.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER agentIsActive
        Include Agents currently connected to the Management Console

    .PARAMETER agentMachineTypes
        Include Agent machine types.

        Allowed values:
        'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown'

    .PARAMETER agentMachineTypesNin
        Excluded Agent machine types.

        Allowed values:
        'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown'

    .PARAMETER agentVersions
        Agent versions to include.

        Example: "2.0.0.0,2.1.5.144".

    .PARAMETER agentVersionsNin
        Agent versions not to include.

        Example: "2.0.0.0,2.1.5.144".

    .PARAMETER analystVerdicts
        Filter threats by a specific analyst verdict.

        Allowed values:
        'false_positive', 'suspicious', 'true_positive', 'undefined'

    .PARAMETER analystVerdictsNin
        Exclude threats with specific analyst verdicts.

        Allowed values:
        'false_positive', 'suspicious', 'true_positive', 'undefined'

    .PARAMETER awsRole__contains
        Free-text filter by aws role

    .PARAMETER awsSecurityGroups__contains
        Free-text filter by aws securityGroups

    .PARAMETER awsSubnetIds__contains
        Free-text filter by aws subnet ids

    .PARAMETER azureResourceGroup__contains
        Free-text filter by azure resource group

    .PARAMETER classifications
        List of threat classifications to search

    .PARAMETER classificationsNin
        List of threat classifications not to search

    .PARAMETER classificationSources
        Classification sources list.

        Allowed values:
        'Behavioral', 'Cloud', 'Engine', 'Static'

    .PARAMETER classificationSourcesNin
        Classification sources list to exclude.

        Allowed values:
        'Behavioral', 'Cloud', 'Engine', 'Static'

    .PARAMETER cloudAccount__contains
        Free-text filter by cloud account

    .PARAMETER cloudImage__contains
        Free-text filter by cloud image

    .PARAMETER cloudInstanceId__contains
        Free-text filter by cloud instance id

    .PARAMETER cloudInstanceSize__contains
        Free-text filter by cloud instance size

    .PARAMETER cloudLocation__contains
        Free-text filter by cloud location

    .PARAMETER cloudNetwork__contains
        Free-text filter by cloud network

    .PARAMETER cloudProvider
        Agents from which cloud provider

    .PARAMETER cloudProviderNin
        Exclude Agents from these cloud provider

    .PARAMETER collectionIds
        List of collection IDs to search.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER commandLineArguments__contains
        Free-text filter by threat command line arguments

        Example: "/usr/sbin/,wget".

    .PARAMETER computerName__contains
        Free-text filter by computer name.

        Example: "john-office,WIN".

    .PARAMETER confidenceLevels
        Filter threats by a specific confidence level.

        Allowed values:
        'malicious', 'n/a', 'suspicious'

    .PARAMETER confidenceLevelsNin
        Exclude threats with specific confidence level.

        Allowed values:
        'malicious', 'n/a', 'suspicious'

    .PARAMETER containerImageName__contains
        Free-text filter by the endpoint container image name

    .PARAMETER containerLabels__contains
        Free-text filter by the endpoint container labels

    .PARAMETER containerName__contains
        Free-text filter by the endpoint container name

    .PARAMETER contentHash__contains
        Free-text filter by file content hash

        Example: "5f09bcff3".

    .PARAMETER contentHashes
        List of sha1 hashes to search for.

        Example: "d,d,d,5,0,3,0,a,3,d,0,2,9,f,3,8,4,5,f,c,1,0,5,2,4,1,9,8,2,9,f,0,8,f,3,1,2,2,4,0".

    .PARAMETER countsFor
        comma-separated list of fields to be shown.

        Example: "osTypes,machineTypes".

    .PARAMETER createdAt__gt
        Returns threats created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns threats created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns threats created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns threats created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER detectionAgentDomain__contains
        Free-text filter by Agent domain at detection time

        Example: "sentinel,sentinelone.com".

    .PARAMETER detectionAgentVersion__contains
        Free-text filter by Agent version at detection time

        Example: "1.1.1.1,2.2.".

    .PARAMETER detectionEngines
        Included engines.

        Allowed values:
        'application_control', 'data_files', 'executables', 'exploits', 'lateral_movement',
        'manual', 'penetration', 'pre_execution', 'pre_execution_suspicious', 'pup',
        'remote_shell', 'reputation', 'sentinelone_cloud', 'user_blacklist'

    .PARAMETER detectionEnginesNin
        Excluded engines.

        Allowed values:
        'application_control', 'data_files', 'executables', 'exploits', 'lateral_movement',
        'manual', 'penetration', 'pre_execution', 'pre_execution_suspicious', 'pup',
        'remote_shell', 'reputation', 'sentinelone_cloud', 'user_blacklist'

    .PARAMETER displayName
        Display name

    .PARAMETER engines
        Included engines.

        Allowed values:
        'application_control', 'data_files', 'executables', 'exploits', 'lateral_movement',
        'manual', 'penetration', 'pre_execution', 'pre_execution_suspicious', 'pup',
        'remote_shell', 'reputation', 'sentinelone_cloud', 'user_blacklist'

    .PARAMETER enginesNin
        Excluded engines.

        Allowed values:
        'application_control', 'data_files', 'executables', 'exploits', 'lateral_movement',
        'manual', 'penetration', 'pre_execution', 'pre_execution_suspicious', 'pup',
        'remote_shell', 'reputation', 'sentinelone_cloud', 'user_blacklist'

    .PARAMETER externalTicketExists
        The threat contains ticket number

    .PARAMETER externalTicketId__contains
        Free-text filter by the threat external ticket ID

    .PARAMETER externalTicketIds
        External ticket ID for the threat

    .PARAMETER failedActions
        At least one action failed on the threat

    .PARAMETER filePath__contains
        Free-text filter by file path

        Example: "\MyUser\Downloads".

    .PARAMETER gcpServiceAccount__contains
        Free-text filter by gcp service account

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ids
        A list of Agent IDs.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER incidentStatuses
        Filter threats by a specific incident status.

        Allowed values:
        'in_progress', 'resolved', 'unresolved'

    .PARAMETER incidentStatusesNin
        Exclude threats with specific incident statuses.

        Allowed values:
        'in_progress', 'resolved', 'unresolved'

    .PARAMETER initiatedBy
        Only include threats from specific initiating sources.

        Allowed values:
        'agent_policy', 'cloud_detection', 'console_api', 'dv_command', 'full_disk_scan',
        'on_demand_scan', 'sentinelctl', 'star_active', 'star_manual'

    .PARAMETER initiatedByNin
        Exclude threats with specific initiating sources.

        Allowed values:
        'agent_policy', 'cloud_detection', 'console_api', 'dv_command', 'full_disk_scan',
        'on_demand_scan', 'sentinelctl', 'star_active', 'star_manual'

    .PARAMETER initiatedByUsername__contains
        Free-text filter by the username that initiated that threat

        Example: "John,John Doe".

    .PARAMETER k8sClusterName__contains
        Free-text filter by the endpoint Kubernetes cluster name

    .PARAMETER k8sControllerLabels__contains
        Free-text filter by the endpoint Kubernetes controller labels

    .PARAMETER k8sControllerName__contains
        Free-text filter by the endpoint Kubernetes controller name

    .PARAMETER k8sNamespaceLabels__contains
        Free-text filter by the endpoint Kubernetes namespace labels

    .PARAMETER k8sNamespaceName__contains
        Free-text filter by the endpoint Kubernetes namespace name

    .PARAMETER k8sNodeName__contains
        Free-text filter by the endpoint Kubernetes node name

    .PARAMETER k8sPodLabels__contains
        Free-text filter by the endpoint Kubernetes pod labels

    .PARAMETER k8sPodName__contains
        Free-text filter by the endpoint Kubernetes pod name

    .PARAMETER mitigatedPreemptively
        If the threat was detected pre-execution or post-execution

    .PARAMETER mitigationStatuses
        Filter threats by a specific status.

        Allowed values:
        'marked_as_benign', 'mitigated', 'not_mitigated'

    .PARAMETER mitigationStatusesNin
        Filter threats not by a specific status.

        Allowed values:
        'marked_as_benign', 'mitigated', 'not_mitigated'

    .PARAMETER noteExists
        The threat contains at least one note

    .PARAMETER osArchs
        OS architecture.

        Allowed values:
        '32 bit', '64 bit'

    .PARAMETER osNames
        osNames

    .PARAMETER osNamesNin
        osNamesNin

    .PARAMETER osTypes
        Included OS types.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER osTypesNin
        Not included OS types.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER pendingActions
        At least one action is pending for the Agent for the threat

    .PARAMETER publisherName__contains
        Free-text filter by threat's publisher name

        Example: "GOOGLE,Apple Inc.".

    .PARAMETER query
        Full text search for fields:

        threat_details, content_hash, computer_name, file_path, uuid, detection_agent_version,
        realtime_agent_version, detection_agent_domain, command_line_arguments, initiated_by_username,
        storyline, originated_process, k8s_cluster_name, k8s_node_name, k8s_namespace_name,
        k8s_namespace_labels, k8s_controller_name, k8s_controller_labels, k8s_pod_name, k8s_pod_labels,
        container_name, container_image_name, container_labels, external_ticket_id

    .PARAMETER realtimeAgentVersion__contains
        Free-text filter by Agent version at current time

        Example: "1.1.1.1,2.2.".

    .PARAMETER rebootRequired
        A reboot is required on any endpoint for at least one action on the threat

    .PARAMETER resolved
        This is used for backward-compatibility with API 2.0.

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER storyline__contains
        Free-text filter by threat storyline

        Example: "0000C2E97648,0006FC73-77B4-470F-AAC7-".

    .PARAMETER storylines
        List of Agent context to search for

    .PARAMETER tenant
        Indicates a tenant scope request

    .PARAMETER threatDetails__contains
        Free-text filter by threat details

        Example: "malware.exe,virus.exe".

    .PARAMETER updatedAt__gt
        Returns threats updated after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__gte
        Returns threats updated after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lt
        Returns threats updated before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lte
        Returns threats updated before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER uuid__contains
        Free-text filter by Agent UUID (supports multiple values).

        Example: "e92-01928,b055".

    .PARAMETER fileName
        Name of the file

        Example: 'MyAgents-2022'

        The default name format is 'threats-yyyy-MM-dd_HHmmss'

    .PARAMETER filePath
        The location to save the file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Export-SentinelOneThreats

        Returns data of threats from a global scope and saves the results to a csv
        in the current working directory.

        fileName:
            threats-2022-10-29_105845.csv

        If the data is over 20k then this will no work

    .EXAMPLE
        Export-SentinelOneThreats -siteIds 225494730938493804

        Returns data of threats from a defined scope and saves the results to a csv
        in the current working directory.

        fileName:
            threats-2022-10-29_105845.csv

    .EXAMPLE
        225494730938493804 | Export-SentinelOneThreats

        Returns data of threats from a defined scope and saves the results to a csv
        in the current working directory.

        fileName:
            threats-2022-10-29_105845.csv

    .EXAMPLE
        Export-SentinelOneThreats -createdAt__gt '2018-02-27 14:32'

        Returns threats that were created after the defined dataTime and saves the results
        to a csv in the current working directory.

        DataTime values are converted to UTC, use -verbose to see the value it is converted to.

    .EXAMPLE
        Export-SentinelOneThreats -siteIds 225494730938493804 -fileName MyCustomFile -filePath C:\Logs -showReport

        Returns threat from the defined siteIds and saves the results in the defined directory with the defined name
        and opens the location to were the file is saved.

        fileName:
            MyCustomFile.csv

    .NOTES
        Review\validate every parameter & parameter help

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Threats/Export-SentinelOneThreats.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$agentIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$agentIsActive,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown' )]
        [String[]]$agentMachineTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown' )]
        [String[]]$agentMachineTypesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentVersions,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentVersionsNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'false_positive', 'suspicious', 'true_positive', 'undefined' )]
        [String[]]$analystVerdicts,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'false_positive', 'suspicious', 'true_positive', 'undefined' )]
        [String[]]$analystVerdictsNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$awsRole__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$awsSecurityGroups__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$awsSubnetIds__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$azureResourceGroup__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$classifications,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$classificationsNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Behavioral', 'Cloud', 'Engine', 'Static' )]
        [String[]]$classificationSources,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Behavioral', 'Cloud', 'Engine', 'Static' )]
        [String[]]$classificationSourcesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudAccount__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudImage__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudInstanceId__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudInstanceSize__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudLocation__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudNetwork__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudProvider,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudProviderNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$collectionIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$commandLineArguments__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$computerName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'malicious', 'n/a', 'suspicious' )]
        [String[]]$confidenceLevels,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'malicious', 'n/a', 'suspicious' )]
        [String[]]$confidenceLevelsNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$containerImageName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$containerLabels__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$containerName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$contentHash__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$contentHashes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$countsFor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$detectionAgentDomain__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$detectionAgentVersion__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'application_control', 'data_files', 'executables', 'exploits', 'lateral_movement',
                        'manual', 'penetration', 'pre_execution', 'pre_execution_suspicious', 'pup',
                        'remote_shell', 'reputation', 'sentinelone_cloud', 'user_blacklist'
                    )]
        [String[]]$detectionEngines,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'application_control', 'data_files', 'executables', 'exploits', 'lateral_movement',
                        'manual', 'penetration', 'pre_execution', 'pre_execution_suspicious', 'pup',
                        'remote_shell', 'reputation', 'sentinelone_cloud', 'user_blacklist'
                    )]
        [String[]]$detectionEnginesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$displayName,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'application_control', 'data_files', 'executables', 'exploits', 'lateral_movement',
                        'manual', 'penetration', 'pre_execution', 'pre_execution_suspicious', 'pup',
                        'remote_shell', 'reputation', 'sentinelone_cloud', 'user_blacklist'
                    )]
        [String[]]$engines,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'application_control', 'data_files', 'executables', 'exploits', 'lateral_movement',
                        'manual', 'penetration', 'pre_execution', 'pre_execution_suspicious', 'pup',
                        'remote_shell', 'reputation', 'sentinelone_cloud', 'user_blacklist'
                    )]
        [String[]]$enginesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$externalTicketExists,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$externalTicketId__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$externalTicketIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$failedActions,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$filePath__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$gcpServiceAccount__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'in_progress', 'resolved', 'unresolved' )]
        [String[]]$incidentStatuses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'in_progress', 'resolved', 'unresolved' )]
        [String[]]$incidentStatusesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'agent_policy', 'cloud_detection', 'console_api', 'dv_command', 'full_disk_scan',
                        'on_demand_scan', 'sentinelctl', 'star_active', 'star_manual'
                    )]
        [String[]]$initiatedBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'agent_policy', 'cloud_detection', 'console_api', 'dv_command', 'full_disk_scan',
                        'on_demand_scan', 'sentinelctl', 'star_active', 'star_manual'
                    )]
        [String[]]$initiatedByNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$initiatedByUsername__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sClusterName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sControllerLabels__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sControllerName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sNamespaceLabels__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sNamespaceName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sNodeName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sPodLabels__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sPodName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$mitigatedPreemptively,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'marked_as_benign', 'mitigated', 'not_mitigated' )]
        [String[]]$mitigationStatuses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'marked_as_benign', 'mitigated', 'not_mitigated' )]
        [String[]]$mitigationStatusesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$noteExists,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( '32 bit', '64 bit' )]
        [String[]]$osArchs,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$osNames,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$osNamesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'linux', 'macos', 'windows', 'windows_legacy' )]
        [String[]]$osTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'linux', 'macos', 'windows', 'windows_legacy' )]
        [String[]]$osTypesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$pendingActions,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$publisherName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$realtimeAgentVersion__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$rebootRequired,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$resolved,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$storyline__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$storylines,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$tenant,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$threatDetails__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$uuid__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fileName = "threats-$( Get-date -Format 'yyyy-MM-dd_HHmmss' )",

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$showReport

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/threats/export"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'fileName', 'filePath', 'showReport'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                $body += @{ $Key.Key = $universalTime }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {

            $fileOutput = "$filePath\$filename.csv"

            if ( (Test-Path -Path $filePath -PathType Container) -eq $false ){
                New-Item -Path $filePath -ItemType Directory > $null
            }

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -OutFile $fileOutput `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $fileOutput -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}



function Get-SentinelOneThreatEvents {
<#
    .SYNOPSIS
        Get all threat events.

    .DESCRIPTION
        The Get-SentinelOneThreatEvents cmdlet gets all threat events.

    .PARAMETER threat_id
        Threat ID.

        Example: "225494730938493804".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items. Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER eventId
        Filter by a specific process key and its children

    .PARAMETER eventSubTypes
        Filter events by sub-type.

        Allowed values:
        'BEHAVIORALINDICATORS', 'DNS', 'FILECREATION', 'FILEMODIFICATION', 'FILERNAME', 'FILESCAN',
        'HTTP', 'LOGIN', 'LOGOUT', 'MODULE', 'PROCESSCREATION', 'PROCESSMODIFICATION', 'PROCESSTERMINATION',
        'REGISTRYACTION', 'REGKEYCREATE', 'REGKEYDELETE', 'REGKEYEXPORT', 'REGKEYIMPORT', 'REGKEYRENAME',
        'REGKEYSECURITYCHANGED', 'REGVALUECREATE', 'REGVALUEMODIFIED', 'SCHEDTASKDELETE', 'SCHEDTASKREGISTER',
        'SCHEDTASKSTART', 'SCHEDTASKTRIGGER', 'SCHEDTASKUPDATE', 'TCPV4', 'TCPV4LISTEN', 'TCPV6', 'TCPV6LISTEN'

    .PARAMETER eventTypes
        Filter events by sub-type.

        Allowed values:
        'dns', 'events', 'file', 'indicators', 'ip', 'logins', 'module', 'process',
        'registry', 'scheduled_task', 'url'

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER processName__like
        Filter by process name (substring)

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'createdBy', 'eventType', 'fileSize', 'id', 'pid', 'processName',
        'registryClassification', 'registryId', 'registryPath'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc

    .EXAMPLE
        Get-SentinelOneThreatEvents -threat_id 225494730938493804

        Returns the first 10 threat events from the defined id

    .EXAMPLE
        225494730938493804 | Get-SentinelOneThreatEvents

        Returns the first 10 threat events from the defined id

    .EXAMPLE
        Get-SentinelOneThreatEvents -threat_id 225494730938493804 -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Threats/Get-SentinelOneThreatEvents.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$threat_id,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$eventId,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'BEHAVIORALINDICATORS', 'DNS', 'FILECREATION', 'FILEMODIFICATION', 'FILERENAME', 'FILESCAN',
                        'HTTP', 'LOGIN', 'LOGOUT', 'MODULE', 'PROCESSCREATION', 'PROCESSMODIFICATION', 'PROCESSTERMINATION',
                        'REGISTRYACTION', 'REGKEYCREATE', 'REGKEYDELETE', 'REGKEYEXPORT', 'REGKEYIMPORT', 'REGKEYRENAME',
                        'REGKEYSECURITYCHANGED', 'REGVALUECREATE', 'REGVALUEMODIFIED', 'SCHEDTASKDELETE', 'SCHEDTASKREGISTER',
                        'SCHEDTASKSTART', 'SCHEDTASKTRIGGER', 'SCHEDTASKUPDATE', 'TCPV4', 'TCPV4LISTEN', 'TCPV6', 'TCPV6LISTEN'
                    )]
        [String[]]$eventSubTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'dns', 'events', 'file', 'indicators', 'ip', 'logins', 'module',
                        'process', 'registry', 'scheduled_task', 'url'
                    )]
        [String[]]$eventTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$processName__like,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'createdBy', 'eventType', 'fileSize', 'id', 'pid', 'processName',
                        'registryClassification', 'registryId', 'registryPath'
                    )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/threats/$threat_id/explore/events"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'threat_id'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}


function Get-SentinelOneThreatExclusionTypes {
<#
    .SYNOPSIS
        Get the Exclusion types that can be created from the detection data.

    .DESCRIPTION
        The Get-SentinelOneThreatExclusionTypes cmdlet gets the Exclusion types that
        can be created from the detection data.

        For example, if a threat is a file with a detected SHA1 hash and pathname,
        the values of the whiteningOptions in the response are "path" and "file_hash".

        This command requires the ID of the threat, which you can get from "threats"
        (see Get Threats).

    .PARAMETER threat_id
        Threat ID.

        Example: "225494730938493804".

    .EXAMPLE
        Get-SentinelOneThreatExclusionTypes -threat_id 225494730938493804

        Returns the exclusion types that can be created from the detection data.

    .EXAMPLE
        225494730938493804 | Get-SentinelOneThreatExclusionTypes

        Returns the exclusion types that can be created from the detection data.

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Threats/Get-SentinelOneThreatExclusionTypes.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$threat_id
    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/threats/$threat_id/whitening-options"}
        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneThreatTimelines {
<#
    .SYNOPSIS
        Get a threat's timeline.

    .DESCRIPTION
        The Get-SentinelOneThreatTimelines cmdlet gets a threat's timeline.

    .PARAMETER threat_id
        Threat ID.

        Example: "225494730938493804".

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER activityTypes
        Return only these activity codes (comma-separated list).

        Example: "52,53,71,72".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Example: "YWdlbnRfaWQ6NTgwMjkzODE="

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER query
        Full text search for fields: hash, primary_description, secondary_description

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'activityType', 'createdAt', 'hash', 'primaryDescription', 'secondaryDescription'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc

    .EXAMPLE
        Get-SentinelOneThreatTimelines -threat_id 225494730938493804

        Returns the first 10 threat timeline data using the defined Ids

    .EXAMPLE
        225494730938493804 | Get-SentinelOneThreatTimelines

        Returns the first 10 threat timeline data using the defined Ids

    .EXAMPLE
        Get-SentinelOneThreatTimelines -threat_id 225494730938493804 -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Threats/Get-SentinelOneThreatTimelines.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$threat_id,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$activityTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'activityType', 'createdAt', 'hash', 'primaryDescription', 'secondaryDescription' )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder


    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/threats/$threat_id/timeline"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'threat_id'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneThreats {
<#
    .SYNOPSIS
        Get data of threats that match the filter.

    .DESCRIPTION
        The Get-SentinelOneThreats cmdlet gets data of threats that match the filter.

        This can pull lots of data so using filters is highly encourage

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER agentIds
        List of Agent IDs.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER agentIsActive
        Include Agents currently connected to the Management Console

    .PARAMETER agentMachineTypes
        Include Agent machine types.

        Allowed values:
        'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown'

    .PARAMETER agentMachineTypesNin
        Excluded Agent machine types.

        Allowed values:
        'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown'

    .PARAMETER agentVersions
        Agent versions to include.

        Example: "2.0.0.0,2.1.5.144".

    .PARAMETER agentVersionsNin
        Agent versions not to include.

        Example: "2.0.0.0,2.1.5.144".

    .PARAMETER analystVerdicts
        Filter threats by a specific analyst verdict.

        Allowed values:
        'false_positive', 'suspicious', 'true_positive', 'undefined'

    .PARAMETER analystVerdictsNin
        Exclude threats with specific analyst verdicts.

        Allowed values:
        'false_positive', 'suspicious', 'true_positive', 'undefined'

    .PARAMETER awsRole__contains
        Free-text filter by aws role

    .PARAMETER awsSecurityGroups__contains
        Free-text filter by aws securityGroups

    .PARAMETER awsSubnetIds__contains
        Free-text filter by aws subnet ids

    .PARAMETER azureResourceGroup__contains
        Free-text filter by azure resource group

    .PARAMETER classifications
        List of threat classifications to search

    .PARAMETER classificationsNin
        List of threat classifications not to search

    .PARAMETER classificationSources
        Classification sources list.

        Allowed values:
        'Behavioral', 'Cloud', 'Engine', 'Static'

    .PARAMETER classificationSourcesNin
        Classification sources list to exclude.

        Allowed values:
        'Behavioral', 'Cloud', 'Engine', 'Static'

    .PARAMETER cloudAccount__contains
        Free-text filter by cloud account

    .PARAMETER cloudImage__contains
        Free-text filter by cloud image

    .PARAMETER cloudInstanceId__contains
        Free-text filter by cloud instance id

    .PARAMETER cloudInstanceSize__contains
        Free-text filter by cloud instance size

    .PARAMETER cloudLocation__contains
        Free-text filter by cloud location

    .PARAMETER cloudNetwork__contains
        Free-text filter by cloud network

    .PARAMETER cloudProvider
        Agents from which cloud provider

    .PARAMETER cloudProviderNin
        Exclude Agents from these cloud provider

    .PARAMETER collectionIds
        List of collection IDs to search.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER commandLineArguments__contains
        Free-text filter by threat command line arguments

        Example: "/usr/sbin/,wget".

    .PARAMETER computerName__contains
        Free-text filter by computer name.

        Example: "john-office,WIN".

    .PARAMETER confidenceLevels
        Filter threats by a specific confidence level.

        Allowed values:
        'malicious', 'n/a', 'suspicious'

    .PARAMETER confidenceLevelsNin
        Exclude threats with specific confidence level.

        Allowed values:
        'malicious', 'n/a', 'suspicious'

    .PARAMETER containerImageName__contains
        Free-text filter by the endpoint container image name

    .PARAMETER containerLabels__contains
        Free-text filter by the endpoint container labels

    .PARAMETER containerName__contains
        Free-text filter by the endpoint container name

    .PARAMETER contentHash__contains
        Free-text filter by file content hash

        Example: "5f09bcff3".

    .PARAMETER contentHashes
        List of sha1 hashes to search for.

        Example: "d,d,d,5,0,3,0,a,3,d,0,2,9,f,3,8,4,5,f,c,1,0,5,2,4,1,9,8,2,9,f,0,8,f,3,1,2,2,4,0".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER countsFor
        comma-separated list of fields to be shown.

        Example: "osTypes,machineTypes".

    .PARAMETER createdAt__gt
        Returns threats created after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__gte
        Returns threats created after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lt
        Returns threats created before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER createdAt__lte
        Returns threats created before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER detectionAgentDomain__contains
        Free-text filter by Agent domain at detection time

        Example: "sentinel,sentinelone.com".

    .PARAMETER detectionAgentVersion__contains
        Free-text filter by Agent version at detection time

        Example: "1.1.1.1,2.2.".

    .PARAMETER detectionEngines
        Included engines.

        Allowed values:
        'application_control', 'data_files', 'executables', 'exploits', 'lateral_movement',
        'manual', 'penetration', 'pre_execution', 'pre_execution_suspicious', 'pup',
        'remote_shell', 'reputation', 'sentinelone_cloud', 'user_blacklist'

    .PARAMETER detectionEnginesNin
        Excluded engines.

        Allowed values:
        'application_control', 'data_files', 'executables', 'exploits', 'lateral_movement',
        'manual', 'penetration', 'pre_execution', 'pre_execution_suspicious', 'pup',
        'remote_shell', 'reputation', 'sentinelone_cloud', 'user_blacklist'

    .PARAMETER displayName
        Display name

    .PARAMETER engines
        Included engines.

        Allowed values:
        'application_control', 'data_files', 'executables', 'exploits', 'lateral_movement',
        'manual', 'penetration', 'pre_execution', 'pre_execution_suspicious', 'pup',
        'remote_shell', 'reputation', 'sentinelone_cloud', 'user_blacklist'

    .PARAMETER enginesNin
        Excluded engines.

        Allowed values:
        'application_control', 'data_files', 'executables', 'exploits', 'lateral_movement',
        'manual', 'penetration', 'pre_execution', 'pre_execution_suspicious', 'pup',
        'remote_shell', 'reputation', 'sentinelone_cloud', 'user_blacklist'

    .PARAMETER externalTicketExists
        The threat contains ticket number

    .PARAMETER externalTicketId__contains
        Free-text filter by the threat external ticket ID

    .PARAMETER externalTicketIds
        External ticket ID for the threat

    .PARAMETER failedActions
        At least one action failed on the threat

    .PARAMETER filePath__contains
        Free-text filter by file path

        Example: "\MyUser\Downloads".

    .PARAMETER gcpServiceAccount__contains
        Free-text filter by gcp service account

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER ids
        A list of Agent IDs.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER incidentStatuses
        Filter threats by a specific incident status.

        Allowed values:
        'in_progress', 'resolved', 'unresolved'

    .PARAMETER incidentStatusesNin
        Exclude threats with specific incident statuses.

        Allowed values:
        'in_progress', 'resolved', 'unresolved'

    .PARAMETER initiatedBy
        Only include threats from specific initiating sources.

        Allowed values:
        'agent_policy', 'cloud_detection', 'console_api', 'dv_command', 'full_disk_scan',
        'on_demand_scan', 'sentinelctl', 'star_active', 'star_manual'

    .PARAMETER initiatedByNin
        Exclude threats with specific initiating sources.

        Allowed values:
        'agent_policy', 'cloud_detection', 'console_api', 'dv_command', 'full_disk_scan',
        'on_demand_scan', 'sentinelctl', 'star_active', 'star_manual'

    .PARAMETER initiatedByUsername__contains
        Free-text filter by the username that initiated that threat

        Example: "John,John Doe".

    .PARAMETER k8sClusterName__contains
        Free-text filter by the endpoint Kubernetes cluster name

    .PARAMETER k8sControllerLabels__contains
        Free-text filter by the endpoint Kubernetes controller labels

    .PARAMETER k8sControllerName__contains
        Free-text filter by the endpoint Kubernetes controller name

    .PARAMETER k8sNamespaceLabels__contains
        Free-text filter by the endpoint Kubernetes namespace labels

    .PARAMETER k8sNamespaceName__contains
        Free-text filter by the endpoint Kubernetes namespace name

    .PARAMETER k8sNodeName__contains
        Free-text filter by the endpoint Kubernetes node name

    .PARAMETER k8sPodLabels__contains
        Free-text filter by the endpoint Kubernetes pod labels

    .PARAMETER k8sPodName__contains
        Free-text filter by the endpoint Kubernetes pod name

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER mitigatedPreemptively
        If the threat was detected pre-execution or post-execution

    .PARAMETER mitigationStatuses
        Filter threats by a specific status.

        Allowed values:
        'marked_as_benign', 'mitigated', 'not_mitigated'

    .PARAMETER mitigationStatusesNin
        Filter threats not by a specific status.

        Allowed values:
        'marked_as_benign', 'mitigated', 'not_mitigated'

    .PARAMETER noteExists
        The threat contains at least one note

    .PARAMETER osArchs
        OS architecture.

        Allowed values:
        '32 bit', '64 bit'

    .PARAMETER osNames
        osNames

    .PARAMETER osNamesNin
        osNamesNin

    .PARAMETER osTypes
        Included OS types.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER osTypesNin
        Not included OS types.

        Allowed values:
        'linux', 'macos', 'windows', 'windows_legacy'

    .PARAMETER pendingActions
        At least one action is pending for the Agent for the threat

    .PARAMETER publisherName__contains
        Free-text filter by threat's publisher name

        Example: "GOOGLE,Apple Inc.".

    .PARAMETER query
        Full text search for fields:

        threat_details, content_hash, computer_name, file_path, uuid, detection_agent_version,
        realtime_agent_version, detection_agent_domain, command_line_arguments, initiated_by_username,
        storyline, originated_process, k8s_cluster_name, k8s_node_name, k8s_namespace_name,
        k8s_namespace_labels, k8s_controller_name, k8s_controller_labels, k8s_pod_name, k8s_pod_labels,
        container_name, container_image_name, container_labels, external_ticket_id

    .PARAMETER realtimeAgentVersion__contains
        Free-text filter by Agent version at current time

        Example: "1.1.1.1,2.2.".

    .PARAMETER rebootRequired
        A reboot is required on any endpoint for at least one action on the threat

    .PARAMETER resolved
        This is used for backward-compatibility with API 2.0.

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'agentComputerName', 'agentMachineType', 'agentVersion', 'classification', 'cloudAccount',
        'cloudImage', 'cloudInstanceId', 'cloudInstanceSize', 'cloudLocation', 'cloudNetwork',
        'collectionId', 'contentHash', 'createdAt', 'createdDate', 'fileDisplayName', 'filePath',
        'id', 'mitigationStatus', 'siteId', 'siteName', 'updatedAt'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER storyline__contains
        Free-text filter by threat storyline

        Example: "0000C2E97648,0006FC73-77B4-470F-AAC7-".

    .PARAMETER storylines
        List of Agent context to search for

    .PARAMETER tenant
        Indicates a tenant scope request

    .PARAMETER threatDetails__contains
        Free-text filter by threat details

        Example: "malware.exe,virus.exe".

    .PARAMETER updatedAt__gt
        Returns threats updated after this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__gte
        Returns threats updated after or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lt
        Returns threats updated before this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER updatedAt__lte
        Returns threats updated before or at this timestamp.

        Inputted data is converted to UTC time

        Example:
        yyyy-MM-ddTHH:mm:ss.ffffffZ
        2018-02-27T04:49:26.257525Z

    .PARAMETER uuid__contains
        Free-text filter by Agent UUID (supports multiple values).

        Example: "e92-01928,b055".

    .EXAMPLE
        Get-SentinelOneThreats

        Returns the first 10 threats from a global scope

    .EXAMPLE
        Get-SentinelOneThreats -countOnly

        Returns the total number of threats from a global scope with any data

    .EXAMPLE
        Get-SentinelOneThreats -siteIds 225494730938493804

        Returns the first 10 threats from the defined siteId

    .EXAMPLE
        225494730938493804 | Get-SentinelOneThreats

        Returns the first 10 threats from the defined siteId

    .EXAMPLE
        Get-SentinelOneThreats -createdAt__gt '2018-02-27 14:32'

        Returns the first 10 threats that were created after the defined timestamp

        DataTime values are converted to UTC, use -verbose to see the value it is converted to.

    .EXAMPLE
        Get-SentinelOneThreats -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        Review\validate every parameter & parameter help

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Threats/Get-SentinelOneThreats.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$agentIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$agentIsActive,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown' )]
        [String[]]$agentMachineTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'desktop', 'kubernetes node', 'laptop', 'server', 'storage', 'unknown' )]
        [String[]]$agentMachineTypesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentVersions,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$agentVersionsNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'false_positive', 'suspicious', 'true_positive', 'undefined' )]
        [String[]]$analystVerdicts,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'false_positive', 'suspicious', 'true_positive', 'undefined' )]
        [String[]]$analystVerdictsNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$awsRole__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$awsSecurityGroups__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$awsSubnetIds__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$azureResourceGroup__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$classifications,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$classificationsNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Behavioral', 'Cloud', 'Engine', 'Static' )]
        [String[]]$classificationSources,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Behavioral', 'Cloud', 'Engine', 'Static' )]
        [String[]]$classificationSourcesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudAccount__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudImage__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudInstanceId__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudInstanceSize__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudLocation__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudNetwork__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudProvider,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$cloudProviderNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$collectionIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$commandLineArguments__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$computerName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'malicious', 'n/a', 'suspicious' )]
        [String[]]$confidenceLevels,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'malicious', 'n/a', 'suspicious' )]
        [String[]]$confidenceLevelsNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$containerImageName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$containerLabels__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$containerName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$contentHash__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$contentHashes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$countsFor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$createdAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$detectionAgentDomain__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$detectionAgentVersion__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'application_control', 'data_files', 'executables', 'exploits', 'lateral_movement',
                        'manual', 'penetration', 'pre_execution', 'pre_execution_suspicious', 'pup',
                        'remote_shell', 'reputation', 'sentinelone_cloud', 'user_blacklist'
                    )]
        [String[]]$detectionEngines,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'application_control', 'data_files', 'executables', 'exploits', 'lateral_movement',
                        'manual', 'penetration', 'pre_execution', 'pre_execution_suspicious', 'pup',
                        'remote_shell', 'reputation', 'sentinelone_cloud', 'user_blacklist'
                    )]
        [String[]]$detectionEnginesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$displayName,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'application_control', 'data_files', 'executables', 'exploits', 'lateral_movement',
                        'manual', 'penetration', 'pre_execution', 'pre_execution_suspicious', 'pup',
                        'remote_shell', 'reputation', 'sentinelone_cloud', 'user_blacklist'
                    )]
        [String[]]$engines,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'application_control', 'data_files', 'executables', 'exploits', 'lateral_movement',
                        'manual', 'penetration', 'pre_execution', 'pre_execution_suspicious', 'pup',
                        'remote_shell', 'reputation', 'sentinelone_cloud', 'user_blacklist'
                    )]
        [String[]]$enginesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$externalTicketExists,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$externalTicketId__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$externalTicketIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$failedActions,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$filePath__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$gcpServiceAccount__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'in_progress', 'resolved', 'unresolved' )]
        [String[]]$incidentStatuses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'in_progress', 'resolved', 'unresolved' )]
        [String[]]$incidentStatusesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'agent_policy', 'cloud_detection', 'console_api', 'dv_command', 'full_disk_scan',
                        'on_demand_scan', 'sentinelctl', 'star_active', 'star_manual'
                    )]
        [String[]]$initiatedBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'agent_policy', 'cloud_detection', 'console_api', 'dv_command', 'full_disk_scan',
                        'on_demand_scan', 'sentinelctl', 'star_active', 'star_manual'
                    )]
        [String[]]$initiatedByNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$initiatedByUsername__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sClusterName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sControllerLabels__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sControllerName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sNamespaceLabels__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sNamespaceName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sNodeName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sPodLabels__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$k8sPodName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$mitigatedPreemptively,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'marked_as_benign', 'mitigated', 'not_mitigated' )]
        [String[]]$mitigationStatuses,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'marked_as_benign', 'mitigated', 'not_mitigated' )]
        [String[]]$mitigationStatusesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$noteExists,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( '32 bit', '64 bit' )]
        [String[]]$osArchs,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$osNames,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$osNamesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'linux', 'macos', 'windows', 'windows_legacy' )]
        [String[]]$osTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'linux', 'macos', 'windows', 'windows_legacy' )]
        [String[]]$osTypesNin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$pendingActions,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$publisherName__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$realtimeAgentVersion__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$rebootRequired,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$resolved,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'agentComputerName', 'agentMachineType', 'agentVersion', 'classification', 'cloudAccount',
                        'cloudImage', 'cloudInstanceId', 'cloudInstanceSize', 'cloudLocation', 'cloudNetwork',
                        'collectionId', 'contentHash', 'createdAt', 'createdDate', 'fileDisplayName', 'filePath',
                        'id', 'mitigationStatus', 'siteId', 'siteName', 'updatedAt'
                    )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$storyline__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$storylines,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$tenant,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$threatDetails__contains,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__gte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lt,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [DateTime]$updatedAt__lte,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$uuid__contains

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/threats"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            elseif ( $Key.Value.GetType().FullName -eq 'System.DateTime' ){
                Write-Verbose "[ $($Key.Key) ] is a dateTime parameter"
                $universalTime = ($Key.Value).ToUniversalTime().ToString('yyyy-MM-ddTHH:mm:ss.ffffffZ')

                Write-Verbose "Converting [ $($Key.Value) ] to [ $universalTime ]"
                $body += @{ $Key.Key = $universalTime }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\threats\Threats-GET.ps1' 3125
#Region '.\Public\updates\Updates-GET.ps1' 0
function Export-SentinelOneUpdatePackages {
<#
    .SYNOPSIS
        Download a package by site_id ("sites") and filename.

    .DESCRIPTION
        The Export-SentinelOneUpdatePackages cmdlet downloads a package by site_id ("sites") and filename.

        Rate limit: 2 call per minute for each user token.

        Use this command to manually deploy Agent updates that cannot be deployed with the update-software command
        (see Agent Actions > Update Software) or through the Console.

    .PARAMETER package_id
        Package ID.

        Example: "225494730938493804".

    .PARAMETER site_id
        Site ID.

        Example: "225494730938493804".

    .PARAMETER fileName
        Name of the file

        Example: 'MyAgents-2022'

        The default name format is the value provided via the Get-SentinelOneUpdatePackage output

    .PARAMETER filePath
        The location to save the file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        (Get-SentinelOneUpdatePackage).data

        accounts      : {}
        createdAt     : 2022-06-28T19:43:11.769997Z
        fileExtension : .exe
        fileName      : SentinelInstaller-x64_windows_64bit_v21_7_7_40005.exe
        fileSize      : 65584632
        id            : 2933246047469261096
        link          : https://carvir-msp02.sentinelone.net/web/api/v2.1/update/agent/download/225494730938493804/325494730938493905
        majorVersion  : 21.7
        minorVersion  : SP4
        osArch        : 64 bit
        osType        : windows
        packageType   : AgentAndRanger
        platformType  : windows
        rangerVersion : 21.11.0.75
        scopeLevel    : global
        sha1          : bc0c76f95a0d29d23cbc7878ab081e3e6920bbc0
        sites         : {}
        status        : ga
        updatedAt     : 2022-08-17T18:51:26.989325Z
        version       : 21.7.7.40005

    .EXAMPLE
        Export-SentinelOneUpdatePackages -package_id 325494730938493905 -siteId 225494730938493804

        Download a package from the defined site using the defined package id

        fileName: (see example data above)
            SentinelInstaller-x64_windows_64bit_v21_7_7_40005.exe

    .EXAMPLE
        Export-SentinelOneUpdatePackages -package_id 325494730938493905 -siteId 225494730938493804 -fileName MyCustomFile -filePath C:\Logs -showReport

        Download a package from the defined site using the defined package id. The package is then stored in the
        defined directory with the defined name and opens the location to were the file is saved.

        fileName: (see example data above)
            MyCustomFile.exe

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Updates/Export-SentinelOneUpdatePackages.html
#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$package_id,

        [Parameter( Mandatory = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$site_id,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fileName,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$showReport

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/update/agent/download/$site_id/$package_id"}
        }

        try {

            $PackageData = ( Get-SentinelOneUpdatePackages -ids $package_id -siteIds $site_id -Verbose:$false ).data

            Switch ([bool]$fileName){
                    $true   { $fileName = $fileName + $PackageData.fileExtension}
                    $false  { $fileName = $PackageData.fileName }
                }

            $fileOutput = "$filePath\$filename"

            if ( (Test-Path -Path $filePath -PathType Container) -eq $false ){
                New-Item -Path $filePath -ItemType Directory > $null
            }

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -OutFile $fileOutput `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $fileOutput -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}



function Get-SentinelOneUpdatePackages {
<#
    .SYNOPSIS
        Get the Agent packages that are uploaded to your Management.

    .DESCRIPTION
        The Get-SentinelOneUpdatePackages cmdlet get the Agent packages that are
        uploaded to your Management.

        The response shows the data of each package, including the IDs,
        which you can use in other commands.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Found under pagination

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER fileExtension
        File extension.

        Allowed values:
        '.bsx', '.deb', '.exe', '.gz', '.img', '.msi', '.pkg', '.rpm', '.tar', '.zip', 'unknown'

    .PARAMETER ids
        Package ID list.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER limit
        Limit number of returned items (1-1000).

    .PARAMETER minorVersion
        Package minor version

    .PARAMETER osArches
        Package OS architecture (32/64 bit), applicable to Windows packages only.

        Allowed values:
        '32 bit', '32/64 bit', '64 bit', 'N/A'

    .PARAMETER osTypes
        Os type in.

        Allowed values:
        'linux', 'linux_k8s', 'macos', 'sdk', 'windows', 'windows_legacy'

    .PARAMETER packageType
        Package type.

        Allowed values:
        'Agent', 'AgentAndRanger', 'Ranger'

    .PARAMETER packageTypes
        Package type in.

        Allowed values:
        'Agent', 'AgentAndRanger', 'Ranger'

    .PARAMETER platformTypes
        Platform type in.

        Allowed values:
        'linux', 'linux_k8s', 'macos', 'sdk', 'windows', 'windows_legacy'

    .PARAMETER query
        A free-text search term, will match applicable attributes (sub-String match).

        Note: Device's physical addresses will be matched if they start with the search term only (no match if they contain the term).

        Example: "Linux".

    .PARAMETER rangerVersion
        Ranger version.

        Example: "2.5.1.1320".

    .PARAMETER sha1
        Package hash.

        Example: "2fd4e1c67a2d28fced849ee1bb76e7391b93eb12".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'accessLevel', 'createdAt', 'fileExtension', 'fileName', 'fileSize', 'id', 'majorVersion',
        'minorVersion', 'osType', 'packageType', 'platformType', 'rangerVersion', 'scopeLevel',
        'sha1', 'status', 'updatedAt', 'version'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .EXAMPLE
        Get-SentinelOneUpdatePackages

        Returns the first 10 update packages that are uploaded to your Management console.

    .EXAMPLE
        Get-SentinelOneUpdatePackages -osTypes windows

        Returns the first 10 update packages for Windows systems that are uploaded to your Management console.

    .EXAMPLE
        Get-SentinelOneUpdatePackages -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        As of 2022-11
            The "countOnly" parameter returns a 500 error when used
            The value of "scopeLevel" in the "sortBy" parameter returns a validation error

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Updates/Get-SentinelOneUpdatePackages.html

#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( '.bsx', '.deb', '.exe', '.gz', '.img', '.msi', '.pkg', '.rpm', '.tar', '.zip', 'unknown' )]
        [String]$fileExtension,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$minorVersion,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( '32 bit', '32/64 bit', '64 bit', 'N/A' )]
        [String[]]$osArches,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'linux', 'linux_k8s', 'macos', 'sdk', 'windows', 'windows_legacy' )]
        [String[]]$osTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Agent', 'AgentAndRanger', 'Ranger' )]
        [String]$packageType,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'Agent', 'AgentAndRanger', 'Ranger' )]
        [String[]]$packageTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'linux', 'linux_k8s', 'macos', 'sdk', 'windows', 'windows_legacy' )]
        [String[]]$platformTypes,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$rangerVersion,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$sha1,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'accessLevel', 'createdAt', 'fileExtension', 'fileName', 'fileSize', 'id',
                        'majorVersion', 'minorVersion', 'osType', 'packageType', 'platformType',
                        'rangerVersion', 'scopeLevel', 'sha1', 'status', 'updatedAt', 'version'
                    )]
        [String]$sortBy

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'  {$resource_uri = "/update/agent/packages"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

            if( $excludedParameters -contains $Key.Key ){$null}
            elseif ( $Key.Value.GetType().IsArray ){
                Write-Verbose "[ $($Key.Key) ] is an array parameter"
                $body += @{ $Key.Key = $Key.Value -join (',') }
            }
            else{
                $body += @{ $Key.Key = $Key.Value }
            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\updates\Updates-GET.ps1' 435
#Region '.\Public\users\Users-GET.ps1' 0
function Get-SentinelOneUserApiToken {
<#
    .SYNOPSIS
        Get the details of the API token generated for a given user.

    .DESCRIPTION
        The Get-SentinelOneUserApiToken cmdlet gets the details of the API token
        generated for a given user.

    .PARAMETER user_id
        User ID.

        Example: "225494730938493804".

    .EXAMPLE
        Get-SentinelOneUserApiToken -user_id 225494730938493804

        Returns the details of the API token generated for a given user.

    .EXAMPLE
        225494730938493804 | Get-SentinelOneUserApiToken

        Returns the details of the API token generated for a given user.

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Users/Get-SentinelOneUserApiToken.html
#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ValueFromPipeline = $true , ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64]$user_id
    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index' {$resource_uri = "/users/$user_id/api-token-details"}
        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneUserAccess {
<#
    .SYNOPSIS
        Checks various access levels for the logged in user

    .DESCRIPTION
        The Get-SentinelOneUserAccess cmdlet checks various access levels
        for the logged in user

    .PARAMETER tenantAdmin
        See if logged in user is a user with the Global scope of access.

    .PARAMETER remoteShell
        See if the logged in user is allowed to use Remote Shell.

    .PARAMETER viewer
        See if the logged in user has only viewer permissions.

        This is the default return

    .EXAMPLE
        Get-SentinelOneUserAccess -tenantAdmin

        Returns if logged in user is a user with the Global scope of access.

    .EXAMPLE
        Get-SentinelOneUserAccess -remoteShell

        Returns if the logged in user is allowed to use Remote Shell.

    .EXAMPLE
        Get-SentinelOneUserAccess -viewer

        Returns if the logged in user has only viewer permissions.

    .NOTES
        Look into combining all three into 1 output object.

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Users/Get-SentinelOneUserAccess.html
#>

    [CmdletBinding( DefaultParameterSetName = 'indexByViewer' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'indexByTenant' )]
        [Switch]$tenantAdmin,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByRemoteShell' )]
        [Switch]$remoteShell,

        [Parameter( Mandatory = $false, ParameterSetName = 'indexByViewer' )]
        [Switch]$viewer
    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'indexByTenant'         {$resource_uri = "/users/tenant-admin-auth-check"}
            'indexByRemoteShell'    {$resource_uri = "/users/rs-auth-check"}
            'indexByViewer'         {$resource_uri = "/users/viewer-auth-check"}
        }

        try {

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Export-SentinelOneUsers {
<#
    .SYNOPSIS
        Export user data to a CSV, for users that match the filter.

    .DESCRIPTION
        The Export-SentinelOneUsers cmdlet exports user data to a CSV, for users
        that match the filter.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER dateJoined
        Date joined.

        Needs to be the exact UTC time

        Example: "2018-02-27T04:49:26.257525Z".

    .PARAMETER email
        Email.

        Example: "admin@sentinelone.com".

    .PARAMETER emailReadOnly
        True if email cannot be changed

    .PARAMETER emailVerified
        Return only verified/unverified users

    .PARAMETER firstLogin
        First login.

        Needs to be the exact UTC time

        Example: "2018-02-27T04:49:26.257525Z".

    .PARAMETER fullName
        Full

    .PARAMETER fullNameReadOnly
        True if full name cannot be changed

    .PARAMETER ids
        List of user IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER lastLogin
        Last login.

        Needs to be the exact UTC time

        Example: "2018-02-27T04:49:26.257525Z".

    .PARAMETER primaryTwoFaMethod
        Primary two fa method

    .PARAMETER query
        Full text search for fields: full_name, email

    .PARAMETER roleIds
        List of rbac roles to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER source
        User Source.

        Allowed values:
        'active_directory', 'mgmt', 'sso_saml'

    .PARAMETER twoFaEnabled
        Two fa enabled

    .PARAMETER fileName
        Name of the file

        Example: 'MyAgents-2022'

        The default name format is 'users-yyyy-MM-dd_HHmmss'

    .PARAMETER filePath
        The location to save the file to

        Example: 'C:\Logs'

        The default save location is the current working directory

    .PARAMETER showReport
        Open the location where the file was saved to

    .EXAMPLE
        Export-SentinelOneUsers

        Returns all users from management and saves the results to a csv in the current working directory

        fileName:
            users-2022-10-29_105845.csv

    .EXAMPLE
        Export-SentinelOneUsers -fileName MyCustomFile -filePath C:\Logs -showReport

        Returns all users from management, saves the results to a csv in the defined directory with the defined name
        and opens the location to were the file is saved.

        fileName:
            MyCustomFile.csv

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Users/Export-SentinelOneUsers.html
#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$dateJoined,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$email,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$emailReadOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$emailVerified,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$firstLogin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fullName,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$fullNameReadOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$lastLogin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$primaryTwoFaMethod,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$roleIds,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'active_directory', 'mgmt', 'sso_saml' )]
        [String]$source,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$twoFaEnabled,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fileName = "users-$( Get-date -Format 'yyyy-MM-dd_HHmmss' )",

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$filePath = $( (Get-Location).Path ),

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$showReport

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'      {$resource_uri = '/export/users'}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'fileName','filePath','showReport'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {

            $fileOutput = "$filePath\$filename.csv"

            if ( (Test-Path -Path $filePath -PathType Container) -eq $false ){
                New-Item -Path $filePath -ItemType Directory > $null
            }

            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -OutFile $fileOutput `
                -ErrorAction Stop -ErrorVariable rest_error

        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        if (Test-Path -Path $fileOutput -PathType Leaf){

            Write-Verbose "[ $($fileName) ] was saved to [ $($filePath) ]"

            if ($showReport){
                Invoke-Item -Path $filePath
            }

        }
        else{Write-Warning "[ $($fileName) ] was not saved to [ $($filePath) ]"}

    }

}



function Get-SentinelOneUsers {
<#
    .SYNOPSIS
        Gets a list of users or a single user

    .DESCRIPTION
        The Get-SentinelOneUsers cmdlet gets a list of users or a single user

        Using the "user_id" parameter will call the "/users/{user_id}" endpoint
        instead of the "/users" endpoint

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER countOnly
        If true, only total number of items will be returned, without any of the actual objects.

    .PARAMETER cursor
        Cursor position returned by the last request. Use to iterate over more than 1000 items.

        Example: "YWdlbnRfaWQ6NTgwMjkzODE=".

    .PARAMETER dateJoined
        Date joined.

        Needs to be the exact UTC time

        Example: "2018-02-27T04:49:26.257525Z".

    .PARAMETER email
        Email.

        Example: "admin@sentinelone.com".

    .PARAMETER emailReadOnly
        True if email cannot be changed

    .PARAMETER emailVerified
        Return only verified/unverified users

    .PARAMETER firstLogin
        First login.

        Needs to be the exact UTC time

        Example: "2018-02-27T04:49:26.257525Z".

    .PARAMETER fullName
        Full

    .PARAMETER fullNameReadOnly
        True if full name cannot be changed

    .PARAMETER ids
        List of user IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER lastLogin
        Last login.

        Needs to be the exact UTC time

        Example: "2018-02-27T04:49:26.257525Z".

    .PARAMETER limit
        Limit number of returned items (1-1000).

        Example: "10".

    .PARAMETER primaryTwoFaMethod
        Primary two fa method

    .PARAMETER query
        Full text search for fields: full_name, email

    .PARAMETER roleIds
        List of rbac roles to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER skip
        Skip first number of items (0-1000). To iterate over more than 1000 items, use "cursor".

        Example: "150".

    .PARAMETER skipCount
        If true, total number of items will not be calculated, which speeds up execution time.

    .PARAMETER sortBy
        Sorts the returned results by a defined value

        Allowed values:
        'apiTokenCreatedAt', 'apiTokenExpiresAt', 'canGenerateApiToken', 'createdAt',
        'dateJoined', 'email', 'emailVerified', 'firstLogin', 'fullName', 'id',
        'lastLogin', 'roleId', 'source', 'twoFaEnabled'

    .PARAMETER sortOrder
        Sort direction

        Allowed values:
        'asc', 'desc'

    .PARAMETER source
        User Source.

        Allowed values:
        'active_directory', 'mgmt', 'sso_saml'

    .PARAMETER twoFaEnabled
        Two fa enabled

    .PARAMETER user_id
        User ID.

        Example: "225494730938493804".

        This calls the "/users/{user_id}" endpoint instead of the "/users" endpoint

    .EXAMPLE
        Get-SentinelOneUsers

        Returns the first 10 users from a global scope

    .EXAMPLE
        Get-SentinelOneUsers -countOnly

        Returns the total amount of users from a global scope without any data

    .EXAMPLE
        Get-SentinelOneUsers -user_id 225494730938493804

        Returns the user with the defined Id.

        This calls the "/users/{user_id}" endpoint instead of the "/users" endpoint

    .EXAMPLE
        Get-SentinelOneUsers -siteIds 225494730938493804

        Returns the first 10 users from the defined siteIds

    .EXAMPLE
        225494730938493804 | Get-SentinelOneUsers

        Returns the first 10 users from the defined siteIds

    .EXAMPLE
        Get-SentinelOneUsers -cursor 'YWdlbnRfaWQ6NTgwMjkzODE='

        Returns data after the first 10 results

        The cursor value can be found under pagination

    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Users/Get-SentinelOneUsers.html
#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$countOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$cursor,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$dateJoined,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$email,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$emailReadOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$emailVerified,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$firstLogin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$fullName,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$fullNameReadOnly,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$ids,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$lastLogin,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$limit,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$primaryTwoFaMethod,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$query,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String[]]$roleIds,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateRange(1, 1000)]
        [Int64]$skip,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$skipCount,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet(   'apiTokenCreatedAt', 'apiTokenExpiresAt', 'canGenerateApiToken', 'createdAt',
                        'dateJoined', 'email', 'emailVerified', 'firstLogin', 'fullName', 'id',
                        'lastLogin', 'roleId', 'source', 'twoFaEnabled'
                    )]
        [String]$sortBy,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'asc', 'desc' )]
        [String]$sortOrder,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateSet( 'active_directory', 'mgmt', 'sso_saml' )]
        [String]$source,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$twoFaEnabled,

        [Parameter( Mandatory = $true, ParameterSetName = 'indexByUser' )]
        [ValidateNotNullOrEmpty()]
        [String]$user_id

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/users"}
            'indexByUser'   {$resource_uri = "/users/$user_id"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable',
                                'user_id'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Connect-SentinelOneUserByToken {
<#
    .SYNOPSIS
        Log in with a user token.

    .DESCRIPTION
        The Connect-SentinelOneUserByToken cmdlet Logs in with a user token.

    .PARAMETER token
        User token.

        Example: "bfd9070c1afa88516d3cdfd722e62fe433e42bad6bxxxxxxx".

    .PARAMETER removedSavedScope
        Removed saved scope

    .EXAMPLE
        Connect-SentinelOneUserByToken -token bfd9070c1afa88516d3cdfd722e62fe433e42bad6bxxxxxxx

        Log in with defined user token.

    .EXAMPLE
        bfd9070c1afa88516d3cdfd722e62fe433e42bad6bxxxxxxx | Connect-SentinelOneUserByToken

        Log in with defined user token.

    .NOTES
        As of 2022-11
            Figure out how to test\use this

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Users/Connect-SentinelOneUserByToken.html
#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $true, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$token,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$removedSavedScope

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/users/login/by-token"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Connect-SentinelOneUserBySSO {
<#
    .SYNOPSIS
        Redirects the login to SSO if SSO is enabled

    .DESCRIPTION
        The Connect-SentinelOneUserBySSO cmdlet redirects the login to SSO if SSO is enabled

        If SSO is enabled for a deployment or scope, and a user attempts to log in
        with name and password, this command redirects the login to SSO.

    .PARAMETER email
        Email address of the user trying to log in.

        Example: "me@sentinelone.com".

    .PARAMETER scopeId
        The scope the desired SSO IdP is configured on. email is irrelevant when
        using scope_id. If both are provided, email is ignored.

        Example: "225494730938493804".

    .EXAMPLE
        Connect-SentinelOneUserBySSO -email me@sentinelone.com

        Redirects the login to SSO if SSO is enabled

    .EXAMPLE
        me@sentinelone.com | Connect-SentinelOneUserBySSO

        Redirects the login to SSO if SSO is enabled

    .NOTES
        As of 2022-11
            Figure out how to test\use this

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Users/Connect-SentinelOneUserBySSO.html
#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$email,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$scopeId

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/users/login/sso-saml2"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneUserByToken {
<#
    .SYNOPSIS
        Get the current users information by token.

    .DESCRIPTION
        The Get-SentinelOneUserByToken cmdlet gets the current users information by token.

    .PARAMETER accountIds
        List of Account IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER groupIds
        List of Group IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER siteIds
        List of Site IDs to filter by.

        Example: "225494730938493804,225494730938493915".

    .PARAMETER tenant
        Indicates a tenant scope request

    .EXAMPLE
        Get-SentinelOneUserByToken

        Returns the current users information by token.

    .EXAMPLE
        Get-SentinelOneUserByToken -siteIds 225494730938493804

        Returns the current users information by token from the defined siteId

    .EXAMPLE
        225494730938493804 | Get-SentinelOneUserByToken

        Returns the current users information by token from the defined siteId


    .NOTES
        N\A

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Users/Get-SentinelOneUserByToken.html
#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$accountIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$groupIds,

        [Parameter( Mandatory = $false, ValueFromPipeline = $true, ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [Int64[]]$siteIds,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$tenant

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/user"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}



function Get-SentinelOneUserTokenVerification {
<#
    .SYNOPSIS
        Validates a token users management gets when a user verifies their email.

    .DESCRIPTION
        The Get-SentinelOneUserTokenVerification cmdlet validates a token users management gets when a
        user verifies their email.

    .PARAMETER token
        Verification token

    .PARAMETER resetPasswordFlow
        Reset password flow

    .EXAMPLE
        Get-SentinelOneUserTokenVerification -token 225494730938493804

        Validates a token users management gets when a user verifies their email.

    .EXAMPLE
        225494730938493804 | Get-SentinelOneUserTokenVerification

        Validates a token users management gets when a user verifies their email.

    .NOTES
        As of 2022-11
            Cannot fully validate

    .LINK
        https://celerium.github.io/SentinelOne-PowerShellWrapper/site/Users/Get-SentinelOneUserTokenVerification.html
#>

    [CmdletBinding( DefaultParameterSetName = 'index' )]
    Param (
        [Parameter( Mandatory = $false, ValueFromPipeline = $true , ParameterSetName = 'index' )]
        [ValidateNotNullOrEmpty()]
        [String]$token,

        [Parameter( Mandatory = $false, ParameterSetName = 'index' )]
        [Switch]$resetPasswordFlow

    )

    process {

        Write-Verbose "Running the [ $($PSCmdlet.ParameterSetName) ] parameterSet"

        Switch ($PSCmdlet.ParameterSetName){
            'index'         {$resource_uri = "/users/onboarding/validate-token"}
        }

        $excludedParameters =   'Debug','ErrorAction','ErrorVariable','InformationAction',
                                'InformationVariable','OutBuffer','OutVariable','PipelineVariable',
                                'Verbose','WarningAction','WarningVariable'

        $body = @{}

        if ($PSCmdlet.ParameterSetName -eq 'index') {

            ForEach ( $Key in $PSBoundParameters.GetEnumerator() ){

                if( $excludedParameters -contains $Key.Key ){$null}
                elseif ( $Key.Value.GetType().IsArray ){
                    Write-Verbose "[ $($Key.Key) ] is an array parameter"
                    $body += @{ $Key.Key = $Key.Value -join (',') }
                }
                else{
                    $body += @{ $Key.Key = $Key.Value }
                }

            }

        }

        try {
            $ApiToken = Get-SentinelOneAPIKey -plainText
            $S1_Headers.Add('Authorization', "ApiToken $ApiToken")

            $rest_output = Invoke-RestMethod -Method Get -Uri ( $SentinelOne_Base_URI + $resource_uri ) -Headers $S1_Headers -Body $body -ErrorAction Stop -ErrorVariable rest_error
        } catch {
            Write-Error $_
        } finally {
            [void] ( $S1_Headers.Remove('Authorization') )
        }

        $data = @{}
        $data = $rest_output
        return $data

    }

}
#EndRegion '.\Public\users\Users-GET.ps1' 1154
